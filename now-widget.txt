Folder Structure
--------------------------------------------------
/
    .DS_Store
    watch-build.js
    README.md
    placeholder-user.png
    test.html
    .gitignore
    package-lock.json
    package.json
    tsconfig.json
    vite.config.ts
    .windserfrules.md
    .eslintrc.json
dist/
    now-widget.js
    now-widget.js.map
tree-maker/
    20250123152619990-tree.md
public/
scripts/
    dev-server.js
.git/
    ORIG_HEAD
    config
    HEAD
    description
    index
    packed-refs
    COMMIT_EDITMSG
    FETCH_HEAD
    objects/
        61/
            41b9fdb076ce2541175259b8a07c13fbf2a663
        0d/
            1bed91d284b7ff1dfb06aa536eb1a66c23162e
            23478b48ff0e6ce89a36490c630d8a1349e260
            f7b9e29d51df4865ea5818eacb7612ef0b4c97
        95/
            45768409b9e91d6344eabfa5d17937657aed00
            ebc4f1e6f4632ad6834c58dde4c68eb1e6e1e6
            a65cde33ce07e925af3475189271cfc712bae1
            29a11a21e2876049b353f10f1ada071b014b2a
        59/
            0def8925b97c60850adc72079122dfc2b23e5a
            f29dc2ab1cfb0e10e51f3c01646e19884dfa1b
            1fbd446e36cfd1bf5864279839b0dffda688be
        92/
            b1408c315d7146da41a59f727971ef7c438d0d
        0c/
            954116ad5a9d0e8f07e7385c52e17f80fea154
        66/
            39f798b8bd467e728f013a9f135c703d5f05fc
            7f9b332db324689c04f3ec4a00362188af9549
            06bf1dcc6ad603a7e0edb7b10f00f59ac17c0d
            bafa2c940a3d811f5072638d816ce425c546c8
        50/
            2110bde89ca5078543e9f7c0988bce84f37504
            263c986e1bddb67fcf8f5cb77207aae905c0ed
            dab7e5cce177e57550e5313ebe22ce5867ae46
        68/
            c90a7260034710612c90b6d9523e360357c181
            404ae01898137975ac5c7a6813bfbeaf85a3c8
            10b2e783c68a0d46fd47b986e20bff79fd8d88
            42ed48f1ae363b39033af38672edfda6fb6384
        57/
            27d9d358562df7afb29dc34431a6a0362c41c2
            27fd25c6ee33a6232f5f7a966db5612499a551
        3b/
            ddc7f2b95e3847dda3e037066a37f745b624de
            df0cdf4a8e331ae7cd9dcafb11193f43dbe3dd
        6f/
            1d936dc5f16aa08058ab98dbdd289184577c4e
            2493b8de2ce6cfe032dd1ddbf6f6f300d6f33b
        03/
            00d95b87df618f90296c0b294eba4acac4e09b
            9a77b25727a8f12c21e15c98f95b8426addb4e
            44044b35c94968912bdc14dc0e6cf9328f0047
            f0486635f6e6f9935893db08b7c3d8ded3d27d
            110983626046142bd533ed5629a4316a7b22e5
        9b/
            43fa2018b2be5485dd312e0ed61afe1b6fa14a
            5a11e6e5cedb81cfb78db06df35f4cb967a76b
        9e/
            6fd413e462708802cba41d7fea24aceb98db82
        04/
            5585a01644041f889c41a830841223890134ab
            537c1142eebdcefd4f0c432cb1572274e700e3
        6a/
            e459515793a3e1e46865e8174c606eb20d2a84
            de262f6b29a5a3db7df8c51ef2a74b9ff2e0af
        32/
            931898cceff53e347f1194f60148c1ffcebebf
            444a218a24b46bc3353d6f625daae7daf3bbc6
        35/
            8cdaf39d83a1481e16eb13fe439a32a2e018e1
            12c26c618907fdd52b1d607db9df1da153c338
        3c/
            d6ee8539e8278ef0bb0c46bb06db2dcd29c69c
            4fc11560c5c5d25a65f0e9ee2dcbdc381484b1
            b2c1fdfdb0144aa2ef62690fba0bceb4c904a4
        56/
            5aa5ab9de48329f16cdb75f0f00b27ba0aff46
            15527c3cf716bbde13af648b771ef4ea09e844
            edc67492fdae41c5a0b819913336166b3edaa8
            30d3fc8fb1aa5276ef0ecb0e339de1d6e69548
        51/
            ea62298b43a424adc82bd223d7866d8cee5213
            949ec99084c61fe7b6c628e554cd7fd70dc967
            8e41f26a61bc3b0bda16e5f78c11aa5b745ca5
        3d/
            6c34c42b358b1de8c4b0ec0c56ab3454d0792a
        58/
            bf2e961df7da1dd2eabb55db599ba8ccc32c3a
        67/
            d940c1b6caf30173d594921eee276475dd9c23
            058257aee776329ee1ec9fe93859ada656eab4
        0b/
            5fcff1c43fe14b8a79ba149b36e6f035c64fb3
        93/
            8ebfa5c6e542fb0c099d644e6c798b7c5edfc8
            4afd5b514ff4ad2facd493dabf847d6f238f4c
        94/
            6ed928ae542aee720549b695f2612625ec6cb8
            dde76b0b3fc517f34dd596e11d9d0c1bd6d383
            cb26a0546e42c523f53816734f40724ee2c77d
            31daa27ce6e0887ca12e8327f7356365b9b012
            02856eec5f2f26143b13e6a13c4271be558007
            a112b11398483a6c7d0142d41c2d45538aec91
        0e/
            5a6b5f9dee9fd19805dcf0179027b05729f182
            aa271a2730d21ea15def24bdc77d0678bf697a
            e5f67d4c06445c23b38afc44ac3ad8f88f11ce
        60/
            dafe417fde965af09b5bb8c8c494d22dfccce9
            84ba683aaf06035966024d09e17f6f43d85ac4
        34/
            48b1deee454d0f5ee9178f4bd350ecc8e5dfbd
            aeb9924c9cb0177cccb60fcb96036d9626c8c0
        5a/
            6aa1e96612cb2789c9831b056c56c0ead3a1f6
        5f/
            ad8c4e104a8faaf4e692395740b79be2183c2c
            2c922dc3b1c272afb4605e211beaec220680b6
        33/
            180e1f05afd18b460d32e6b2fd2818322b02d3
        05/
            db155c140c0745147fdcb22793b419e1453abd
            9f1711f863cde76b531fa7102a322794e994fb
            6e8b94def36db0254056444a185869768eda68
            c62c01887ee8def61d3d6703c8e5ba3de9c19a
        9d/
            717aeb6dbb127a7293538121713d2ebdfd95bb
            7b8f2d7b6a7e9b73d58cb3228f3167e91db90a
            058ea70273bf307c1f5ea20c512516f2195bf5
        9c/
            8d54bd31e8b3145c6ae74033c272b3df9d5493
        02/
            6bf0bd24c174af62156339f571af515a174125
            698acf7d6b7bf08aba112985d7fdf7d7773695
        a4/
            0b64ab8e0e55bf1c397141fd960a0275bc5a3d
            79c424a7511476c8c6276622cb718398f726c7
        a3/
            08639465b7db9dbe33176fa356bea62e04d9bd
            edfde3ec96e39ef1e169383df1072e64238210
        b5/
            eabd5957c15581e6267f1a2087a576e3d74ae8
        b2/
            b6a2fc64478af5bf4c4ce53deb0550ebb0d569
            d59d1f7578b05e96f3b3f8a7d5039df3d06fb6
            73c37812dae71573d0bad870b439e4c8556e16
            b9a29e10bdf4f2671823564fcda5001b83e771
            a1a336bbae93d238df649aa7b5375c49265668
        d9/
            2539e017be941f22fb216d21e9fd175e1cea07
        ac/
            405903dee20a9f7cdab05dd27fbd7044a7d7e6
            8bc5c92d94ed63de04da2f3de46ac666c9a32b
            6814685bdf7716290d1a63faa4269c041691f3
            06d0650003223e4f4cfad57f62fbdca80d343a
        ad/
            c15e442c9ead20e3240b12ed2af4cbf8cd53c7
            dfe5af1f729fcfb3fd8d79fc8b67bf2e9b5ea3
            7984617648a613826343eac673b9ba2ee79aed
            ea1e4a12f2dabbbb8dea14254b245562cea470
        bb/
            18ca3373dff83b51418c2a195048ea90ada241
            a0553b5bdd8e75ff784743930d6679654da0e7
        d7/
            78db1317839863e7487ae6dc1fbf9be0bc76dd
        d0/
            5f572c3ef87f80ba9f621850fef4bee63168b3
            2c49aa9fc59233a4147eccb3c128b6f418d5db
        b3/
            22b2d38901ab4ce036f285a4528a096e6fe273
            d74f8c48094c25fe1efe3f6a830b6f06a8e0cb
            c03684694c17b57b74154e072e8579411545fb
        df/
            f0e87990baf58c9b353b3e94fb2bf142d7b69e
        da/
            9fdbbc8a47156b73abff22239821c24236d73e
            2fb425a054a9134f8f99bd03439da61ba599a6
            be32eb330f911ac10aaf738e3f64fe867729ab
            c515644d292774aa24c1f976f681c1b934bfc8
            22e50db426c424ab77b5faf86a0e6b5c747bbd
            0b7077ae8dc5283d3f3dd0ffd0bcfea4ce1127
        b4/
            a6317c677cfe631ee78d52dfdc6798c38b2bd5
            a7d2c3810cc9cbf52a1763b650c4c3d00ca55e
        a2/
            2af447ae0a0ec27864cd04d37c222048f11f9b
        a5/
            2d82f47f1ed70eb2359fb23bd57e0b30b61c1a
        bd/
            aea6676eae06160dcb38b1dcf69554d7cd3c65
            fde87058ef49b77a03aab58c6b5bf5224e647d
        d1/
            81542f07e0ebece1b66eba3ac1773615cf7398
            e82ac38585dce1ba366ecead38853e0f561264
            c01a22d5dfceb204dcebb992a5cd549a1ae706
        bc/
            a15cb6ec0394dd60a4a954baaccc3a62f18118
            42edcc6371aad542ed89b71f9dca70a1ac6d52
        ae/
            8a63b8455dbdcdf39b68c7d691824869e1dfbd
            7c4df8c9845995ebbde930be9bd2a8dacd6ac3
        d8/
            0ac2d4327f35ff3842322b71cc839986ce0c90
        ab/
            60ba84381018fe6f14ac7fca1905828ec528ac
        e5/
            568b7490a892bce5129b2eef3a7989b2e27c25
            7f417cf3b253ceb6236b68b5541db66916988e
            08193fd472ede52cbd964e71bbb5c5e4c0e126
        e2/
            93a1e801a86de5816341d5d2f74cb20411bf95
        f4/
            e2f5537b22e3e49d147cc21269078fa2a1f708
            5c42456e48dbb8b3f75d3ebb5f2470753218a8
        f3/
            e86e3452336085e02af1a757d97e7ca4ca190e
            5e4abc6cb76edc2f0b8601de0537fe8b9f29bf
        eb/
            bb639b94866154eb2e5ac6f5f25bb72eaa0288
            ab936313750cef326100e9d1308c8c80a6cee0
            aa85cbe21b4472879652d186eb07ae4c5e55fb
            e9fda720a6cfed52698e4597ab742079241944
        c7/
            f425de703039f232e229a2559b1b8e6c0ea360
            bdd1ea0bf1ee96afd90fe57cdf42073c53e669
            cc20d1b3c272932a198c324adfdc82a8fa4188
        c0/
            f408cc8a18f7e3328a666c37025b724df1eb69
            2b791bfcd4a6cebb80c8f487511572e17d6c7e
            a588efd7f6a812f8e6ee156612348a03f01390
        ee/
            eea19c9b05df7c9538aed0d2b5843cefc90204
            6e5eab66021a7ffebfa419258b3502afee9697
            8fa853d0f453a48687e851fc75c0a62293d3b4
            acf8b4597ddb519a6e5acafe2b71cce0b224bf
            c97a6716e7b93c66136cc07d08dc443adfcb6a
        c9/
            b609149b8be9402e630277319f7602913b07e9
            b75ef6fb3ce1068fd7aeb4e11adba9eb4f50e2
            2d7e247e979d081bfa0489994b4c47ebc42d87
            fa4dae10ba354d7aa6d750d0c0e52669ebf9fc
        fc/
            7b4d4d6ac072ed9f5b9157abfac5db32079f8a
        fd/
            1043604bd411bb80db1cead64d1bb80f94df1d
            3416e3a89149c7fc05f1a4d68865eeaf084b71
        f2/
            7f6437ede634c8448752d9d36f8f403c91ac25
            8a88f95b407a93c3a233560ee467e781eec4c2
        f5/
            0217aade19605c6adc9201ae72f66e2cd7c252
            2dee2f102db29cb6084995cf92a214cc718a1d
        e3/
            a962c3544181e63d0cd1615f6ee317b8407d90
            7ce2ce04c6898abb2092fd5de913f2937da8ae
        cf/
            ded66d3112ac64906af3ae1ded294b476a6554
            4cef17ac54caf15c6b98e6c33139291e15e2d6
            d226d1ea0ab463c8a97a25eae35c96dd72943f
        ca/
            1015d8f83c6e0a977a711b598ef7ef62a47077
            7c45f25fc378a2c4c3f1a4bd1a7bb7faf3cb62
            26e5471b30ce52fffea18e2ece369f3f117076
        e4/
            0eaaee8f8c281168c88f234f87bf5ada1221e4
        c8/
            2335ba032ed9a3ef5807d290020fa1f2bdae4f
        fb/
            1e52bd9a78e29e1a306272921cef8e335e0226
        ed/
            09feb6f4a404e0370c899d7c7e739221a79874
            93cfe1b7ac7e254b63b286f820de9b8091516d
        c1/
            3ac6311fd1c6a4955b7a82eb2c371252d1fe0e
        c6/
            bddae2c68ecafe24e15a361b5c671e41e57c9a
            9938e2de94aa11a0fd6017535c446b21fe16b2
            a873cfff752528246a607146abd016d10236de
        ec/
            59f786cd199b50be0d446a1e5120bfd1283d37
            250df32bac73a72ba2670b5bb756218595879a
            df53e80526a5171a451bb3827c639f4b9e719e
            348db846320b05f75d42f70abc40541269bfe9
        4e/
            fdaa9f17813af05c6090eb614ab60faca8b596
            f25997242a3cacb122b56bfffeaa18f709a2fb
        20/
            5403aa966e96d446f67b3140b2b428e3a886e5
            5633187bd5003440435d94a4887a316ca0d87a
            a12b47182ece254eda09a59e5c73af1ddf33c9
            970748609031534b15e983f06c089dd78d3522
        27/
            c28151adc595cee404ef25eebbf83f0a8b1e7e
            30e0064a7c2a50aad315d30697e5c79f113465
            f7584adb1280966b61a8956731cc758c85a93a
        4b/
            f57dda014c5798f6502a28db0b8f1413abbba3
            3f3a9f2ff6647c93b3addf0f08b4406f32f0b8
            ba8877c5658d108d7b286858747c6d2a19d316
            725c4317a197cfabd671c516e90c049113a3f7
            d3a7b63a5f78f67a0c0809d43d26e09869d36b
        pack/
            pack-aa43414cfc788653785ac4e35d12bef2a73cefd9.pack
            pack-aa43414cfc788653785ac4e35d12bef2a73cefd9.idx
            pack-aa43414cfc788653785ac4e35d12bef2a73cefd9.rev
        11/
            29d5e8ebcbb4607e892c60f3a03609aff703d9
            bffe564d064c2062801386067f3d3b75ac71dd
        7d/
            ffc7527ecac26bb46be3e90ddeaf1739acdfef
        29/
            8ef57625f061ce2bf033f8d524d10f1cb16ada
        16/
            6a55ffcb232573ced845bc85fd3e7d90c8c162
            b1647601f18b16afe86b4979a1e95459207be8
            6bbdfc656125775f2058f86c691d2c175c1392
            fad59765d50c0c7549cff736f5afbb9b43c63f
        42/
            f25837e340d226ef75d44223c664ac26733e25
            98ee2c60317457bbcfc321e0ed4da0c77f53a6
            b93f3d0f04cfe513d336431489b7b917f0822e
            f041c4a5c6895ac23c01232f26e840a097d45e
            964055a63562e0c7dafb7d03861019e26ad7fb
        89/
            fc12228186df702ba73d54f75c39ab13b885c5
            67fc96eeb20d05188ddaa10cdc66b9b20e07d8
            b6212c256198eec1bc85878f878a42ff52b407
            22f58277fb0c4b5ee6e627e9be3bb72de2d745
        45/
            02e58dd7cbbecb70e05a6dd4ec52d00ea9f5db
            0ff72da2237f5547eaa35803725b17179af8bd
            36412cc4a5149a8eb597f09fe2bc303e1c89ac
            e60de8d07de76abb1a547abff4976260075ea3
            8609b1de9f86c9bd9db3e5fd692a82ec3e4cc0
            955b2a0a859c8b5538ca6e6e66ce9ab33b5259
        1f/
            446b483905e1a3c467f9617e82d6c1741247ce
        73/
            205392d35ae221ad4c46206db62eda3c967117
            724624134db93d2e82632011bc3192a12de117
            8b4ab71a4983fdbb54e81316cdc1a25f91c60d
            d04501a066e09f7ffd50443d6e60aafdf3bfda
        87/
            d26c5698cfc1b8b3a8549b856697820405d483
            da0076a2ceb7073aa59e7b298e7d109d64bf36
            46ac9267553c3984b678beb004638712aecb8e
        80/
            a1813e2a0beccb926e411171ef68979244ee8b
            a1219b1a9858de693247ba7cebc5737e072885
            308c335c72357627cc44ff5b581548f820362c
            a80bebe63ee1e3a070df7019df92a13b248e5d
        74/
            bf45e178ca9f03771034e3cfa09c16832a0b7a
            dbd5f84dc35a27922102367f80a9a44334042b
        1a/
            6f6ea940659b4d5b5a19d888bbd81089f8fd9c
            b6db2ba1198445782544640104c7cb0f05b544
        28/
            2e17a90b9ab34eb893386480f5d9a4f633834a
            f622ca0d833c3a540cc96517cdfe1ee341f764
        17/
            8d5dc6f659c4d0b18c16444373fb719b1f3445
        7b/
            88eb1c4e07090313382eddfaa24e632fe60b68
            772fbb8aefa65843c4a211883601968157dca1
            61ee26f7d9e80e9aeef26922a1497faf6696b2
            ae9c671ccf3bb43184ff0fb0a7b3ee9d6c7013
        8f/
            a80794166950b6def0d61892fb1cbfb10b2ffb
            070ded6f5983891dad38b5b8322623b0a0ee6f
            4e529819e7c7f9782fab8f060742678876b1a5
            519af6798173aeb38b9b7d5e71dd24ba216a82
        8a/
            a640484b05712cc1f80ac51ce236d5adcba91b
            0596b831f7bd003ec1ebf7b212ef8121d1487d
            b34ef5822e3430320409222b2ff489549f94da
        7e/
            2f6cd060ffb9164ff1656c5ecc5856b0f4a544
        10/
            98c7cf3ee7fc19bbc5ef9b20ad7a0a7cb457e2
        19/
            132e0f3a425e23e6a86e5fcbebb6e499689b31
            6c601b443e63c4efbac41419f4322f1c5a8ef7
            24f789208eabf7d81a139b918ab52bdbade856
        4c/
            df010fa8afbacbdc53f97be810e0e72c1b6c2a
        26/
            438b46b2a3b5a7ff14cf2315a29b4508eabd93
            234ddab79c1ba9600c709dd6a07769d8ebbbc9
        21/
            ab40594b5c722d47b35c2411123edcc5bb719d
        4d/
            a86d06e1b3ed6cbadd1fe097b2e2147c615b74
        75/
            3ab02d72e3bc7b965ca9c126b1120301ace872
            a3e75f2971c433386d5141e8342c6e0e61f7f1
            089bc200e14b8d3fb8fb7557a8211e43e40174
        81/
            fa94e61691785072b04f482effaa293dd904cc
        86/
            e70709703b36e815c64fb52f43d98b528416d8
            f5035e6a1bf8743808df4d977624dc78323059
            11886d8fafac1fff8ff1ebd067696d3d8e52b6
            4e252d710cb687041fd5fc5881f625f4ebc4e9
            619b0d77d043ef1b3fb961cfef848aca0f1f55
        72/
            d9011889d632a4d4a77c13fdec0ef238a9c45d
        44/
            073e56704227dd17b3043a4eeb3645f3e88f01
        2a/
            d2868e60682b021bbcb85231cf9ae2790b3329
            7c23657c79c808786beb481a9181bc9b259f31
        2f/
            93a9de5570cf5019b6c9a3ee29d6cae66ce451
        43/
            304d1d3681f3f0094508b7ea0695e898095159
            3fd6614efe88b81c72c88a03c3036d0030fa4d
            ae1b2e753356b24b5faf2117a27fc2df408e75
            b834ded90c64eeb9e91f4479cc949611aa6673
        88/
            602a54fc687ad63c13a05a5abb38715541d52e
            fd4603f255887601130b67b282ae1f5bd94c82
            c856ee177cf963d2e2ba6dc9f93c52a5640a07
        9f/
            362f27d0876df6f74de242dc21af746f639f0d
            41bf512be51617a01498e1988ded40ff0d37e5
            28526d128f8a68fcfc8ca5cc78cc270a2cb599
            6b85321b9fec1fdb33c3e9cf22a2e91cba63a4
        6b/
            87d0405836181dfc8cee43c0301afa3a2bb45a
            4ac728dcef80bba17b76753ef966c2259e87cd
        07/
            6d1cade9b66260a83b9d8204eb8ce572db70d0
            6f6e3b07d02f53d37104254a0b811d744c9a0f
            a84bc34763c93fc1a1acc50e1d072b29996468
            7fca6183dc8c264239bb85396907e4955540b9
        38/
            e047c04a56adf3ddbabea5752166458d400ef8
        00/
            11a3646949c61616bb009e0d09b57ac403350a
            149304d0d9ba4c0778dcd2a36c0839f324385a
        6e/
            fb63145cbde49844b57f14629d8a045b21af8a
            af3ff0fe28f17428efc8c1214cebb7d85af4e6
            b06e80a92191beebe9364695fb68220364e47c
            42ba65af581cbda5a3fd4acd7b2e69464a5257
            ea0f830c588f8e7bbec5de11001691f6e1482b
            9d629007391203ade054036386db28c7266494
            9e1239e62d4221643a80ff059d56ea33805f96
            8dc201ec5ab82f69f8ad483ef77da9fb8b2931
        9a/
            9c93a2b6b71133a4d5d75f0c858f1cdb9a3ff0
        36/
            3da8a35b5f07a3e2bab2ebef7ac2bec3521fbd
            c252198d23c4b49bb7987c2e0a6684e051e7e1
            d49b8e98b8362bb59c51cd2836af3b60f49568
            1b927a3f1835d33e3f5342731b9c78c55a9f2f
            43d0b11868cae3c7100424e00aa81a482d63d6
        5c/
            b734ac913681103d8d8bfcfe978c8c846fe7a4
            c577ab7a0b8241b7dca17a6277945fa02cd496
            3f8916b61317f8dbcfd5608f099b894d0065a1
        09/
            ecb28fa6168615f36dae9736295c0f5ed35c1a
            fb146a600812221c0311e8af4e65f067b13df3
            4872780bb3a74190bea6c9bad765e1f335c3c7
            2eceabbb80f6a87b7753fd80cb404902b6bb2e
            97b82ccef5c6041723267cb51d6ed6bdc60aa6
        5d/
            ac339ff0cc9923570b3c1b1e1a063e5ad97a38
        31/
            f8136f555f9e6a1d646f79cad2ffce56fff7ec
        info/
            commit-graph
            packs
        91/
            f5d7fc65fa61b030680e93ffbe849fa3638f4a
            372b0bf1589ba3604bc798a6e18f0860becdf3
            1aeb9ef2481be49527a45b3d688c5683226155
        65/
            df4894e987568dd7c66eadeea6d133c621a5e9
            085eaf197e6c11755d569ffb3fe5e610d9ac8b
        62/
            7bc102ffd735832e83859d98bb50c3c667e276
            d8a94a159b4550871c9d63f3be83374a5e5ad6
            9f2cf4671a613669b86534a1b5196899e3a7ce
            e1e01b767a2a65f25c58854cb7caa2c3d2cb92
        96/
            d753c3136c7c49170f41dc0844b462e88c508e
            db92d79ff5a40234fe4f649136dd14bbadba4d
            26262930141d698a372da0bdba247c6db5575c
        54/
            fcb125a2a62bb78251ec28baa67b8eb3001221
        98/
            a2b8926db2da3228f7930535588b28011fd20e
            8f6a96a3de7a8c122368d289134413c0be35cf
        53/
            258bbfa23d5a8a9573bae627dcff2b37d16502
        3f/
            7dfbdd5e1309afca138583f7390380e333a4db
            e5ec7f273061b14ac79608530958a1824e6c17
            c19a2d7fa876335856b284e658cfb7ac0a8230
            c2d8b1687bd7259bc8bd2dfac7ebae09ae6937
        30/
            c1c032cfd87b5af4614f42bef84ee302d6ec89
            858014af9bdfe33398b9efab8710030f5e112d
        5e/
            869afb9802f29822c0712048dcb82132b8d7aa
            5acf41a214c111fb730248eddaae78b68cf6f0
            9d955d3e759273c1b33994dec9d6de30557c5e
            e30d871380a2620daa8b54be93d55a08cd13b5
        5b/
            0e5fa00311281ae1e8c8ccc4f02dd4aabe2d45
            3e9291d34e04e5c2e5c66a34323b42b42ee668
        08/
            c351b4b877c2949f957537568fe412dfbf1a6c
            61e82c3f6c8f981a8de44423520f1027683528
        01/
            0e8d33b13a7d546891e55220de91e52f0cc66c
        06/
            e188d6a67c351a98927ccc7410632aa916655b
        6c/
            9ce305397cf9da61106dfca2360b6a7a953ac8
            64cc4368caf07e8cb4f72fb54b376f65d5ba41
        39/
            bd2941db1912a59ab994eed0eaa2e7e43d4e69
            d79d54dfbe613df759f2d94131e9e17ad49929
            b38b6dac20c69c5e3ab882ae79f3f62a6b85d9
            a699ef57a9a267493830f5fc80bafd3a10c478
        99/
            1fccf78c74156b2dd9475a76173c55d38a6fa1
            a678f543b4a834f7128b514635f0156c361def
            3d23a0ed2028a21518da754410a79cf8f42a1d
        52/
            d2d33b7191096f0562def93532843866305390
            689ed69f09a2c9923973fa88931200aa9fe2a3
            bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6
        55/
            fee0346ed25bf68d71c44519a0fef93058562c
            7f8e56687df28af624a0412d1160c902497b5f
            0b7f866db18f87c2c71dc33b1d6e131cdf5a6a
        97/
            827b9f5793a231d9c07bbac63f63922413cb68
            dce474ab0f6c579086c09047702b14d03b674d
            8b94716e958fd86d2fb654392384b04943ffc6
            af327df13ca274987afb70173f7d00dd3b2143
        63/
            068a1a9a4ecc8bbd689bb13d3ec51a45205986
            78b0662a9437bd9c093fd3614c3f24db27e4b3
            d5e8be76917b28f4dac51c74705b1309caf586
            86715cd698cc7ad6938419f1a16d128976e326
            872d01fbe754945a1b8de17a7c273d4851dda5
        0a/
            447775eb434314a22739b6dcb7a7dd1b277de5
        64/
            863f33674fd6f4091d17276aecfee0aefbd04d
        90/
            f906928e90bc697b38bfb5a6d1ca3092e269ff
            64e4f46d72ec0ca65903f2ff8ae5ae39fe9c9c
            0aedc7ec356238cd8897b83e2c5710986c190b
        bf/
            44611bdb79b0e8720501130bff17c32dc33f36
            f81bdd16b1b6f7037bb68d4744210d8026dac5
        d3/
            e07506448b07950a2e63ecbb795c1d8dec3420
        d4/
            0b035f05b595509e1170c2a8d6905b8feb8164
            d8e533aceb1e0e9e6d1e016768dcd90d9a8e69
            af8f0f00868923d420c656e4b3097f7fada0e1
            498b0afe7800f64ccafa004c68b53ddd49a251
        ba/
            036ccebad2155e4dbac6efac3ef9658598fdba
            b17d16ed4fa9adcb4c66c00774be1da43623cc
            21acb967762716d350754c33966b67a2e29dba
            aca89c7f09ae5583a2d3e6525f8eab996dc5fe
        a0/
            f5b25abf34f04ccb65fb3a4625f2383605dce9
            a6f06e8e6a5eb8f9d7cc8fa0215564d4249aef
        b8/
            6d679f0f5be45c486dd86424b96274f2e2cfd6
            3454b7dbe8232d0fb71d14dfcfd875721c8695
            40b3028bb36244ade1f96dd332fece421d5283
            b54df589d8ac8ae22a04c7368f661b09cdc07b
        b1/
            f4ffe00d6a6f6bc964e6b90c8fe3be61da34a4
            61ca5d5401fe48210be97ca9c7467dc8feb1d4
            3f1260813460ff2a52b397fd9afc244baa3466
            abe62fcc4da149e3b3ef2548fd6c9840970c86
        dd/
            66c69b3c45c91f3e76532546b1ed83f68e6f70
            466d8ece7a8196050ab7b38731d974d72adad1
            8a3c7b94291bfb270e45bfd9cd3e2a4cd13778
        dc/
            c962f642acef46820a5bde3ac3a80c97650319
            5fcfa07341e74b896bfb73f6656cdd91f02bdb
            7e130f8b0ce6104d5e45613c2f2790a0e4e10a
        b6/
            64f83c34adc0a167f9b73bcd1bc574770ffab8
            5646eac6a468808a89c9dceb7fc1d86e8956ff
            27f4b6833d269da9dcf533f62b5d659ee06597
        a9/
            e4500535755bbbbf954ba4cba1c6d1f2539c06
            01a311bd46c91c4f5fa568a8d376dccb4170c9
        d5/
            f9f1912553acb6c525b8e6d9b6118c3a718abe
            47a5c3363a5ed9f3fc3d541512deb5a90f2620
            d1d355c5c298b51a732fe3f9a1b6b7a4c79b62
        d2/
            26aa956e320079f901e039cabe932436ad126d
            924680f748f4e664b9a1e4cf184ca703a8262b
            57ebed75fe30f7b2a1a66c1e576a026c29057f
        af/
            c50d5302973ec47809cef020c70847fd344880
            922135ed7ac13560f4a3046f5133a0b22e6ca3
            b7717c4260b398f3606e573c2c3b3d9c6b695a
        b7/
            8c5d51fc0459118f5d909056cc70e315f3a9be
            2e40d7aac8763c2a031021c94771c7164000f7
            7322e628c474abadd5b973b274ad18a079665e
            63855fec5af8e7e794b455e6b182f2f46b980e
            4eb2aa23deb485ed0d3270f085a9a24acbab6d
        db/
            0bc975efd5bf66f5f5c956a1959b7cb41dbdca
        a8/
            20401ef09631343712f112038efa592d402731
            85ea39949c1e73f02101af605bfdf86b50e78b
        de/
            52a1cf6cf74ca85a6bc0d43b5feb1626fc5b5d
            18fe6b1e5471ac4894623a9e56e50e7592b646
        b0/
            411f40a0b3357071c5ad4cd54347f3726125f8
        a6/
            bfa34af10712d601454978e625b259f1d0109e
        b9/
            f06c29a555d8814d3f5979794dafcf41bec893
            0465530e18e26c58f3c99c4bd278e3a32e2019
        a1/
            682dea98f1ce99a69fe2125b3f7c766f3ba7e4
            c7f15b0227352f7dbca6aa45d4a7c03c53c2e2
            8a6dae58ffa39b26242c5d6fe5cdd89b7321c9
            272eccebf6be22efc0545dcdc373dcb59df037
        ef/
            48f6f766e15909b67c0bbc4abb36673cfab027
            f13676ae1c7be0e289d8e5446cfbf858a816d4
            0803cf839c5cd4b61a7e3d7ebbcb8700de6370
        c3/
            f07ec9fd2ca19d3a60254f9e992b8e2b8226b8
            cdee6a27bc95970756c775e84e2eb9be9c7e2b
            2b463bd84249738bb85663a7ff1213ccbb9bea
            e8f5a675cc44088e217ecc5c3c1e3a3cb8c169
            6232c038da2371ee75dde639e5b4bdd5b99cfe
        c4/
            490630ba94180a61b7fecf2c79be63c9dea7b3
            f01bcf4554b08a9f3d72b1ead8da5c5a292064
            d72457560c63b8c01e47309b23483b4afa5633
        ea/
            b771c9aca1010406f1333957119f7eff6107ac
        e1/
            35c75c7e3c1c7b498876af1b0ee075a9fa6003
            8ad4fa69650294ef9b1068d0afd99d56ebcff0
        e6/
            316f5abfb69d06630c73999d884769dfae9ef1
            da1e268a1ad97596dc1e6a6232a58d2e7dbbac
            6ac1029e037631d87b925f18ec2e3dcb8cfd97
            aae0590f8e819f4af14ae9f59770e931761263
        f9/
            f044a40409d7eac6ebe5ae5547c4181230bdd4
        f0/
            e0e1ac4c541b863371221db2e6be0de4ed0ebd
            75f750bb28dc31150b7361eb86db24d28556f9
            75e1dfa10efec120d04659d8977904bef47ffc
        f7/
            97acba54ef8977cddaa2b3810cf16776774ebe
            2dbe6717c4151662f6862cc0f37b2381a3d18d
            6f2d86f4f2809071198416fc2dee2dbdde6693
        e8/
            e86fe715b456566cc99449d35f97d42d59555e
            d938702687fe89b2d79743607cf115b228aa64
        ff/
            6463f4fdfa117349397e805544d8830fb0420d
            80bc3ef3b3d42ffc3ef9efda12dd9e0bae7cce
            09497117cf705332a1da92542d4957eea167d3
            901e65429cd110bed9cb75d29d3e678db60b4f
            c776a935d8a49e92a0b2ff88982435e5806c97
        c5/
            1f187e4fcc690c195c1f9e9f51a8a4f00fd470
            f4b4a48baf47a86359714bcef4990b6c280970
            9296ad1870dbcd2dbbdea618a627f226e64c83
            de0bf6de18815fb397be2ab1496c6e539e93f9
        c2/
            ab1548fca84ea64b938f9f9a7c67c37a7c36d0
        f6/
            5162807e85d69e970aa09be44952021b6e3226
            6633354e53a24c85a66a6918a54eeac313f8ea
            46e304fba1bf2fabf2d9380dffbde6f8853581
            63524bbbd92ad5de22d34baa1868552e856c5e
        e9/
            69dea8dd60879f6301f9d51a5ac54cb4f72b1b
            43b11a1c59df9b254529ec5dff97ef931988e5
            7f4754ace2cc066ae982e15fabf42b5dfa0f58
            867752e0a57206b039f939cc60207e95ed52e9
            381ab9447cac50eae7d872f6a0784d18a57017
        f1/
            0d024a29417d08bafdc458717f9644bf25bb67
        e7/
            747689ccfd6a5281fbf7b66128a060190489be
            b44a0255ddc5646b217e71f7ff76f62fdc281e
        cb/
            3e74753f4988af57a4f1883e21eec8a72f83f1
        f8/
            ce87ce79d423f0488373e07709b9e1242662f9
            0fe7419c3a8f02db6c2fa0daa3e35cc8b61ff3
            2c3c68de1ce886414b2bb6b822496023fbc6c2
            99833e4edf33e82917eb804fad2cddfb0d5520
        ce/
            de4556b873a068b7519b5e22060e19cccc0ce7
            546737f0809bbfa6256211cbb522508cde1ba4
        e0/
            78845a0fadbb28bffc3ccacd15139efed50044
            5347b37e39037984ebcbe559d7ad3a9f9d8209
            994ea435c39eb1f7fc37755289d9d9ba06a999
        46/
            06c7b92470a32b5fa875282c5aab32e46f3030
        2c/
            4d66c52203b98bfa61010f6f5ebc649f328837
            bf65f49f0308816c78edaeded7f6515ef0eb3a
        79/
            58f9b012d012ac0869c8b0cd64b49924dcae18
            071904cb1ac464ce6f6bdb25143d5b3d6f6150
            d4126859140b6bfee04db1e46a1c16bf26a2fe
        2d/
            809b29ec87acceccb8a53f0c94d455aaac7713
            648c6c691220397a663405e146c8d9bdf6a9bc
        41/
            743e06ad2f6cb9fbbf9f1476536782f2384fe6
            cd0cf3502aa331f9c1a1ddb3f76dff19926018
        83/
            b6ae6510968726ca8c69345485b012f7136d67
            9fedc2596f8d8a809f3a9631fc5ddb4d80b0fe
        1b/
            e00a99b232ff0e565747f9a6b3e330ec80aaf9
            2bec7d1c1b724a426386b5b7563e419aaf3a96
            d905bff8ada0cd296ba2ecfd9eea19b32567f3
        77/
            1d28c7efb06c4e03c693e626784f2e889830fa
            e124e21a288ca59c9f2379dc797e3a83fb58f3
        48/
            3b15915fc2bec33bbb32fd90c31936e3bca0d9
            32a382c03fc31c1e01e55f0b3b3be91181f3a6
            4553aa2294b619e7d54afdff946e8600da7d15
        70/
            c178ab501505ca3e21c2adaff44c82ad953dbf
            695427baf2ffc4b769a6a7c0c33ffb014c90fa
        1e/
            919737125054abba023599f40c4806f994c404
            038b6ea8f4a97901f79a19b5b1d64a3c8eb876
            02343b8804e903857bfd1e83085ecd660bb15d
            80026be9e6ec03549d1fff073c48f3bb31d721
        84/
            917d98234f62dd96fd2f7e074526587778d93c
            5ae67ec86bcb8936cfb38bc4975a32b4964ef8
            0281da3886c7f784906d6486b455ad6cf622a5
            ed7dcba8ba31b3e15f817942daa1a388e095be
            df005f3edb9b9e1aa34486e4d62ec797a0fae4
        4a/
            4aa9691c0882649ea82ca8ed65264aa498fd9e
        24/
            212a9c62dd6ae1abb232ddd55b1218a82e1a0d
        23/
            26728eb5f0b79196cb1d54b4f4fe8af2870a62
            52f5833ed46946cd59cb16e2f3271c7afd3781
        4f/
            6c86e926803171edc0f151d132f6e0a2b862f2
            11f4def93baf5a99bd3f047d6b16df2c220b4f
            f6c961245bbdd134c68c46734a542f36bc2472
        8d/
            51d071d37bb398e326c82bfc4ce688d30e1a54
            7003b4d448e69b71ea96f03e8bab92264efd39
            3d7e3b9552eb4fdd477ff7462d5efa3c78d34a
            2c1249642cd9b57eb10c40bc3b7bf49e0e8247
            87badb6c8717f70740f1fb60801c67b45f1f65
        15/
            39e51fbf1cbe46dbc95ad4fd922871ee5971c9
            3709bd9dab4bb27a0bd658aa2e3fea28a4310d
            0e84dc34e83f54430182bec287b8e8366598d3
        12/
            66dcaa1457f05e2658d26742036b0f0d634e8b
            065713017ec55754d044e7af5ad749c41051ac
            0529e810df68e3d6a04ac39d9f11b5e92ea91e
        8c/
            43d8a42ece817bfbf59fbf2d8b6964e1f0118b
        85/
            d9bc7ea2750270029851a3a617266ead624b38
            f7246cb193865e7d40918ca963c97390ebf063
            f94feb9b6c5a450d161b2fd0d2301c7bdb1a00
        1d/
            af2c322dfd8b855c2207ea38bc2339c0fc749d
            2404f5e0bb34e26cf34196166e790b6ea9ebcd
        76/
            cd3971687e9af01b38a068c8ca25df7d4a3bc0
            d3219a550a2b7c8458c4a0b6e9ea1ff40c9cd8
            c624d102063b1fdf0bfd502fddbaa593ab33d8
            ca884e1a958b6c0d8b1527705c0458da1cd9ce
        1c/
            81342a25551c476799be879972279d73bcf0c5
            748e687c5294ad3af7097e4dbd379edeb09858
        82/
            a463e1b715c657c61bdb54b49076388ce75ca2
            6f88990c3175667a3f559bb255e0a51e88c0ad
            8d5d2a86d9420d011532a27f419fc7e095718b
        40/
            579731c192ddac71089d7fc283344236bc5721
            3563344a1335045857eb3427f661fd60da791b
        2e/
            b4d98a9d2bd289e545d11557cd9c7f008262d5
            5fe3376367220b7349e301ebab32331ae3d420
            2c9d224b50a9979320d9e16b34e3497490550c
        2b/
            c07729af9774f395201d407aa38a705c70c605
            94f4063997075d4f421075a6d95dd22d24d131
            12e9069a81a5b3fd8080c0defc229f75fc9c5c
            4a50aa49146e589c2d842f0aab9666d8aa8723
        47/
            c1b674131106d8a88dbafac7bd804567b5f44f
        78/
            e0e2f67fd9de48a05d9fd6c6a00802fa09f2d3
        8b/
            5862d3ba435c40cfe168b72eda2a1af12df3a4
            2ce5601ecfeeec5038422f174cd046d75828be
            915ef987bc47c906fe4875ff3ae9d0c0661588
        13/
            6af5672c7aef866f42d26aca53ed648fdb3aa8
            b01fa06cee78faf159ea046df01ef4df5aa044
            665b9e9fae4aa2cb8889849120492de8f632c5
            8d740ab9911db01ef79574b0574ec3061ef83a
        7f/
            6e79d5bb18c0de0173c7102d3876a2db7ac287
            eb823891161305e907607a0425f5d7b46a94f7
        7a/
            c67950954f28e8e4f3098984cf43d1aa64d6a9
            d72b4cb7e0dfec66de2a9562e497bbca159a87
            383674ded2cea74069ddda64942990c55e0678
        14/
            643ee698debd2b51c7ebcd4db60596220ae0c0
            89447e89fdbbedd9ca6a7e559c256e4a91eace
        8e/
            5de3529f15b9c2af6039b95a9b37c34be9a78d
            f8c3a756cb538b29807db0db74d6f278b30691
            be28c8207a28813b45145ded0206537c010a3e
            1a7b28a2853f7630d5e954492638dbbbcd691a
        22/
            67f289a05ef5e3382d3301a66cf02b333dca05
            79b35eb06570caa66b79fa1fe9873ef77f3936
        25/
            4e325d39717c020464c31634ce1befb3e357a7
            8274ad01b549cbd6aae9b53268a7c1f69b1c37
    info/
        exclude
        refs
    logs/
        HEAD
        refs/
            stash
            heads/
                001-now-panel-opening
                001-cleaning-code
                001-a-button-display
                widget-display
                main
            remotes/
                origin/
                    main
    hooks/
        commit-msg.sample
        pre-rebase.sample
        sendemail-validate.sample
        pre-commit.sample
        applypatch-msg.sample
        fsmonitor-watchman.sample
        pre-receive.sample
        prepare-commit-msg.sample
        post-update.sample
        pre-merge-commit.sample
        pre-applypatch.sample
        pre-push.sample
        update.sample
        push-to-checkout.sample
    refs/
        stash
        heads/
            001-now-panel-opening
            001-cleaning-code
            001-a-button-display
            widget-display
            main
        tags/
        remotes/
            origin/
                main
src/
    favicon.ico
    index.html
    .DS_Store
    global.d.ts
    index.ts
    types/
        env.d.ts
        types.ts
        css.d.ts
        theme.ts
        config.ts
    core/
        WidgetCore.ts
        EventEmitter.ts
        WidgetStore.ts
    test/
        auth.test.ts
        nowWidget.test.ts
    config/
        environment.ts
        security.ts
    utils/
        nowCache.ts
        eventManager.ts
        nowStyleUtils.ts
        domUtils.ts
        dateUtils.ts
        buttonUtils.ts
        pingServer.ts
        nowAnimation.ts
        domMonitor.ts
        nowEventsUtils.ts
        nowWidgetUtils.ts
    state/
        state.ts
    styles/
        nowWidgetStyles.css
    components/
        NowButton.ts
        now-widget.code-workspace
        NowWidget.ts
        NowPanelPost.ts
        NowPanelContent.ts
    lib/
    api/
        auth.ts
    services/
        ApiService.ts


File Contents
--------------------------------------------------


../now-widget/watch-build.js
File type: .js
import { exec } from 'child_process';
import chokidar from 'chokidar';

// Initialize watcher with proper options
const watcher = chokidar.watch(['src/**/*.{ts,tsx,css,html}'], {
  persistent: true,
  ignoreInitial: true,
  awaitWriteFinish: {
    stabilityThreshold: 100,
    pollInterval: 100
  }
});

let isBuilding = false;

// Handle file changes
watcher.on('change', async (path) => {
  if (isBuilding) return;
  
  isBuilding = true;
  console.log(`File ${path} changed. Rebuilding...`);

  exec('npm run build', (err, stdout, stderr) => {
    if (err) {
      console.error(`Build error: ${stderr}`);
    } else {
      console.log(stdout);
      console.log('Build completed successfully');
    }
    isBuilding = false;
  });
});

console.log('Watching for file changes...');

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/README.md
File type: .md
# NowWidget-vanilla-ts

## Overview

NowWidget-vanilla-ts is a lightweight, versatile widget designed to seamlessly display user posts on any website. Built using Vanilla JavaScript and TypeScript, it offers a customizable and interactive experience with minimal setup. The widget features an animated button that, when clicked, reveals a sleek side panel showcasing user information and their latest posts.

## Architecture & Technology Stack

### Language & Frameworks:

- TypeScript: Ensures type safety and enhanced developer experience.
- Vanilla JavaScript: Lightweight and dependency-free for optimal performance.
- Vite: Fast build tool facilitating development and production builds.
- CSS: Styled using standard CSS with a modular approach for maintainability.

### Bundling & Build Tools:

- Vite: Handles module bundling, development server, and build optimizations.
- Terser: Minifies JavaScript for production-ready builds.
- vite-plugin-css-injected-by-js: Injects CSS directly into the DOM via JavaScript for encapsulated styling.

### Testing & Linting:

- Jest: Comprehensive testing framework for unit tests.
- ESLint & Prettier: Enforce code quality and consistent styling across the codebase.

### State Management:

- Custom WidgetStore: Manages the widget's state, including loading status, user data, posts, and panel visibility.
- EventEmitter: Facilitates event-driven interactions within the widget components.

### API Integration:

- Fetch API: Retrieves user information and posts from the backend services securely using JWT tokens.

## Features

### 1. Animated Now Button

#### Design:

- Circular Shape: A responsive, circular button that adapts to various screen sizes.
- Text Ring Animation: Displays the text "NOW." repeatedly around the button's circumference, creating an engaging spinning effect.
- Color Customization: Easily adjustable button and text colors via data attributes.

#### Interactivity:

- Hover Effects: Speeds up the text ring animation when hovered, providing visual feedback.
- Visibility Control: The button appears only on the homepage within the first viewport height (100vh) and hides upon scrolling past a certain threshold (300px).

### 2. Side Panel

#### Design:

- Responsive Layout: A side panel that slides in smoothly from the left, adjusting its width based on screen size for optimal viewing on both desktop and mobile devices.
- Theme Support: Supports light and dark themes, easily switchable via configuration.
- Overlay Effect: A semi-transparent overlay appears behind the panel to focus user attention and prevent interaction with the underlying content.

#### Content:

- User Information: Displays the user's avatar, display name, bio, and follower count in a clean, organized header section.
- Posts Display: Showcases user posts with timestamps, content, and engagement metrics like comments and bookmarks.

#### Interactivity:

- Toggle Mechanism: Opens and closes the panel with smooth animations. The panel can also be closed by clicking outside of it or pressing the ESC key.
- Auto-Close on Scroll: The panel automatically closes when the user scrolls, ensuring a non-intrusive experience.

### 3. State Management

- WidgetStore: Maintains the widget's state, including loading indicators, error messages, user data, posts, and panel visibility.
- Event-Driven Updates: Utilizes an event emitter to manage and propagate state changes efficiently across components.

### 4. Customization & Configuration

- Data Attributes: Configure the widget directly via HTML script tag attributes:
  - now-data-org-id: Unique identifier for the organization.
  - now-data-token: JWT token for secure API authentication.
  - now-data-theme: Choose between 'light' or 'dark' themes.
  - now-data-position: Set the position of the widget button (e.g., 'left' or 'right').
  - now-data-button-color: Define the button's color using HEX codes.
- Responsive Design: Ensures the widget looks and functions beautifully across various devices and screen sizes.

## Installation & Setup

### Clone the Repository:

### Installation & Setup

#### Clone the Repository

```bash
git clone <repository-url>
cd now-widget-ts
```

#### Install Dependencies

```bash
npm install
```

#### Run Development Server

```bash
npm start
```

Navigate to [http://localhost:8080](http://localhost:8080) to view the widget in action.

#### Build for Production

```bash
npm run build
```

### Usage

Embed the widget into your website by adding the following script tag to your HTML, customizing the data attributes as needed:

```html
<script
  defer
  src="http://localhost:5173/dist/now-widget.js"
  now-data-org-id="ErOeaXjKcLJ"
  now-data-token="your-jwt-token"
  now-data-theme="dark"
  now-data-position="left"
  now-data-button-color="white"
></script>
```

### Development

- **Linting:** Ensure code quality with ESLint.

  ```bash
  npm run lint
  ```

- **Testing:** Run unit tests using Jest.

  ```bash
  npm run test
  ```

- **Automatic Builds:** Use the watch script to automatically rebuild on code changes.

  ```bash
  npm run watch
  ```

### Contribution

Contributions are welcome! Feel free to open issues or submit pull requests for enhancements and bug fixes.

### License

MIT

### Contact

For any inquiries or support, please contact Romain BOBOE.

---

NowWidget-vanilla-ts combines simplicity with powerful features, making it an ideal choice for developers seeking to enhance their websites with dynamic user content effortlessly.


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/test.html
File type: .html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Now Widget Test</title>
</head>
<body>
    <h1>Now Widget Test Page</h1>
    
    <script
        defer 
        src="http://localhost:5173/dist/now-widget.js"
        now-data-org-id="ErOeaXjKcLJ"
        now-data-token="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJFck9lYVhqS2NMSiIsImlhdCI6MTczMDkxNDk3MSwiZXhwIjoxNzMzNTA2OTcxfQ.TGsyZ2qb731tTjy8jdgRwC3ghDXDyWfhrYnL7gTi6sk"
        now-data-theme="dark"
        now-data-position="right">
    </script>
</body>
</html>


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.gitignore
File type: 
/node_modules
/dist
/demo-site/node_modules

.env

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/package-lock.json
File type: .json
{
  "name": "now-widget-ts",
  "version": "1.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "now-widget-ts",
      "version": "1.0.0",
      "license": "MIT",
      "dependencies": {
        "cors": "^2.8.5",
        "express": "^4.18.2"
      },
      "devDependencies": {
        "@types/jest": "^29.5.13",
        "@typescript-eslint/eslint-plugin": "^8.8.0",
        "@typescript-eslint/parser": "^8.8.0",
        "chokidar": "^3.5.3",
        "eslint": "^9.11.1",
        "eslint-config-prettier": "^9.1.0",
        "eslint-plugin-import": "^2.31.0",
        "eslint-plugin-prettier": "^5.2.1",
        "express": "^4.18.2",
        "jest": "^29.7.0",
        "prettier": "^3.2.0",
        "terser": "^5.36.0",
        "typescript": "^5.4.0",
        "vite": "^5.4.2",
        "vite-plugin-css-injected-by-js": "^3.5.2",
        "vitest": "^3.0.4"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
      "dev": true,
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.26.2",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.26.2.tgz",
      "integrity": "sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.25.9",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.26.2",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.26.2.tgz",
      "integrity": "sha512-Z0WgzSEa+aUcdiJuCIqgujCshpMWgUpgOxXotrYPSA53hA3qopNaqcJpyr0hVb1FeWdnqFA35/fUtXgBK8srQg==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.26.0",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.26.0.tgz",
      "integrity": "sha512-i1SLeK+DzNnQ3LL/CswPCa/E5u4lh1k6IAEphON8F+cXt0t9euTshDru0q7/IqMa1PMPz5RnHuHscF8/ZJsStg==",
      "dev": true,
      "dependencies": {
        "@ampproject/remapping": "^2.2.0",
        "@babel/code-frame": "^7.26.0",
        "@babel/generator": "^7.26.0",
        "@babel/helper-compilation-targets": "^7.25.9",
        "@babel/helper-module-transforms": "^7.26.0",
        "@babel/helpers": "^7.26.0",
        "@babel/parser": "^7.26.0",
        "@babel/template": "^7.25.9",
        "@babel/traverse": "^7.25.9",
        "@babel/types": "^7.26.0",
        "convert-source-map": "^2.0.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/core/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.26.2",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.26.2.tgz",
      "integrity": "sha512-zevQbhbau95nkoxSq3f/DC/SC+EEOUZd3DYqfSkMhY2/wfSeaHV1Ew4vk8e+x8lja31IbyuUa2uQ3JONqKbysw==",
      "dev": true,
      "dependencies": {
        "@babel/parser": "^7.26.2",
        "@babel/types": "^7.26.0",
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.25",
        "jsesc": "^3.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.25.9.tgz",
      "integrity": "sha512-j9Db8Suy6yV/VHa4qzrj9yZfZxhLWQdVnRlXxmKLYlhWUVB1sB2G5sxuWYXk/whHD9iW76PmNzxZ4UCnTQTVEQ==",
      "dev": true,
      "dependencies": {
        "@babel/compat-data": "^7.25.9",
        "@babel/helper-validator-option": "^7.25.9",
        "browserslist": "^4.24.0",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz",
      "integrity": "sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==",
      "dev": true,
      "dependencies": {
        "@babel/traverse": "^7.25.9",
        "@babel/types": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.26.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz",
      "integrity": "sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-imports": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9",
        "@babel/traverse": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.25.9.tgz",
      "integrity": "sha512-kSMlyUVdWe25rEsRGviIgOWnoT/nfABVWlqt9N19/dIPWViAOW2s9wznP5tURbs/IDuNk4gPy3YdYRgH3uxhBw==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz",
      "integrity": "sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz",
      "integrity": "sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz",
      "integrity": "sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.26.0",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.26.0.tgz",
      "integrity": "sha512-tbhNuIxNcVb21pInl3ZSjksLCvgdZy9KwJ8brv993QtIVKJBBkYXz4q4ZbAv31GdnC+R90np23L5FbEBlthAEw==",
      "dev": true,
      "dependencies": {
        "@babel/template": "^7.25.9",
        "@babel/types": "^7.26.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.26.2",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.26.2.tgz",
      "integrity": "sha512-DWMCZH9WA4Maitz2q21SRKHo9QXZxkDsbNZoVD62gusNtNBBqDg9i7uOhASfTfIGNzW+O+r7+jAlM8dwphcJKQ==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.26.0"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-syntax-async-generators": {
      "version": "7.8.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz",
      "integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-bigint": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-bigint/-/plugin-syntax-bigint-7.8.3.tgz",
      "integrity": "sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-class-properties": {
      "version": "7.12.13",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz",
      "integrity": "sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.12.13"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-class-static-block": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz",
      "integrity": "sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-import-attributes": {
      "version": "7.26.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-attributes/-/plugin-syntax-import-attributes-7.26.0.tgz",
      "integrity": "sha512-e2dttdsJ1ZTpi3B9UYGLw41hifAubg19AtCu/2I/F1QNVclOBr1dYpTdmdyZ84Xiz43BS/tCUkMAZNLv12Pi+A==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-import-meta": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-meta/-/plugin-syntax-import-meta-7.10.4.tgz",
      "integrity": "sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.10.4"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-json-strings": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz",
      "integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-jsx": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.25.9.tgz",
      "integrity": "sha512-ld6oezHQMZsZfp6pWtbjaNDF2tiiCYYDqQszHt5VV437lewP9aSi2Of99CK0D0XB21k7FLgnLcmQKyKzynfeAA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-logical-assignment-operators": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz",
      "integrity": "sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.10.4"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-nullish-coalescing-operator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz",
      "integrity": "sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-numeric-separator": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz",
      "integrity": "sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.10.4"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-object-rest-spread": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz",
      "integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-optional-catch-binding": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz",
      "integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-optional-chaining": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz",
      "integrity": "sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-private-property-in-object": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz",
      "integrity": "sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-top-level-await": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz",
      "integrity": "sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-typescript": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.25.9.tgz",
      "integrity": "sha512-hjMgRy5hb8uJJjUcdWunWVcoi9bGpJp8p5Ol1229PoN6aytsLwNMgmdftO23wnCLMfVmTwZDWMPNq/D1SY60JQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.25.9.tgz",
      "integrity": "sha512-9DGttpmPvIxBb/2uwpVo3dqJ+O6RooAFOS+lB+xDqoE2PVCE8nfoHMdZLpfCQRLwvohzXISPZcgxt80xLfsuwg==",
      "dev": true,
      "dependencies": {
        "@babel/code-frame": "^7.25.9",
        "@babel/parser": "^7.25.9",
        "@babel/types": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.25.9.tgz",
      "integrity": "sha512-ZCuvfwOwlz/bawvAuvcj8rrithP2/N55Tzz342AkTvq4qaWbGfmCk/tKhNaV2cthijKrPAA8SRJV5WWe7IBMJw==",
      "dev": true,
      "dependencies": {
        "@babel/code-frame": "^7.25.9",
        "@babel/generator": "^7.25.9",
        "@babel/parser": "^7.25.9",
        "@babel/template": "^7.25.9",
        "@babel/types": "^7.25.9",
        "debug": "^4.3.1",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse/node_modules/globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.26.0",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.26.0.tgz",
      "integrity": "sha512-Z/yiTPj+lDVnF7lWeKCIJzaIkI0vYO87dMpZ4bg4TDrFe4XXLFWL1TbXU27gBP3QccxV9mZICCrnjnYlJjXHOA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-string-parser": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@bcoe/v8-coverage": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz",
      "integrity": "sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==",
      "dev": true
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz",
      "integrity": "sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz",
      "integrity": "sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz",
      "integrity": "sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz",
      "integrity": "sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz",
      "integrity": "sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz",
      "integrity": "sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz",
      "integrity": "sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz",
      "integrity": "sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz",
      "integrity": "sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz",
      "integrity": "sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz",
      "integrity": "sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz",
      "integrity": "sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz",
      "integrity": "sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz",
      "integrity": "sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz",
      "integrity": "sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz",
      "integrity": "sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz",
      "integrity": "sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz",
      "integrity": "sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz",
      "integrity": "sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz",
      "integrity": "sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz",
      "integrity": "sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz",
      "integrity": "sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz",
      "integrity": "sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@eslint-community/eslint-utils": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.1.tgz",
      "integrity": "sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==",
      "dev": true,
      "dependencies": {
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      },
      "peerDependencies": {
        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
      }
    },
    "node_modules/@eslint-community/regexpp": {
      "version": "4.12.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
      "dev": true,
      "engines": {
        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
      }
    },
    "node_modules/@eslint/config-array": {
      "version": "0.18.0",
      "resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.18.0.tgz",
      "integrity": "sha512-fTxvnS1sRMu3+JjXwJG0j/i4RT9u4qJ+lqS/yCGap4lH4zZGzQ7tu+xZqQmcMZq5OBZDL4QRxQzRjkWcGt8IVw==",
      "dev": true,
      "dependencies": {
        "@eslint/object-schema": "^2.1.4",
        "debug": "^4.3.1",
        "minimatch": "^3.1.2"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/config-array/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/@eslint/config-array/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/@eslint/core": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.7.0.tgz",
      "integrity": "sha512-xp5Jirz5DyPYlPiKat8jaq0EmYvDXKKpzTbxXMpT9eqlRJkRKIz9AGMdlvYjih+im+QlhWrpvVjl8IPC/lHlUw==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.1.0.tgz",
      "integrity": "sha512-4Bfj15dVJdoy3RfZmmo86RK1Fwzn6SstsvK9JS+BaVKqC6QQQQyXekNaC+g+LKNgkQ+2VhGAzm6hO40AhMR3zQ==",
      "dev": true,
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.3.2",
        "espree": "^10.0.1",
        "globals": "^14.0.0",
        "ignore": "^5.2.0",
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "minimatch": "^3.1.2",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/@eslint/js": {
      "version": "9.14.0",
      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.14.0.tgz",
      "integrity": "sha512-pFoEtFWCPyDOl+C6Ift+wC7Ro89otjigCf5vcuWqWgqNSQbRrpjSvdeE6ofLz4dHmyxD5f7gIdGT4+p36L6Twg==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/object-schema": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.4.tgz",
      "integrity": "sha512-BsWiH1yFGjXXS2yvrf5LyuoSIIbPrGUWob917o+BTKuZ7qJdxX8aJLRxs1fS9n6r7vESrq1OUqb68dANcFXuQQ==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/plugin-kit": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.2.2.tgz",
      "integrity": "sha512-CXtq5nR4Su+2I47WPOlWud98Y5Lv8Kyxp2ukhgFx/eW6Blm18VXJO5WuQylPugRo8nbluoi6GvvxBLqHcvqUUw==",
      "dev": true,
      "dependencies": {
        "levn": "^0.4.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@humanfs/core": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
      "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
      "dev": true,
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
      "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
      "dev": true,
      "dependencies": {
        "@humanfs/core": "^0.19.1",
        "@humanwhocodes/retry": "^0.3.0"
      },
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
      "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
      "dev": true,
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/module-importer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
      "dev": true,
      "engines": {
        "node": ">=12.22"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/retry": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.1.tgz",
      "integrity": "sha512-c7hNEllBlenFTHBky65mhq8WD2kbN9Q6gk0bTk8lSBvc554jpXSkST1iePudpt7+A/AQvuHs9EMqjHDXMY1lrA==",
      "dev": true,
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@istanbuljs/load-nyc-config": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz",
      "integrity": "sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==",
      "dev": true,
      "dependencies": {
        "camelcase": "^5.3.1",
        "find-up": "^4.1.0",
        "get-package-type": "^0.1.0",
        "js-yaml": "^3.13.1",
        "resolve-from": "^5.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@istanbuljs/load-nyc-config/node_modules/argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "dev": true,
      "dependencies": {
        "sprintf-js": "~1.0.2"
      }
    },
    "node_modules/@istanbuljs/load-nyc-config/node_modules/find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "dev": true,
      "dependencies": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@istanbuljs/load-nyc-config/node_modules/js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "dev": true,
      "dependencies": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/@istanbuljs/load-nyc-config/node_modules/locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "dev": true,
      "dependencies": {
        "p-locate": "^4.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@istanbuljs/load-nyc-config/node_modules/p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "dev": true,
      "dependencies": {
        "p-try": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@istanbuljs/load-nyc-config/node_modules/p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "dev": true,
      "dependencies": {
        "p-limit": "^2.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@istanbuljs/load-nyc-config/node_modules/resolve-from": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
      "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@istanbuljs/schema": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.3.tgz",
      "integrity": "sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@jest/console": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/@jest/console/-/console-29.7.0.tgz",
      "integrity": "sha512-5Ni4CU7XHQi32IJ398EEP4RrB8eV09sXP2ROqD4bksHrnTree52PsxvX8tpL8LvTZ3pFzXyPbNQReSN41CAhOg==",
      "dev": true,
      "dependencies": {
        "@jest/types": "^29.6.3",
        "@types/node": "*",
        "chalk": "^4.0.0",
        "jest-message-util": "^29.7.0",
        "jest-util": "^29.7.0",
        "slash": "^3.0.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/@jest/core": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/@jest/core/-/core-29.7.0.tgz",
      "integrity": "sha512-n7aeXWKMnGtDA48y8TLWJPJmLmmZ642Ceo78cYWEpiD7FzDgmNDV/GCVRorPABdXLJZ/9wzzgZAlHjXjxDHGsg==",
      "dev": true,
      "dependencies": {
        "@jest/console": "^29.7.0",
        "@jest/reporters": "^29.7.0",
        "@jest/test-result": "^29.7.0",
        "@jest/transform": "^29.7.0",
        "@jest/types": "^29.6.3",
        "@types/node": "*",
        "ansi-escapes": "^4.2.1",
        "chalk": "^4.0.0",
        "ci-info": "^3.2.0",
        "exit": "^0.1.2",
        "graceful-fs": "^4.2.9",
        "jest-changed-files": "^29.7.0",
        "jest-config": "^29.7.0",
        "jest-haste-map": "^29.7.0",
        "jest-message-util": "^29.7.0",
        "jest-regex-util": "^29.6.3",
        "jest-resolve": "^29.7.0",
        "jest-resolve-dependencies": "^29.7.0",
        "jest-runner": "^29.7.0",
        "jest-runtime": "^29.7.0",
        "jest-snapshot": "^29.7.0",
        "jest-util": "^29.7.0",
        "jest-validate": "^29.7.0",
        "jest-watcher": "^29.7.0",
        "micromatch": "^4.0.4",
        "pretty-format": "^29.7.0",
        "slash": "^3.0.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      },
      "peerDependencies": {
        "node-notifier": "^8.0.1 || ^9.0.0 || ^10.0.0"
      },
      "peerDependenciesMeta": {
        "node-notifier": {
          "optional": true
        }
      }
    },
    "node_modules/@jest/environment": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-29.7.0.tgz",
      "integrity": "sha512-aQIfHDq33ExsN4jP1NWGXhxgQ/wixs60gDiKO+XVMd8Mn0NWPWgc34ZQDTb2jKaUWQ7MuwoitXAsN2XVXNMpAw==",
      "dev": true,
      "dependencies": {
        "@jest/fake-timers": "^29.7.0",
        "@jest/types": "^29.6.3",
        "@types/node": "*",
        "jest-mock": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/@jest/expect": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/@jest/expect/-/expect-29.7.0.tgz",
      "integrity": "sha512-8uMeAMycttpva3P1lBHB8VciS9V0XAr3GymPpipdyQXbBcuhkLQOSe8E/p92RyAdToS6ZD1tFkX+CkhoECE0dQ==",
      "dev": true,
      "dependencies": {
        "expect": "^29.7.0",
        "jest-snapshot": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/@jest/expect-utils": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/@jest/expect-utils/-/expect-utils-29.7.0.tgz",
      "integrity": "sha512-GlsNBWiFQFCVi9QVSx7f5AgMeLxe9YCCs5PuP2O2LdjDAA8Jh9eX7lA1Jq/xdXw3Wb3hyvlFNfZIfcRetSzYcA==",
      "dev": true,
      "dependencies": {
        "jest-get-type": "^29.6.3"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/@jest/fake-timers": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-29.7.0.tgz",
      "integrity": "sha512-q4DH1Ha4TTFPdxLsqDXK1d3+ioSL7yL5oCMJZgDYm6i+6CygW5E5xVr/D1HdsGxjt1ZWSfUAs9OxSB/BNelWrQ==",
      "dev": true,
      "dependencies": {
        "@jest/types": "^29.6.3",
        "@sinonjs/fake-timers": "^10.0.2",
        "@types/node": "*",
        "jest-message-util": "^29.7.0",
        "jest-mock": "^29.7.0",
        "jest-util": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/@jest/globals": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/@jest/globals/-/globals-29.7.0.tgz",
      "integrity": "sha512-mpiz3dutLbkW2MNFubUGUEVLkTGiqW6yLVTA+JbP6fI6J5iL9Y0Nlg8k95pcF8ctKwCS7WVxteBs29hhfAotzQ==",
      "dev": true,
      "dependencies": {
        "@jest/environment": "^29.7.0",
        "@jest/expect": "^29.7.0",
        "@jest/types": "^29.6.3",
        "jest-mock": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/@jest/reporters": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/@jest/reporters/-/reporters-29.7.0.tgz",
      "integrity": "sha512-DApq0KJbJOEzAFYjHADNNxAE3KbhxQB1y5Kplb5Waqw6zVbuWatSnMjE5gs8FUgEPmNsnZA3NCWl9NG0ia04Pg==",
      "dev": true,
      "dependencies": {
        "@bcoe/v8-coverage": "^0.2.3",
        "@jest/console": "^29.7.0",
        "@jest/test-result": "^29.7.0",
        "@jest/transform": "^29.7.0",
        "@jest/types": "^29.6.3",
        "@jridgewell/trace-mapping": "^0.3.18",
        "@types/node": "*",
        "chalk": "^4.0.0",
        "collect-v8-coverage": "^1.0.0",
        "exit": "^0.1.2",
        "glob": "^7.1.3",
        "graceful-fs": "^4.2.9",
        "istanbul-lib-coverage": "^3.0.0",
        "istanbul-lib-instrument": "^6.0.0",
        "istanbul-lib-report": "^3.0.0",
        "istanbul-lib-source-maps": "^4.0.0",
        "istanbul-reports": "^3.1.3",
        "jest-message-util": "^29.7.0",
        "jest-util": "^29.7.0",
        "jest-worker": "^29.7.0",
        "slash": "^3.0.0",
        "string-length": "^4.0.1",
        "strip-ansi": "^6.0.0",
        "v8-to-istanbul": "^9.0.1"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      },
      "peerDependencies": {
        "node-notifier": "^8.0.1 || ^9.0.0 || ^10.0.0"
      },
      "peerDependenciesMeta": {
        "node-notifier": {
          "optional": true
        }
      }
    },
    "node_modules/@jest/schemas": {
      "version": "29.6.3",
      "resolved": "https://registry.npmjs.org/@jest/schemas/-/schemas-29.6.3.tgz",
      "integrity": "sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==",
      "dev": true,
      "dependencies": {
        "@sinclair/typebox": "^0.27.8"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/@jest/source-map": {
      "version": "29.6.3",
      "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-29.6.3.tgz",
      "integrity": "sha512-MHjT95QuipcPrpLM+8JMSzFx6eHp5Bm+4XeFDJlwsvVBjmKNiIAvasGK2fxz2WbGRlnvqehFbh07MMa7n3YJnw==",
      "dev": true,
      "dependencies": {
        "@jridgewell/trace-mapping": "^0.3.18",
        "callsites": "^3.0.0",
        "graceful-fs": "^4.2.9"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/@jest/test-result": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-29.7.0.tgz",
      "integrity": "sha512-Fdx+tv6x1zlkJPcWXmMDAG2HBnaR9XPSd5aDWQVsfrZmLVT3lU1cwyxLgRmXR9yrq4NBoEm9BMsfgFzTQAbJYA==",
      "dev": true,
      "dependencies": {
        "@jest/console": "^29.7.0",
        "@jest/types": "^29.6.3",
        "@types/istanbul-lib-coverage": "^2.0.0",
        "collect-v8-coverage": "^1.0.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/@jest/test-sequencer": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/@jest/test-sequencer/-/test-sequencer-29.7.0.tgz",
      "integrity": "sha512-GQwJ5WZVrKnOJuiYiAF52UNUJXgTZx1NHjFSEB0qEMmSZKAkdMoIzw/Cj6x6NF4AvV23AUqDpFzQkN/eYCYTxw==",
      "dev": true,
      "dependencies": {
        "@jest/test-result": "^29.7.0",
        "graceful-fs": "^4.2.9",
        "jest-haste-map": "^29.7.0",
        "slash": "^3.0.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/@jest/transform": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/@jest/transform/-/transform-29.7.0.tgz",
      "integrity": "sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==",
      "dev": true,
      "dependencies": {
        "@babel/core": "^7.11.6",
        "@jest/types": "^29.6.3",
        "@jridgewell/trace-mapping": "^0.3.18",
        "babel-plugin-istanbul": "^6.1.1",
        "chalk": "^4.0.0",
        "convert-source-map": "^2.0.0",
        "fast-json-stable-stringify": "^2.1.0",
        "graceful-fs": "^4.2.9",
        "jest-haste-map": "^29.7.0",
        "jest-regex-util": "^29.6.3",
        "jest-util": "^29.7.0",
        "micromatch": "^4.0.4",
        "pirates": "^4.0.4",
        "slash": "^3.0.0",
        "write-file-atomic": "^4.0.2"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/@jest/types": {
      "version": "29.6.3",
      "resolved": "https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz",
      "integrity": "sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==",
      "dev": true,
      "dependencies": {
        "@jest/schemas": "^29.6.3",
        "@types/istanbul-lib-coverage": "^2.0.0",
        "@types/istanbul-reports": "^3.0.0",
        "@types/node": "*",
        "@types/yargs": "^17.0.8",
        "chalk": "^4.0.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.5.tgz",
      "integrity": "sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==",
      "dev": true,
      "dependencies": {
        "@jridgewell/set-array": "^1.2.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "dev": true,
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
      "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
      "dev": true,
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/source-map": {
      "version": "0.3.6",
      "resolved": "https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.6.tgz",
      "integrity": "sha512-1ZJTZebgqllO79ue2bm3rIGud/bOe0pP5BjSRCRxxYkEZS8STV7zN84UBbiYu7jy+eCKSnVIUgoWWE/tt+shMQ==",
      "dev": true,
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.25"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
      "dev": true
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.25",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
      "dev": true,
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true,
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@pkgr/core": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/@pkgr/core/-/core-0.1.1.tgz",
      "integrity": "sha512-cq8o4cWH0ibXh9VGi5P20Tu9XF/0fFXl9EUinr9QfTM7a7p0oTA4iJRCQWppXR1Pg8dSM0UCItCkPwsk9qWWYA==",
      "dev": true,
      "engines": {
        "node": "^12.20.0 || ^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/unts"
      }
    },
    "node_modules/@rollup/rollup-android-arm-eabi": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.24.4.tgz",
      "integrity": "sha512-jfUJrFct/hTA0XDM5p/htWKoNNTbDLY0KRwEt6pyOA6k2fmk0WVwl65PdUdJZgzGEHWx+49LilkcSaumQRyNQw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-android-arm64": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.24.4.tgz",
      "integrity": "sha512-j4nrEO6nHU1nZUuCfRKoCcvh7PIywQPUCBa2UsootTHvTHIoIu2BzueInGJhhvQO/2FTRdNYpf63xsgEqH9IhA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-darwin-arm64": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.24.4.tgz",
      "integrity": "sha512-GmU/QgGtBTeraKyldC7cDVVvAJEOr3dFLKneez/n7BvX57UdhOqDsVwzU7UOnYA7AAOt+Xb26lk79PldDHgMIQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-darwin-x64": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.24.4.tgz",
      "integrity": "sha512-N6oDBiZCBKlwYcsEPXGDE4g9RoxZLK6vT98M8111cW7VsVJFpNEqvJeIPfsCzbf0XEakPslh72X0gnlMi4Ddgg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-arm64": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.24.4.tgz",
      "integrity": "sha512-py5oNShCCjCyjWXCZNrRGRpjWsF0ic8f4ieBNra5buQz0O/U6mMXCpC1LvrHuhJsNPgRt36tSYMidGzZiJF6mw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-x64": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.24.4.tgz",
      "integrity": "sha512-L7VVVW9FCnTTp4i7KrmHeDsDvjB4++KOBENYtNYAiYl96jeBThFfhP6HVxL74v4SiZEVDH/1ILscR5U9S4ms4g==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.24.4.tgz",
      "integrity": "sha512-10ICosOwYChROdQoQo589N5idQIisxjaFE/PAnX2i0Zr84mY0k9zul1ArH0rnJ/fpgiqfu13TFZR5A5YJLOYZA==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.24.4.tgz",
      "integrity": "sha512-ySAfWs69LYC7QhRDZNKqNhz2UKN8LDfbKSMAEtoEI0jitwfAG2iZwVqGACJT+kfYvvz3/JgsLlcBP+WWoKCLcw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-gnu": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.24.4.tgz",
      "integrity": "sha512-uHYJ0HNOI6pGEeZ/5mgm5arNVTI0nLlmrbdph+pGXpC9tFHFDQmDMOEqkmUObRfosJqpU8RliYoGz06qSdtcjg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-musl": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.24.4.tgz",
      "integrity": "sha512-38yiWLemQf7aLHDgTg85fh3hW9stJ0Muk7+s6tIkSUOMmi4Xbv5pH/5Bofnsb6spIwD5FJiR+jg71f0CH5OzoA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.24.4.tgz",
      "integrity": "sha512-q73XUPnkwt9ZNF2xRS4fvneSuaHw2BXuV5rI4cw0fWYVIWIBeDZX7c7FWhFQPNTnE24172K30I+dViWRVD9TwA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.24.4.tgz",
      "integrity": "sha512-Aie/TbmQi6UXokJqDZdmTJuZBCU3QBDA8oTKRGtd4ABi/nHgXICulfg1KI6n9/koDsiDbvHAiQO3YAUNa/7BCw==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-s390x-gnu": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.24.4.tgz",
      "integrity": "sha512-P8MPErVO/y8ohWSP9JY7lLQ8+YMHfTI4bAdtCi3pC2hTeqFJco2jYspzOzTUB8hwUWIIu1xwOrJE11nP+0JFAQ==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-gnu": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.24.4.tgz",
      "integrity": "sha512-K03TljaaoPK5FOyNMZAAEmhlyO49LaE4qCsr0lYHUKyb6QacTNF9pnfPpXnFlFD3TXuFbFbz7tJ51FujUXkXYA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-musl": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.24.4.tgz",
      "integrity": "sha512-VJYl4xSl/wqG2D5xTYncVWW+26ICV4wubwN9Gs5NrqhJtayikwCXzPL8GDsLnaLU3WwhQ8W02IinYSFJfyo34Q==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-win32-arm64-msvc": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.24.4.tgz",
      "integrity": "sha512-ku2GvtPwQfCqoPFIJCqZ8o7bJcj+Y54cZSr43hHca6jLwAiCbZdBUOrqE6y29QFajNAzzpIOwsckaTFmN6/8TA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-ia32-msvc": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.24.4.tgz",
      "integrity": "sha512-V3nCe+eTt/W6UYNr/wGvO1fLpHUrnlirlypZfKCT1fG6hWfqhPgQV/K/mRBXBpxc0eKLIF18pIOFVPh0mqHjlg==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-x64-msvc": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.24.4.tgz",
      "integrity": "sha512-LTw1Dfd0mBIEqUVCxbvTE/LLo+9ZxVC9k99v1v4ahg9Aak6FpqOfNu5kRkeTAn0wphoC4JU7No1/rL+bBCEwhg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rtsao/scc": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@rtsao/scc/-/scc-1.1.0.tgz",
      "integrity": "sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==",
      "dev": true
    },
    "node_modules/@sinclair/typebox": {
      "version": "0.27.8",
      "resolved": "https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.27.8.tgz",
      "integrity": "sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==",
      "dev": true
    },
    "node_modules/@sinonjs/commons": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/@sinonjs/commons/-/commons-3.0.1.tgz",
      "integrity": "sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==",
      "dev": true,
      "dependencies": {
        "type-detect": "4.0.8"
      }
    },
    "node_modules/@sinonjs/fake-timers": {
      "version": "10.3.0",
      "resolved": "https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-10.3.0.tgz",
      "integrity": "sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==",
      "dev": true,
      "dependencies": {
        "@sinonjs/commons": "^3.0.0"
      }
    },
    "node_modules/@types/babel__core": {
      "version": "7.20.5",
      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
      "dev": true,
      "dependencies": {
        "@babel/parser": "^7.20.7",
        "@babel/types": "^7.20.7",
        "@types/babel__generator": "*",
        "@types/babel__template": "*",
        "@types/babel__traverse": "*"
      }
    },
    "node_modules/@types/babel__generator": {
      "version": "7.6.8",
      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.8.tgz",
      "integrity": "sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__template": {
      "version": "7.4.4",
      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
      "dev": true,
      "dependencies": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__traverse": {
      "version": "7.20.6",
      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.6.tgz",
      "integrity": "sha512-r1bzfrm0tomOI8g1SzvCaQHo6Lcv6zu0EA+W2kHrt8dyrHQxGzBBL4kdkzIS+jBMV+EYcMAEAqXqYaLJq5rOZg==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.20.7"
      }
    },
    "node_modules/@types/estree": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.6.tgz",
      "integrity": "sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==",
      "dev": true
    },
    "node_modules/@types/graceful-fs": {
      "version": "4.1.9",
      "resolved": "https://registry.npmjs.org/@types/graceful-fs/-/graceful-fs-4.1.9.tgz",
      "integrity": "sha512-olP3sd1qOEe5dXTSaFvQG+02VdRXcdytWLAZsAq1PecU8uqQAhkrnbli7DagjtXKW/Bl7YJbUsa8MPcuc8LHEQ==",
      "dev": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/istanbul-lib-coverage": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.6.tgz",
      "integrity": "sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==",
      "dev": true
    },
    "node_modules/@types/istanbul-lib-report": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.3.tgz",
      "integrity": "sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==",
      "dev": true,
      "dependencies": {
        "@types/istanbul-lib-coverage": "*"
      }
    },
    "node_modules/@types/istanbul-reports": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.4.tgz",
      "integrity": "sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==",
      "dev": true,
      "dependencies": {
        "@types/istanbul-lib-report": "*"
      }
    },
    "node_modules/@types/jest": {
      "version": "29.5.14",
      "resolved": "https://registry.npmjs.org/@types/jest/-/jest-29.5.14.tgz",
      "integrity": "sha512-ZN+4sdnLUbo8EVvVc2ao0GFW6oVrQRPn4K2lglySj7APvSrgzxHiNNK99us4WDMi57xxA2yggblIAMNhXOotLQ==",
      "dev": true,
      "dependencies": {
        "expect": "^29.0.0",
        "pretty-format": "^29.0.0"
      }
    },
    "node_modules/@types/json-schema": {
      "version": "7.0.15",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
      "dev": true
    },
    "node_modules/@types/json5": {
      "version": "0.0.29",
      "resolved": "https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz",
      "integrity": "sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==",
      "dev": true
    },
    "node_modules/@types/node": {
      "version": "22.9.0",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-22.9.0.tgz",
      "integrity": "sha512-vuyHg81vvWA1Z1ELfvLko2c8f34gyA0zaic0+Rllc5lbCnbSyuvb2Oxpm6TAUAC/2xZN3QGqxBNggD1nNR2AfQ==",
      "dev": true,
      "dependencies": {
        "undici-types": "~6.19.8"
      }
    },
    "node_modules/@types/stack-utils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.3.tgz",
      "integrity": "sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==",
      "dev": true
    },
    "node_modules/@types/yargs": {
      "version": "17.0.33",
      "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-17.0.33.tgz",
      "integrity": "sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==",
      "dev": true,
      "dependencies": {
        "@types/yargs-parser": "*"
      }
    },
    "node_modules/@types/yargs-parser": {
      "version": "21.0.3",
      "resolved": "https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-21.0.3.tgz",
      "integrity": "sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==",
      "dev": true
    },
    "node_modules/@typescript-eslint/eslint-plugin": {
      "version": "8.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.13.0.tgz",
      "integrity": "sha512-nQtBLiZYMUPkclSeC3id+x4uVd1SGtHuElTxL++SfP47jR0zfkZBJHc+gL4qPsgTuypz0k8Y2GheaDYn6Gy3rg==",
      "dev": true,
      "dependencies": {
        "@eslint-community/regexpp": "^4.10.0",
        "@typescript-eslint/scope-manager": "8.13.0",
        "@typescript-eslint/type-utils": "8.13.0",
        "@typescript-eslint/utils": "8.13.0",
        "@typescript-eslint/visitor-keys": "8.13.0",
        "graphemer": "^1.4.0",
        "ignore": "^5.3.1",
        "natural-compare": "^1.4.0",
        "ts-api-utils": "^1.3.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "@typescript-eslint/parser": "^8.0.0 || ^8.0.0-alpha.0",
        "eslint": "^8.57.0 || ^9.0.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@typescript-eslint/parser": {
      "version": "8.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.13.0.tgz",
      "integrity": "sha512-w0xp+xGg8u/nONcGw1UXAr6cjCPU1w0XVyBs6Zqaj5eLmxkKQAByTdV/uGgNN5tVvN/kKpoQlP2cL7R+ajZZIQ==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/scope-manager": "8.13.0",
        "@typescript-eslint/types": "8.13.0",
        "@typescript-eslint/typescript-estree": "8.13.0",
        "@typescript-eslint/visitor-keys": "8.13.0",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@typescript-eslint/scope-manager": {
      "version": "8.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.13.0.tgz",
      "integrity": "sha512-XsGWww0odcUT0gJoBZ1DeulY1+jkaHUciUq4jKNv4cpInbvvrtDoyBH9rE/n2V29wQJPk8iCH1wipra9BhmiMA==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "8.13.0",
        "@typescript-eslint/visitor-keys": "8.13.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/type-utils": {
      "version": "8.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.13.0.tgz",
      "integrity": "sha512-Rqnn6xXTR316fP4D2pohZenJnp+NwQ1mo7/JM+J1LWZENSLkJI8ID8QNtlvFeb0HnFSK94D6q0cnMX6SbE5/vA==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/typescript-estree": "8.13.0",
        "@typescript-eslint/utils": "8.13.0",
        "debug": "^4.3.4",
        "ts-api-utils": "^1.3.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@typescript-eslint/types": {
      "version": "8.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-8.13.0.tgz",
      "integrity": "sha512-4cyFErJetFLckcThRUFdReWJjVsPCqyBlJTi6IDEpc1GWCIIZRFxVppjWLIMcQhNGhdWJJRYFHpHoDWvMlDzng==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree": {
      "version": "8.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.13.0.tgz",
      "integrity": "sha512-v7SCIGmVsRK2Cy/LTLGN22uea6SaUIlpBcO/gnMGT/7zPtxp90bphcGf4fyrCQl3ZtiBKqVTG32hb668oIYy1g==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "8.13.0",
        "@typescript-eslint/visitor-keys": "8.13.0",
        "debug": "^4.3.4",
        "fast-glob": "^3.3.2",
        "is-glob": "^4.0.3",
        "minimatch": "^9.0.4",
        "semver": "^7.6.0",
        "ts-api-utils": "^1.3.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@typescript-eslint/utils": {
      "version": "8.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.13.0.tgz",
      "integrity": "sha512-A1EeYOND6Uv250nybnLZapeXpYMl8tkzYUxqmoKAWnI4sei3ihf2XdZVd+vVOmHGcp3t+P7yRrNsyyiXTvShFQ==",
      "dev": true,
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.4.0",
        "@typescript-eslint/scope-manager": "8.13.0",
        "@typescript-eslint/types": "8.13.0",
        "@typescript-eslint/typescript-estree": "8.13.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0"
      }
    },
    "node_modules/@typescript-eslint/visitor-keys": {
      "version": "8.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.13.0.tgz",
      "integrity": "sha512-7N/+lztJqH4Mrf0lb10R/CbI1EaAMMGyF5y0oJvFoAhafwgiRA7TXyd8TFn8FC8k5y2dTsYogg238qavRGNnlw==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "8.13.0",
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@vitest/expect": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@vitest/expect/-/expect-3.0.4.tgz",
      "integrity": "sha512-Nm5kJmYw6P2BxhJPkO3eKKhGYKRsnqJqf+r0yOGRKpEP+bSCBDsjXgiu1/5QFrnPMEgzfC38ZEjvCFgaNBC0Eg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@vitest/spy": "3.0.4",
        "@vitest/utils": "3.0.4",
        "chai": "^5.1.2",
        "tinyrainbow": "^2.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/vitest"
      }
    },
    "node_modules/@vitest/mocker": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@vitest/mocker/-/mocker-3.0.4.tgz",
      "integrity": "sha512-gEef35vKafJlfQbnyOXZ0Gcr9IBUsMTyTLXsEQwuyYAerpHqvXhzdBnDFuHLpFqth3F7b6BaFr4qV/Cs1ULx5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@vitest/spy": "3.0.4",
        "estree-walker": "^3.0.3",
        "magic-string": "^0.30.17"
      },
      "funding": {
        "url": "https://opencollective.com/vitest"
      },
      "peerDependencies": {
        "msw": "^2.4.9",
        "vite": "^5.0.0 || ^6.0.0"
      },
      "peerDependenciesMeta": {
        "msw": {
          "optional": true
        },
        "vite": {
          "optional": true
        }
      }
    },
    "node_modules/@vitest/pretty-format": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@vitest/pretty-format/-/pretty-format-3.0.4.tgz",
      "integrity": "sha512-ts0fba+dEhK2aC9PFuZ9LTpULHpY/nd6jhAQ5IMU7Gaj7crPCTdCFfgvXxruRBLFS+MLraicCuFXxISEq8C93g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "tinyrainbow": "^2.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/vitest"
      }
    },
    "node_modules/@vitest/runner": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@vitest/runner/-/runner-3.0.4.tgz",
      "integrity": "sha512-dKHzTQ7n9sExAcWH/0sh1elVgwc7OJ2lMOBrAm73J7AH6Pf9T12Zh3lNE1TETZaqrWFXtLlx3NVrLRb5hCK+iw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@vitest/utils": "3.0.4",
        "pathe": "^2.0.2"
      },
      "funding": {
        "url": "https://opencollective.com/vitest"
      }
    },
    "node_modules/@vitest/snapshot": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@vitest/snapshot/-/snapshot-3.0.4.tgz",
      "integrity": "sha512-+p5knMLwIk7lTQkM3NonZ9zBewzVp9EVkVpvNta0/PlFWpiqLaRcF4+33L1it3uRUCh0BGLOaXPPGEjNKfWb4w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@vitest/pretty-format": "3.0.4",
        "magic-string": "^0.30.17",
        "pathe": "^2.0.2"
      },
      "funding": {
        "url": "https://opencollective.com/vitest"
      }
    },
    "node_modules/@vitest/spy": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@vitest/spy/-/spy-3.0.4.tgz",
      "integrity": "sha512-sXIMF0oauYyUy2hN49VFTYodzEAu744MmGcPR3ZBsPM20G+1/cSW/n1U+3Yu/zHxX2bIDe1oJASOkml+osTU6Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "tinyspy": "^3.0.2"
      },
      "funding": {
        "url": "https://opencollective.com/vitest"
      }
    },
    "node_modules/@vitest/utils": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@vitest/utils/-/utils-3.0.4.tgz",
      "integrity": "sha512-8BqC1ksYsHtbWH+DfpOAKrFw3jl3Uf9J7yeFh85Pz52IWuh1hBBtyfEbRNNZNjl8H8A5yMLH9/t+k7HIKzQcZQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@vitest/pretty-format": "3.0.4",
        "loupe": "^3.1.2",
        "tinyrainbow": "^2.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/vitest"
      }
    },
    "node_modules/accepts": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
      "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "mime-types": "~2.1.34",
        "negotiator": "0.6.3"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/acorn": {
      "version": "8.14.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.14.0.tgz",
      "integrity": "sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==",
      "dev": true,
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "dev": true,
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dev": true,
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ansi-escapes": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz",
      "integrity": "sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==",
      "dev": true,
      "dependencies": {
        "type-fest": "^0.21.3"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "dev": true,
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "dev": true
    },
    "node_modules/array-buffer-byte-length": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.1.tgz",
      "integrity": "sha512-ahC5W1xgou+KTXix4sAO8Ki12Q+jf4i0+tmk3sC+zgcynshkHxzpXdImBehiUYKKKDwvfFiJl1tZt6ewscS1Mg==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.5",
        "is-array-buffer": "^3.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/array-includes": {
      "version": "3.1.8",
      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.1.8.tgz",
      "integrity": "sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.4",
        "is-string": "^1.0.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.findlastindex": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/array.prototype.findlastindex/-/array.prototype.findlastindex-1.2.5.tgz",
      "integrity": "sha512-zfETvRFA8o7EiNn++N5f/kaCw221hrpGsDmcpndVupkPzEc1Wuf3VgC0qby1BbHs7f5DVYjgtEU2LLh5bqeGfQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flat": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.2.tgz",
      "integrity": "sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.2.0",
        "es-abstract": "^1.22.1",
        "es-shim-unscopables": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flatmap": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.2.tgz",
      "integrity": "sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.2.0",
        "es-abstract": "^1.22.1",
        "es-shim-unscopables": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/arraybuffer.prototype.slice": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.3.tgz",
      "integrity": "sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==",
      "dev": true,
      "dependencies": {
        "array-buffer-byte-length": "^1.0.1",
        "call-bind": "^1.0.5",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.22.3",
        "es-errors": "^1.2.1",
        "get-intrinsic": "^1.2.3",
        "is-array-buffer": "^3.0.4",
        "is-shared-array-buffer": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/assertion-error": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/assertion-error/-/assertion-error-2.0.1.tgz",
      "integrity": "sha512-Izi8RQcffqCeNVgFigKli1ssklIbpHnCYc6AknXGYoB6grJqyeby7jv12JUQgmTAnIDnbck1uxksT4dzN3PWBA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/available-typed-arrays": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
      "dev": true,
      "dependencies": {
        "possible-typed-array-names": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/babel-jest": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/babel-jest/-/babel-jest-29.7.0.tgz",
      "integrity": "sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==",
      "dev": true,
      "dependencies": {
        "@jest/transform": "^29.7.0",
        "@types/babel__core": "^7.1.14",
        "babel-plugin-istanbul": "^6.1.1",
        "babel-preset-jest": "^29.6.3",
        "chalk": "^4.0.0",
        "graceful-fs": "^4.2.9",
        "slash": "^3.0.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.8.0"
      }
    },
    "node_modules/babel-plugin-istanbul": {
      "version": "6.1.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-6.1.1.tgz",
      "integrity": "sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.0.0",
        "@istanbuljs/load-nyc-config": "^1.0.0",
        "@istanbuljs/schema": "^0.1.2",
        "istanbul-lib-instrument": "^5.0.4",
        "test-exclude": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/babel-plugin-istanbul/node_modules/istanbul-lib-instrument": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-5.2.1.tgz",
      "integrity": "sha512-pzqtp31nLv/XFOzXGuvhCb8qhjmTVo5vjVk19XE4CRlSWz0KoeJ3bw9XsA7nOp9YBf4qHjwBxkDzKcME/J29Yg==",
      "dev": true,
      "dependencies": {
        "@babel/core": "^7.12.3",
        "@babel/parser": "^7.14.7",
        "@istanbuljs/schema": "^0.1.2",
        "istanbul-lib-coverage": "^3.2.0",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/babel-plugin-istanbul/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/babel-plugin-jest-hoist": {
      "version": "29.6.3",
      "resolved": "https://registry.npmjs.org/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-29.6.3.tgz",
      "integrity": "sha512-ESAc/RJvGTFEzRwOTT4+lNDk/GNHMkKbNzsvT0qKRfDyyYTskxB5rnU2njIDYVxXCBHHEI1c0YwHob3WaYujOg==",
      "dev": true,
      "dependencies": {
        "@babel/template": "^7.3.3",
        "@babel/types": "^7.3.3",
        "@types/babel__core": "^7.1.14",
        "@types/babel__traverse": "^7.0.6"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/babel-preset-current-node-syntax": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/babel-preset-current-node-syntax/-/babel-preset-current-node-syntax-1.1.0.tgz",
      "integrity": "sha512-ldYss8SbBlWva1bs28q78Ju5Zq1F+8BrqBZZ0VFhLBvhh6lCpC2o3gDJi/5DRLs9FgYZCnmPYIVFU4lRXCkyUw==",
      "dev": true,
      "dependencies": {
        "@babel/plugin-syntax-async-generators": "^7.8.4",
        "@babel/plugin-syntax-bigint": "^7.8.3",
        "@babel/plugin-syntax-class-properties": "^7.12.13",
        "@babel/plugin-syntax-class-static-block": "^7.14.5",
        "@babel/plugin-syntax-import-attributes": "^7.24.7",
        "@babel/plugin-syntax-import-meta": "^7.10.4",
        "@babel/plugin-syntax-json-strings": "^7.8.3",
        "@babel/plugin-syntax-logical-assignment-operators": "^7.10.4",
        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
        "@babel/plugin-syntax-numeric-separator": "^7.10.4",
        "@babel/plugin-syntax-object-rest-spread": "^7.8.3",
        "@babel/plugin-syntax-optional-catch-binding": "^7.8.3",
        "@babel/plugin-syntax-optional-chaining": "^7.8.3",
        "@babel/plugin-syntax-private-property-in-object": "^7.14.5",
        "@babel/plugin-syntax-top-level-await": "^7.14.5"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/babel-preset-jest": {
      "version": "29.6.3",
      "resolved": "https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-29.6.3.tgz",
      "integrity": "sha512-0B3bhxR6snWXJZtR/RliHTDPRgn1sNHOR0yVtq/IiQFyuOVjFS+wuio/R4gSNkyYmKmJB4wGZv2NZanmKmTnNA==",
      "dev": true,
      "dependencies": {
        "babel-plugin-jest-hoist": "^29.6.3",
        "babel-preset-current-node-syntax": "^1.0.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/body-parser": {
      "version": "1.20.3",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
      "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "content-type": "~1.0.5",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "on-finished": "2.4.1",
        "qs": "6.13.0",
        "raw-body": "2.5.2",
        "type-is": "~1.6.18",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/body-parser/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/body-parser/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/brace-expansion": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
      "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "dev": true,
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.24.2",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.24.2.tgz",
      "integrity": "sha512-ZIc+Q62revdMcqC6aChtW4jz3My3klmCO1fEmINZY/8J3EpBg5/A/D0AKmBveUh6pgoeycoMkVMko84tuYS+Gg==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "caniuse-lite": "^1.0.30001669",
        "electron-to-chromium": "^1.5.41",
        "node-releases": "^2.0.18",
        "update-browserslist-db": "^1.1.1"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/bser": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/bser/-/bser-2.1.1.tgz",
      "integrity": "sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==",
      "dev": true,
      "dependencies": {
        "node-int64": "^0.4.0"
      }
    },
    "node_modules/buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "dev": true
    },
    "node_modules/bytes": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/cac": {
      "version": "6.7.14",
      "resolved": "https://registry.npmjs.org/cac/-/cac-6.7.14.tgz",
      "integrity": "sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/call-bind": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz",
      "integrity": "sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==",
      "dev": true,
      "dependencies": {
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.4",
        "set-function-length": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001678",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001678.tgz",
      "integrity": "sha512-RR+4U/05gNtps58PEBDZcPWTgEO2MBeoPZ96aQcjmfkBWRIDfN451fW2qyDA9/+HohLLIL5GqiMwA+IB1pWarw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ]
    },
    "node_modules/chai": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/chai/-/chai-5.1.2.tgz",
      "integrity": "sha512-aGtmf24DW6MLHHG5gCx4zaI3uBq3KRtxeVs0DjFH6Z0rDNbsvTxFASFvdj79pxjxZ8/5u3PIiN3IwEIQkiiuPw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "assertion-error": "^2.0.1",
        "check-error": "^2.1.1",
        "deep-eql": "^5.0.1",
        "loupe": "^3.1.0",
        "pathval": "^2.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/char-regex": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/char-regex/-/char-regex-1.0.2.tgz",
      "integrity": "sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==",
      "dev": true,
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/check-error": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/check-error/-/check-error-2.1.1.tgz",
      "integrity": "sha512-OAlb+T7V4Op9OwdkjmguYRqncdlx5JiofwOAUkmTF+jNdHwzTaTs4sRAGpzLF3oOz5xAyDGrPgeIDFQmDOTiJw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 16"
      }
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "dev": true,
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chokidar/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/ci-info": {
      "version": "3.9.0",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-3.9.0.tgz",
      "integrity": "sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/sibiraj-s"
        }
      ],
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cjs-module-lexer": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.4.1.tgz",
      "integrity": "sha512-cuSVIHi9/9E/+821Qjdvngor+xpnlwnuwIyZOaLmHBVdXL+gP+I6QQB9VkO7RI77YIcTV+S1W9AreJ5eN63JBA==",
      "dev": true
    },
    "node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "dev": true,
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/co": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",
      "integrity": "sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==",
      "dev": true,
      "engines": {
        "iojs": ">= 1.0.0",
        "node": ">= 0.12.0"
      }
    },
    "node_modules/collect-v8-coverage": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/collect-v8-coverage/-/collect-v8-coverage-1.0.2.tgz",
      "integrity": "sha512-lHl4d5/ONEbLlJvaJNtsF/Lz+WvB07u2ycqTYbdrq7UypDXailES4valYb2eWiJFxZlVmpGekfqoxQhzyFdT4Q==",
      "dev": true
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dev": true,
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "dev": true
    },
    "node_modules/commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
      "dev": true
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true
    },
    "node_modules/content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "5.2.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/content-type": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
      "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/convert-source-map": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
      "dev": true
    },
    "node_modules/cookie": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
      "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/cors": {
      "version": "2.8.5",
      "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
      "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
      "dependencies": {
        "object-assign": "^4",
        "vary": "^1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/create-jest": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/create-jest/-/create-jest-29.7.0.tgz",
      "integrity": "sha512-Adz2bdH0Vq3F53KEMJOoftQFutWCukm6J24wbPWRO4k1kMY7gS7ds/uoJkNuV8wDCtWWnuwGcJwpWcih+zEW1Q==",
      "dev": true,
      "dependencies": {
        "@jest/types": "^29.6.3",
        "chalk": "^4.0.0",
        "exit": "^0.1.2",
        "graceful-fs": "^4.2.9",
        "jest-config": "^29.7.0",
        "jest-util": "^29.7.0",
        "prompts": "^2.0.1"
      },
      "bin": {
        "create-jest": "bin/create-jest.js"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
      "dev": true,
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/data-view-buffer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.1.tgz",
      "integrity": "sha512-0lht7OugA5x3iJLOWFhWK/5ehONdprk0ISXqVFn/NFrDu+cuc8iADFrGQz5BnRK7LLU3JmkbXSxaqX+/mXYtUA==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.6",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/data-view-byte-length": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.1.tgz",
      "integrity": "sha512-4J7wRJD3ABAzr8wP+OcIcqq2dlUKp4DVflx++hs5h5ZKydWMI6/D/fAot+yh6g2tHh8fLFTvNOaVN357NvSrOQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/data-view-byte-offset": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.0.tgz",
      "integrity": "sha512-t/Ygsytq+R995EJ5PZlD4Cu56sWa8InXySaViRzw9apusqsOO2bQP+SbYzAhR0pFKoB+43lYy8rWban9JSuXnA==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.6",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/debug": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.0.tgz",
      "integrity": "sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/dedent": {
      "version": "1.5.3",
      "resolved": "https://registry.npmjs.org/dedent/-/dedent-1.5.3.tgz",
      "integrity": "sha512-NHQtfOOW68WD8lgypbLA5oT+Bt0xXJhiYvoR6SmmNXZfpzOGXwdKWmcwG8N7PwVVWV3eF/68nmD9BaJSsTBhyQ==",
      "dev": true,
      "peerDependencies": {
        "babel-plugin-macros": "^3.1.0"
      },
      "peerDependenciesMeta": {
        "babel-plugin-macros": {
          "optional": true
        }
      }
    },
    "node_modules/deep-eql": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/deep-eql/-/deep-eql-5.0.2.tgz",
      "integrity": "sha512-h5k/5U50IJJFpzfL6nO9jaaumfjO/f2NjK/oYB2Djzm4p9L+3T9qWpZqZ2hAbLPuuYq9wrU08WQyBTL5GbPk5Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true
    },
    "node_modules/deepmerge": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz",
      "integrity": "sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/define-data-property": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
      "dev": true,
      "dependencies": {
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/define-properties": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
      "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
      "dev": true,
      "dependencies": {
        "define-data-property": "^1.0.1",
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/destroy": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/detect-newline": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/detect-newline/-/detect-newline-3.1.0.tgz",
      "integrity": "sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/diff-sequences": {
      "version": "29.6.3",
      "resolved": "https://registry.npmjs.org/diff-sequences/-/diff-sequences-29.6.3.tgz",
      "integrity": "sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==",
      "dev": true,
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/doctrine": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
      "dev": true,
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.52",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.52.tgz",
      "integrity": "sha512-xtoijJTZ+qeucLBDNztDOuQBE1ksqjvNjvqFoST3nGC7fSpqJ+X6BdTBaY5BHG+IhWWmpc6b/KfpeuEDupEPOQ==",
      "dev": true
    },
    "node_modules/emittery": {
      "version": "0.13.1",
      "resolved": "https://registry.npmjs.org/emittery/-/emittery-0.13.1.tgz",
      "integrity": "sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/emittery?sponsor=1"
      }
    },
    "node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true
    },
    "node_modules/encodeurl": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
      "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "dev": true,
      "dependencies": {
        "is-arrayish": "^0.2.1"
      }
    },
    "node_modules/es-abstract": {
      "version": "1.23.3",
      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.23.3.tgz",
      "integrity": "sha512-e+HfNH61Bj1X9/jLc5v1owaLYuHdeHHSQlkhCBiTK8rBvKaULl/beGMxwrMXjpYrv4pz22BlY570vVePA2ho4A==",
      "dev": true,
      "dependencies": {
        "array-buffer-byte-length": "^1.0.1",
        "arraybuffer.prototype.slice": "^1.0.3",
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.7",
        "data-view-buffer": "^1.0.1",
        "data-view-byte-length": "^1.0.1",
        "data-view-byte-offset": "^1.0.0",
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "es-set-tostringtag": "^2.0.3",
        "es-to-primitive": "^1.2.1",
        "function.prototype.name": "^1.1.6",
        "get-intrinsic": "^1.2.4",
        "get-symbol-description": "^1.0.2",
        "globalthis": "^1.0.3",
        "gopd": "^1.0.1",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.0.3",
        "has-symbols": "^1.0.3",
        "hasown": "^2.0.2",
        "internal-slot": "^1.0.7",
        "is-array-buffer": "^3.0.4",
        "is-callable": "^1.2.7",
        "is-data-view": "^1.0.1",
        "is-negative-zero": "^2.0.3",
        "is-regex": "^1.1.4",
        "is-shared-array-buffer": "^1.0.3",
        "is-string": "^1.0.7",
        "is-typed-array": "^1.1.13",
        "is-weakref": "^1.0.2",
        "object-inspect": "^1.13.1",
        "object-keys": "^1.1.1",
        "object.assign": "^4.1.5",
        "regexp.prototype.flags": "^1.5.2",
        "safe-array-concat": "^1.1.2",
        "safe-regex-test": "^1.0.3",
        "string.prototype.trim": "^1.2.9",
        "string.prototype.trimend": "^1.0.8",
        "string.prototype.trimstart": "^1.0.8",
        "typed-array-buffer": "^1.0.2",
        "typed-array-byte-length": "^1.0.1",
        "typed-array-byte-offset": "^1.0.2",
        "typed-array-length": "^1.0.6",
        "unbox-primitive": "^1.0.2",
        "which-typed-array": "^1.1.15"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz",
      "integrity": "sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==",
      "dev": true,
      "dependencies": {
        "get-intrinsic": "^1.2.4"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-module-lexer": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/es-module-lexer/-/es-module-lexer-1.6.0.tgz",
      "integrity": "sha512-qqnD1yMU6tk/jnaMosogGySTZP8YtUgAffA9nMN+E/rjxcfRQ6IEk7IiozUjgxKoFHBGjTLnrHB/YC45r/59EQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/es-object-atoms": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.0.0.tgz",
      "integrity": "sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==",
      "dev": true,
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-set-tostringtag": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.0.3.tgz",
      "integrity": "sha512-3T8uNMC3OQTHkFUsFq8r/BwAXLHvU/9O9mE0fBc/MY5iq/8H7ncvO947LmYA6ldWw9Uh8Yhf25zu6n7nML5QWQ==",
      "dev": true,
      "dependencies": {
        "get-intrinsic": "^1.2.4",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-shim-unscopables": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.2.tgz",
      "integrity": "sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==",
      "dev": true,
      "dependencies": {
        "hasown": "^2.0.0"
      }
    },
    "node_modules/es-to-primitive": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz",
      "integrity": "sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==",
      "dev": true,
      "dependencies": {
        "is-callable": "^1.1.4",
        "is-date-object": "^1.0.1",
        "is-symbol": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/esbuild": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz",
      "integrity": "sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==",
      "dev": true,
      "hasInstallScript": true,
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=12"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.21.5",
        "@esbuild/android-arm": "0.21.5",
        "@esbuild/android-arm64": "0.21.5",
        "@esbuild/android-x64": "0.21.5",
        "@esbuild/darwin-arm64": "0.21.5",
        "@esbuild/darwin-x64": "0.21.5",
        "@esbuild/freebsd-arm64": "0.21.5",
        "@esbuild/freebsd-x64": "0.21.5",
        "@esbuild/linux-arm": "0.21.5",
        "@esbuild/linux-arm64": "0.21.5",
        "@esbuild/linux-ia32": "0.21.5",
        "@esbuild/linux-loong64": "0.21.5",
        "@esbuild/linux-mips64el": "0.21.5",
        "@esbuild/linux-ppc64": "0.21.5",
        "@esbuild/linux-riscv64": "0.21.5",
        "@esbuild/linux-s390x": "0.21.5",
        "@esbuild/linux-x64": "0.21.5",
        "@esbuild/netbsd-x64": "0.21.5",
        "@esbuild/openbsd-x64": "0.21.5",
        "@esbuild/sunos-x64": "0.21.5",
        "@esbuild/win32-arm64": "0.21.5",
        "@esbuild/win32-ia32": "0.21.5",
        "@esbuild/win32-x64": "0.21.5"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/eslint": {
      "version": "9.14.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-9.14.0.tgz",
      "integrity": "sha512-c2FHsVBr87lnUtjP4Yhvk4yEhKrQavGafRA/Se1ouse8PfbfC/Qh9Mxa00yWsZRlqeUB9raXip0aiiUZkgnr9g==",
      "dev": true,
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.2.0",
        "@eslint-community/regexpp": "^4.12.1",
        "@eslint/config-array": "^0.18.0",
        "@eslint/core": "^0.7.0",
        "@eslint/eslintrc": "^3.1.0",
        "@eslint/js": "9.14.0",
        "@eslint/plugin-kit": "^0.2.0",
        "@humanfs/node": "^0.16.6",
        "@humanwhocodes/module-importer": "^1.0.1",
        "@humanwhocodes/retry": "^0.4.0",
        "@types/estree": "^1.0.6",
        "@types/json-schema": "^7.0.15",
        "ajv": "^6.12.4",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.2",
        "debug": "^4.3.2",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^8.2.0",
        "eslint-visitor-keys": "^4.2.0",
        "espree": "^10.3.0",
        "esquery": "^1.5.0",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^8.0.0",
        "find-up": "^5.0.0",
        "glob-parent": "^6.0.2",
        "ignore": "^5.2.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.1.2",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.3",
        "text-table": "^0.2.0"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      },
      "peerDependencies": {
        "jiti": "*"
      },
      "peerDependenciesMeta": {
        "jiti": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-config-prettier": {
      "version": "9.1.0",
      "resolved": "https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz",
      "integrity": "sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==",
      "dev": true,
      "bin": {
        "eslint-config-prettier": "bin/cli.js"
      },
      "peerDependencies": {
        "eslint": ">=7.0.0"
      }
    },
    "node_modules/eslint-import-resolver-node": {
      "version": "0.3.9",
      "resolved": "https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.9.tgz",
      "integrity": "sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==",
      "dev": true,
      "dependencies": {
        "debug": "^3.2.7",
        "is-core-module": "^2.13.0",
        "resolve": "^1.22.4"
      }
    },
    "node_modules/eslint-import-resolver-node/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/eslint-module-utils": {
      "version": "2.12.0",
      "resolved": "https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.12.0.tgz",
      "integrity": "sha512-wALZ0HFoytlyh/1+4wuZ9FJCD/leWHQzzrxJ8+rebyReSLk7LApMyd3WJaLVoN+D5+WIdJyDK1c6JnE65V4Zyg==",
      "dev": true,
      "dependencies": {
        "debug": "^3.2.7"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependenciesMeta": {
        "eslint": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-module-utils/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/eslint-plugin-import": {
      "version": "2.31.0",
      "resolved": "https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.31.0.tgz",
      "integrity": "sha512-ixmkI62Rbc2/w8Vfxyh1jQRTdRTF52VxwRVHl/ykPAmqG+Nb7/kNn+byLP0LxPgI7zWA16Jt82SybJInmMia3A==",
      "dev": true,
      "dependencies": {
        "@rtsao/scc": "^1.1.0",
        "array-includes": "^3.1.8",
        "array.prototype.findlastindex": "^1.2.5",
        "array.prototype.flat": "^1.3.2",
        "array.prototype.flatmap": "^1.3.2",
        "debug": "^3.2.7",
        "doctrine": "^2.1.0",
        "eslint-import-resolver-node": "^0.3.9",
        "eslint-module-utils": "^2.12.0",
        "hasown": "^2.0.2",
        "is-core-module": "^2.15.1",
        "is-glob": "^4.0.3",
        "minimatch": "^3.1.2",
        "object.fromentries": "^2.0.8",
        "object.groupby": "^1.0.3",
        "object.values": "^1.2.0",
        "semver": "^6.3.1",
        "string.prototype.trimend": "^1.0.8",
        "tsconfig-paths": "^3.15.0"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependencies": {
        "eslint": "^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9"
      }
    },
    "node_modules/eslint-plugin-import/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/eslint-plugin-import/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/eslint-plugin-import/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/eslint-plugin-import/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/eslint-plugin-prettier": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/eslint-plugin-prettier/-/eslint-plugin-prettier-5.2.1.tgz",
      "integrity": "sha512-gH3iR3g4JfF+yYPaJYkN7jEl9QbweL/YfkoRlNnuIEHEz1vHVlCmWOS+eGGiRuzHQXdJFCOTxRgvju9b8VUmrw==",
      "dev": true,
      "dependencies": {
        "prettier-linter-helpers": "^1.0.0",
        "synckit": "^0.9.1"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint-plugin-prettier"
      },
      "peerDependencies": {
        "@types/eslint": ">=8.0.0",
        "eslint": ">=8.0.0",
        "eslint-config-prettier": "*",
        "prettier": ">=3.0.0"
      },
      "peerDependenciesMeta": {
        "@types/eslint": {
          "optional": true
        },
        "eslint-config-prettier": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-scope": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.2.0.tgz",
      "integrity": "sha512-PHlWUfG6lvPc3yvP5A4PNyBL1W8fkDUccmI21JUu/+GKZBoH/W5u6usENXUrWFRsyoW5ACUjFGgAFQp5gUlb/A==",
      "dev": true,
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
      "dev": true,
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/eslint/node_modules/eslint-visitor-keys": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.0.tgz",
      "integrity": "sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/espree": {
      "version": "10.3.0",
      "resolved": "https://registry.npmjs.org/espree/-/espree-10.3.0.tgz",
      "integrity": "sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==",
      "dev": true,
      "dependencies": {
        "acorn": "^8.14.0",
        "acorn-jsx": "^5.3.2",
        "eslint-visitor-keys": "^4.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/espree/node_modules/eslint-visitor-keys": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.0.tgz",
      "integrity": "sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "dev": true,
      "bin": {
        "esparse": "bin/esparse.js",
        "esvalidate": "bin/esvalidate.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/esquery": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
      "dev": true,
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "dev": true,
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "dev": true,
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estree-walker": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz",
      "integrity": "sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0"
      }
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/execa": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/execa/-/execa-5.1.1.tgz",
      "integrity": "sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==",
      "dev": true,
      "dependencies": {
        "cross-spawn": "^7.0.3",
        "get-stream": "^6.0.0",
        "human-signals": "^2.1.0",
        "is-stream": "^2.0.0",
        "merge-stream": "^2.0.0",
        "npm-run-path": "^4.0.1",
        "onetime": "^5.1.2",
        "signal-exit": "^3.0.3",
        "strip-final-newline": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/execa?sponsor=1"
      }
    },
    "node_modules/exit": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/exit/-/exit-0.1.2.tgz",
      "integrity": "sha512-Zk/eNKV2zbjpKzrsQ+n1G6poVbErQxJ0LBOJXaKZ1EViLzH+hrLu9cdXI4zw9dBQJslwBEpbQ2P1oS7nDxs6jQ==",
      "dev": true,
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/expect": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/expect/-/expect-29.7.0.tgz",
      "integrity": "sha512-2Zks0hf1VLFYI1kbh0I5jP3KHHyCHpkfyHBzsSXRFgl/Bg9mWYfMW8oD+PdMPlEwy5HNsR9JutYy6pMeOh61nw==",
      "dev": true,
      "dependencies": {
        "@jest/expect-utils": "^29.7.0",
        "jest-get-type": "^29.6.3",
        "jest-matcher-utils": "^29.7.0",
        "jest-message-util": "^29.7.0",
        "jest-util": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/expect-type": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/expect-type/-/expect-type-1.1.0.tgz",
      "integrity": "sha512-bFi65yM+xZgk+u/KRIpekdSYkTB5W1pEf0Lt8Q8Msh7b+eQ7LXVtIB1Bkm4fvclDEL1b2CZkMhv2mOeF8tMdkA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/express": {
      "version": "4.21.2",
      "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
      "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "accepts": "~1.3.8",
        "array-flatten": "1.1.1",
        "body-parser": "1.20.3",
        "content-disposition": "0.5.4",
        "content-type": "~1.0.4",
        "cookie": "0.7.1",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "1.3.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "merge-descriptors": "1.0.3",
        "methods": "~1.1.2",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.12",
        "proxy-addr": "~2.0.7",
        "qs": "6.13.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.2.1",
        "send": "0.19.0",
        "serve-static": "1.16.2",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "engines": {
        "node": ">= 0.10.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/express"
      }
    },
    "node_modules/express/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/express/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "dev": true
    },
    "node_modules/fast-diff": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.3.0.tgz",
      "integrity": "sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==",
      "dev": true
    },
    "node_modules/fast-glob": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.2.tgz",
      "integrity": "sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "dev": true
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
      "dev": true
    },
    "node_modules/fastq": {
      "version": "1.17.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.17.1.tgz",
      "integrity": "sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==",
      "dev": true,
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/fb-watchman": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/fb-watchman/-/fb-watchman-2.0.2.tgz",
      "integrity": "sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==",
      "dev": true,
      "dependencies": {
        "bser": "2.1.1"
      }
    },
    "node_modules/file-entry-cache": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
      "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
      "dev": true,
      "dependencies": {
        "flat-cache": "^4.0.0"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "dev": true,
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/finalhandler": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
      "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "statuses": "2.0.1",
        "unpipe": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/finalhandler/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/finalhandler/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "dev": true,
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/flat-cache": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
      "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
      "dev": true,
      "dependencies": {
        "flatted": "^3.2.9",
        "keyv": "^4.5.4"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/flatted": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.1.tgz",
      "integrity": "sha512-X8cqMLLie7KsNUDSdzeN8FYK9rEt4Dt67OsG/DNGnYTSDBG4uFAJFBnUeiV+zCVAvwFy56IjM9sH51jVaEhNxw==",
      "dev": true
    },
    "node_modules/for-each": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
      "integrity": "sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==",
      "dev": true,
      "dependencies": {
        "is-callable": "^1.1.3"
      }
    },
    "node_modules/forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
      "dev": true
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "dev": true,
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/function.prototype.name": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.6.tgz",
      "integrity": "sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.2.0",
        "es-abstract": "^1.22.1",
        "functions-have-names": "^1.2.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/functions-have-names": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
      "dev": true,
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "dev": true,
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz",
      "integrity": "sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==",
      "dev": true,
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "has-proto": "^1.0.1",
        "has-symbols": "^1.0.3",
        "hasown": "^2.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-package-type": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/get-package-type/-/get-package-type-0.1.0.tgz",
      "integrity": "sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==",
      "dev": true,
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/get-stream": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz",
      "integrity": "sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/get-symbol-description": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.0.2.tgz",
      "integrity": "sha512-g0QYk1dZBxGwk+Ngc+ltRH2IBp2f7zBkBMBJZCDerh6EhlhSR6+9irMCuT/09zD6qkarHUSn529sK/yL4S27mg==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.5",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "deprecated": "Glob versions prior to v9 are no longer supported",
      "dev": true,
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/glob/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/glob/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/globals": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
      "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
      "dev": true,
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/globalthis": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
      "dev": true,
      "dependencies": {
        "define-properties": "^1.2.1",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gopd": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz",
      "integrity": "sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==",
      "dev": true,
      "dependencies": {
        "get-intrinsic": "^1.1.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "dev": true
    },
    "node_modules/graphemer": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
      "dev": true
    },
    "node_modules/has-bigints": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.0.2.tgz",
      "integrity": "sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==",
      "dev": true,
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
      "dev": true,
      "dependencies": {
        "es-define-property": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-proto": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz",
      "integrity": "sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
      "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "dev": true,
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "dev": true,
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/html-escaper": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz",
      "integrity": "sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==",
      "dev": true
    },
    "node_modules/http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/human-signals": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz",
      "integrity": "sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==",
      "dev": true,
      "engines": {
        "node": ">=10.17.0"
      }
    },
    "node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "dev": true,
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "dev": true,
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/import-local": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/import-local/-/import-local-3.2.0.tgz",
      "integrity": "sha512-2SPlun1JUPWoM6t3F0dw0FkCF/jWY8kttcY4f599GLTSjh2OCuuhdTkJQsEcZzBqbXZGKMK2OqW1oZsjtf/gQA==",
      "dev": true,
      "dependencies": {
        "pkg-dir": "^4.2.0",
        "resolve-cwd": "^3.0.0"
      },
      "bin": {
        "import-local-fixture": "fixtures/cli.js"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
      "dev": true,
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "dev": true
    },
    "node_modules/internal-slot": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.7.tgz",
      "integrity": "sha512-NGnrKwXzSms2qUUih/ILZ5JBqNTSa1+ZmP6flaIp6KmSElgE9qdndzS3cqjrDovwFdmwsGsLdeFgB6suw+1e9g==",
      "dev": true,
      "dependencies": {
        "es-errors": "^1.3.0",
        "hasown": "^2.0.0",
        "side-channel": "^1.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-array-buffer": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.4.tgz",
      "integrity": "sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.2",
        "get-intrinsic": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==",
      "dev": true
    },
    "node_modules/is-bigint": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.4.tgz",
      "integrity": "sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==",
      "dev": true,
      "dependencies": {
        "has-bigints": "^1.0.1"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-boolean-object": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.2.tgz",
      "integrity": "sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.2",
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.15.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.15.1.tgz",
      "integrity": "sha512-z0vtXSwucUJtANQWldhbtbt7BnL0vxiFjIdDLAatwhDYty2bad6s+rijD6Ri4YuYJubLzIJLUidCh09e1djEVQ==",
      "dev": true,
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-data-view": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.1.tgz",
      "integrity": "sha512-AHkaJrsUVW6wq6JS8y3JnM/GJF/9cf+k20+iDzlSaJrinEo5+7vRiteOSwBhHRiAyQATN1AmY4hwzxJKPmYf+w==",
      "dev": true,
      "dependencies": {
        "is-typed-array": "^1.1.13"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-date-object": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz",
      "integrity": "sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==",
      "dev": true,
      "dependencies": {
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-generator-fn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-generator-fn/-/is-generator-fn-2.1.0.tgz",
      "integrity": "sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-negative-zero": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz",
      "integrity": "sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-number-object": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.7.tgz",
      "integrity": "sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==",
      "dev": true,
      "dependencies": {
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-regex": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz",
      "integrity": "sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.2",
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-shared-array-buffer": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.3.tgz",
      "integrity": "sha512-nA2hv5XIhLR3uVzDDfCIknerhx8XUKnstuOERPNNIinXG7v9u+ohXF67vxm4TPTEPU6lm61ZkwP3c9PCB97rhg==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-stream": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz",
      "integrity": "sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-string": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.0.7.tgz",
      "integrity": "sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==",
      "dev": true,
      "dependencies": {
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-symbol": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.4.tgz",
      "integrity": "sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==",
      "dev": true,
      "dependencies": {
        "has-symbols": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typed-array": {
      "version": "1.1.13",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.13.tgz",
      "integrity": "sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==",
      "dev": true,
      "dependencies": {
        "which-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakref": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.0.2.tgz",
      "integrity": "sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/isarray": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
      "dev": true
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true
    },
    "node_modules/istanbul-lib-coverage": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.2.2.tgz",
      "integrity": "sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/istanbul-lib-instrument": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-6.0.3.tgz",
      "integrity": "sha512-Vtgk7L/R2JHyyGW07spoFlB8/lpjiOLTjMdms6AFMraYt3BaJauod/NGrfnVG/y4Ix1JEuMRPDPEj2ua+zz1/Q==",
      "dev": true,
      "dependencies": {
        "@babel/core": "^7.23.9",
        "@babel/parser": "^7.23.9",
        "@istanbuljs/schema": "^0.1.3",
        "istanbul-lib-coverage": "^3.2.0",
        "semver": "^7.5.4"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/istanbul-lib-report": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-3.0.1.tgz",
      "integrity": "sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==",
      "dev": true,
      "dependencies": {
        "istanbul-lib-coverage": "^3.0.0",
        "make-dir": "^4.0.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/istanbul-lib-source-maps": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-4.0.1.tgz",
      "integrity": "sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==",
      "dev": true,
      "dependencies": {
        "debug": "^4.1.1",
        "istanbul-lib-coverage": "^3.0.0",
        "source-map": "^0.6.1"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/istanbul-reports": {
      "version": "3.1.7",
      "resolved": "https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-3.1.7.tgz",
      "integrity": "sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==",
      "dev": true,
      "dependencies": {
        "html-escaper": "^2.0.0",
        "istanbul-lib-report": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/jest": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest/-/jest-29.7.0.tgz",
      "integrity": "sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==",
      "dev": true,
      "dependencies": {
        "@jest/core": "^29.7.0",
        "@jest/types": "^29.6.3",
        "import-local": "^3.0.2",
        "jest-cli": "^29.7.0"
      },
      "bin": {
        "jest": "bin/jest.js"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      },
      "peerDependencies": {
        "node-notifier": "^8.0.1 || ^9.0.0 || ^10.0.0"
      },
      "peerDependenciesMeta": {
        "node-notifier": {
          "optional": true
        }
      }
    },
    "node_modules/jest-changed-files": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-29.7.0.tgz",
      "integrity": "sha512-fEArFiwf1BpQ+4bXSprcDc3/x4HSzL4al2tozwVpDFpsxALjLYdyiIK4e5Vz66GQJIbXJ82+35PtysofptNX2w==",
      "dev": true,
      "dependencies": {
        "execa": "^5.0.0",
        "jest-util": "^29.7.0",
        "p-limit": "^3.1.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-circus": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-circus/-/jest-circus-29.7.0.tgz",
      "integrity": "sha512-3E1nCMgipcTkCocFwM90XXQab9bS+GMsjdpmPrlelaxwD93Ad8iVEjX/vvHPdLPnFf+L40u+5+iutRdA1N9myw==",
      "dev": true,
      "dependencies": {
        "@jest/environment": "^29.7.0",
        "@jest/expect": "^29.7.0",
        "@jest/test-result": "^29.7.0",
        "@jest/types": "^29.6.3",
        "@types/node": "*",
        "chalk": "^4.0.0",
        "co": "^4.6.0",
        "dedent": "^1.0.0",
        "is-generator-fn": "^2.0.0",
        "jest-each": "^29.7.0",
        "jest-matcher-utils": "^29.7.0",
        "jest-message-util": "^29.7.0",
        "jest-runtime": "^29.7.0",
        "jest-snapshot": "^29.7.0",
        "jest-util": "^29.7.0",
        "p-limit": "^3.1.0",
        "pretty-format": "^29.7.0",
        "pure-rand": "^6.0.0",
        "slash": "^3.0.0",
        "stack-utils": "^2.0.3"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-cli": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-cli/-/jest-cli-29.7.0.tgz",
      "integrity": "sha512-OVVobw2IubN/GSYsxETi+gOe7Ka59EFMR/twOU3Jb2GnKKeMGJB5SGUUrEz3SFVmJASUdZUzy83sLNNQ2gZslg==",
      "dev": true,
      "dependencies": {
        "@jest/core": "^29.7.0",
        "@jest/test-result": "^29.7.0",
        "@jest/types": "^29.6.3",
        "chalk": "^4.0.0",
        "create-jest": "^29.7.0",
        "exit": "^0.1.2",
        "import-local": "^3.0.2",
        "jest-config": "^29.7.0",
        "jest-util": "^29.7.0",
        "jest-validate": "^29.7.0",
        "yargs": "^17.3.1"
      },
      "bin": {
        "jest": "bin/jest.js"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      },
      "peerDependencies": {
        "node-notifier": "^8.0.1 || ^9.0.0 || ^10.0.0"
      },
      "peerDependenciesMeta": {
        "node-notifier": {
          "optional": true
        }
      }
    },
    "node_modules/jest-config": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-config/-/jest-config-29.7.0.tgz",
      "integrity": "sha512-uXbpfeQ7R6TZBqI3/TxCU4q4ttk3u0PJeC+E0zbfSoSjq6bJ7buBPxzQPL0ifrkY4DNu4JUdk0ImlBUYi840eQ==",
      "dev": true,
      "dependencies": {
        "@babel/core": "^7.11.6",
        "@jest/test-sequencer": "^29.7.0",
        "@jest/types": "^29.6.3",
        "babel-jest": "^29.7.0",
        "chalk": "^4.0.0",
        "ci-info": "^3.2.0",
        "deepmerge": "^4.2.2",
        "glob": "^7.1.3",
        "graceful-fs": "^4.2.9",
        "jest-circus": "^29.7.0",
        "jest-environment-node": "^29.7.0",
        "jest-get-type": "^29.6.3",
        "jest-regex-util": "^29.6.3",
        "jest-resolve": "^29.7.0",
        "jest-runner": "^29.7.0",
        "jest-util": "^29.7.0",
        "jest-validate": "^29.7.0",
        "micromatch": "^4.0.4",
        "parse-json": "^5.2.0",
        "pretty-format": "^29.7.0",
        "slash": "^3.0.0",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      },
      "peerDependencies": {
        "@types/node": "*",
        "ts-node": ">=9.0.0"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "ts-node": {
          "optional": true
        }
      }
    },
    "node_modules/jest-diff": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-diff/-/jest-diff-29.7.0.tgz",
      "integrity": "sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==",
      "dev": true,
      "dependencies": {
        "chalk": "^4.0.0",
        "diff-sequences": "^29.6.3",
        "jest-get-type": "^29.6.3",
        "pretty-format": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-docblock": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-docblock/-/jest-docblock-29.7.0.tgz",
      "integrity": "sha512-q617Auw3A612guyaFgsbFeYpNP5t2aoUNLwBUbc/0kD1R4t9ixDbyFTHd1nok4epoVFpr7PmeWHrhvuV3XaJ4g==",
      "dev": true,
      "dependencies": {
        "detect-newline": "^3.0.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-each": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-each/-/jest-each-29.7.0.tgz",
      "integrity": "sha512-gns+Er14+ZrEoC5fhOfYCY1LOHHr0TI+rQUHZS8Ttw2l7gl+80eHc/gFf2Ktkw0+SIACDTeWvpFcv3B04VembQ==",
      "dev": true,
      "dependencies": {
        "@jest/types": "^29.6.3",
        "chalk": "^4.0.0",
        "jest-get-type": "^29.6.3",
        "jest-util": "^29.7.0",
        "pretty-format": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-environment-node": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-29.7.0.tgz",
      "integrity": "sha512-DOSwCRqXirTOyheM+4d5YZOrWcdu0LNZ87ewUoywbcb2XR4wKgqiG8vNeYwhjFMbEkfju7wx2GYH0P2gevGvFw==",
      "dev": true,
      "dependencies": {
        "@jest/environment": "^29.7.0",
        "@jest/fake-timers": "^29.7.0",
        "@jest/types": "^29.6.3",
        "@types/node": "*",
        "jest-mock": "^29.7.0",
        "jest-util": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-get-type": {
      "version": "29.6.3",
      "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-29.6.3.tgz",
      "integrity": "sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==",
      "dev": true,
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-haste-map": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-29.7.0.tgz",
      "integrity": "sha512-fP8u2pyfqx0K1rGn1R9pyE0/KTn+G7PxktWidOBTqFPLYX0b9ksaMFkhK5vrS3DVun09pckLdlx90QthlW7AmA==",
      "dev": true,
      "dependencies": {
        "@jest/types": "^29.6.3",
        "@types/graceful-fs": "^4.1.3",
        "@types/node": "*",
        "anymatch": "^3.0.3",
        "fb-watchman": "^2.0.0",
        "graceful-fs": "^4.2.9",
        "jest-regex-util": "^29.6.3",
        "jest-util": "^29.7.0",
        "jest-worker": "^29.7.0",
        "micromatch": "^4.0.4",
        "walker": "^1.0.8"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      },
      "optionalDependencies": {
        "fsevents": "^2.3.2"
      }
    },
    "node_modules/jest-leak-detector": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-29.7.0.tgz",
      "integrity": "sha512-kYA8IJcSYtST2BY9I+SMC32nDpBT3J2NvWJx8+JCuCdl/CR1I4EKUJROiP8XtCcxqgTTBGJNdbB1A8XRKbTetw==",
      "dev": true,
      "dependencies": {
        "jest-get-type": "^29.6.3",
        "pretty-format": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-matcher-utils": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-29.7.0.tgz",
      "integrity": "sha512-sBkD+Xi9DtcChsI3L3u0+N0opgPYnCRPtGcQYrgXmR+hmt/fYfWAL0xRXYU8eWOdfuLgBe0YCW3AFtnRLagq/g==",
      "dev": true,
      "dependencies": {
        "chalk": "^4.0.0",
        "jest-diff": "^29.7.0",
        "jest-get-type": "^29.6.3",
        "pretty-format": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-message-util": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-29.7.0.tgz",
      "integrity": "sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==",
      "dev": true,
      "dependencies": {
        "@babel/code-frame": "^7.12.13",
        "@jest/types": "^29.6.3",
        "@types/stack-utils": "^2.0.0",
        "chalk": "^4.0.0",
        "graceful-fs": "^4.2.9",
        "micromatch": "^4.0.4",
        "pretty-format": "^29.7.0",
        "slash": "^3.0.0",
        "stack-utils": "^2.0.3"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-mock": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-29.7.0.tgz",
      "integrity": "sha512-ITOMZn+UkYS4ZFh83xYAOzWStloNzJFO2s8DWrE4lhtGD+AorgnbkiKERe4wQVBydIGPx059g6riW5Btp6Llnw==",
      "dev": true,
      "dependencies": {
        "@jest/types": "^29.6.3",
        "@types/node": "*",
        "jest-util": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-pnp-resolver": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/jest-pnp-resolver/-/jest-pnp-resolver-1.2.3.tgz",
      "integrity": "sha512-+3NpwQEnRoIBtx4fyhblQDPgJI0H1IEIkX7ShLUjPGA7TtUTvI1oiKi3SR4oBR0hQhQR80l4WAe5RrXBwWMA8w==",
      "dev": true,
      "engines": {
        "node": ">=6"
      },
      "peerDependencies": {
        "jest-resolve": "*"
      },
      "peerDependenciesMeta": {
        "jest-resolve": {
          "optional": true
        }
      }
    },
    "node_modules/jest-regex-util": {
      "version": "29.6.3",
      "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-29.6.3.tgz",
      "integrity": "sha512-KJJBsRCyyLNWCNBOvZyRDnAIfUiRJ8v+hOBQYGn8gDyF3UegwiP4gwRR3/SDa42g1YbVycTidUF3rKjyLFDWbg==",
      "dev": true,
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-resolve": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.7.0.tgz",
      "integrity": "sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==",
      "dev": true,
      "dependencies": {
        "chalk": "^4.0.0",
        "graceful-fs": "^4.2.9",
        "jest-haste-map": "^29.7.0",
        "jest-pnp-resolver": "^1.2.2",
        "jest-util": "^29.7.0",
        "jest-validate": "^29.7.0",
        "resolve": "^1.20.0",
        "resolve.exports": "^2.0.0",
        "slash": "^3.0.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-resolve-dependencies": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-resolve-dependencies/-/jest-resolve-dependencies-29.7.0.tgz",
      "integrity": "sha512-un0zD/6qxJ+S0et7WxeI3H5XSe9lTBBR7bOHCHXkKR6luG5mwDDlIzVQ0V5cZCuoTgEdcdwzTghYkTWfubi+nA==",
      "dev": true,
      "dependencies": {
        "jest-regex-util": "^29.6.3",
        "jest-snapshot": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-runner": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-runner/-/jest-runner-29.7.0.tgz",
      "integrity": "sha512-fsc4N6cPCAahybGBfTRcq5wFR6fpLznMg47sY5aDpsoejOcVYFb07AHuSnR0liMcPTgBsA3ZJL6kFOjPdoNipQ==",
      "dev": true,
      "dependencies": {
        "@jest/console": "^29.7.0",
        "@jest/environment": "^29.7.0",
        "@jest/test-result": "^29.7.0",
        "@jest/transform": "^29.7.0",
        "@jest/types": "^29.6.3",
        "@types/node": "*",
        "chalk": "^4.0.0",
        "emittery": "^0.13.1",
        "graceful-fs": "^4.2.9",
        "jest-docblock": "^29.7.0",
        "jest-environment-node": "^29.7.0",
        "jest-haste-map": "^29.7.0",
        "jest-leak-detector": "^29.7.0",
        "jest-message-util": "^29.7.0",
        "jest-resolve": "^29.7.0",
        "jest-runtime": "^29.7.0",
        "jest-util": "^29.7.0",
        "jest-watcher": "^29.7.0",
        "jest-worker": "^29.7.0",
        "p-limit": "^3.1.0",
        "source-map-support": "0.5.13"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-runtime": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-runtime/-/jest-runtime-29.7.0.tgz",
      "integrity": "sha512-gUnLjgwdGqW7B4LvOIkbKs9WGbn+QLqRQQ9juC6HndeDiezIwhDP+mhMwHWCEcfQ5RUXa6OPnFF8BJh5xegwwQ==",
      "dev": true,
      "dependencies": {
        "@jest/environment": "^29.7.0",
        "@jest/fake-timers": "^29.7.0",
        "@jest/globals": "^29.7.0",
        "@jest/source-map": "^29.6.3",
        "@jest/test-result": "^29.7.0",
        "@jest/transform": "^29.7.0",
        "@jest/types": "^29.6.3",
        "@types/node": "*",
        "chalk": "^4.0.0",
        "cjs-module-lexer": "^1.0.0",
        "collect-v8-coverage": "^1.0.0",
        "glob": "^7.1.3",
        "graceful-fs": "^4.2.9",
        "jest-haste-map": "^29.7.0",
        "jest-message-util": "^29.7.0",
        "jest-mock": "^29.7.0",
        "jest-regex-util": "^29.6.3",
        "jest-resolve": "^29.7.0",
        "jest-snapshot": "^29.7.0",
        "jest-util": "^29.7.0",
        "slash": "^3.0.0",
        "strip-bom": "^4.0.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-snapshot": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-snapshot/-/jest-snapshot-29.7.0.tgz",
      "integrity": "sha512-Rm0BMWtxBcioHr1/OX5YCP8Uov4riHvKPknOGs804Zg9JGZgmIBkbtlxJC/7Z4msKYVbIJtfU+tKb8xlYNfdkw==",
      "dev": true,
      "dependencies": {
        "@babel/core": "^7.11.6",
        "@babel/generator": "^7.7.2",
        "@babel/plugin-syntax-jsx": "^7.7.2",
        "@babel/plugin-syntax-typescript": "^7.7.2",
        "@babel/types": "^7.3.3",
        "@jest/expect-utils": "^29.7.0",
        "@jest/transform": "^29.7.0",
        "@jest/types": "^29.6.3",
        "babel-preset-current-node-syntax": "^1.0.0",
        "chalk": "^4.0.0",
        "expect": "^29.7.0",
        "graceful-fs": "^4.2.9",
        "jest-diff": "^29.7.0",
        "jest-get-type": "^29.6.3",
        "jest-matcher-utils": "^29.7.0",
        "jest-message-util": "^29.7.0",
        "jest-util": "^29.7.0",
        "natural-compare": "^1.4.0",
        "pretty-format": "^29.7.0",
        "semver": "^7.5.3"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-util": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz",
      "integrity": "sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==",
      "dev": true,
      "dependencies": {
        "@jest/types": "^29.6.3",
        "@types/node": "*",
        "chalk": "^4.0.0",
        "ci-info": "^3.2.0",
        "graceful-fs": "^4.2.9",
        "picomatch": "^2.2.3"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-validate": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-validate/-/jest-validate-29.7.0.tgz",
      "integrity": "sha512-ZB7wHqaRGVw/9hST/OuFUReG7M8vKeq0/J2egIGLdvjHCmYqGARhzXmtgi+gVeZ5uXFF219aOc3Ls2yLg27tkw==",
      "dev": true,
      "dependencies": {
        "@jest/types": "^29.6.3",
        "camelcase": "^6.2.0",
        "chalk": "^4.0.0",
        "jest-get-type": "^29.6.3",
        "leven": "^3.1.0",
        "pretty-format": "^29.7.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-validate/node_modules/camelcase": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz",
      "integrity": "sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/jest-watcher": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-watcher/-/jest-watcher-29.7.0.tgz",
      "integrity": "sha512-49Fg7WXkU3Vl2h6LbLtMQ/HyB6rXSIX7SqvBLQmssRBGN9I0PNvPmAmCWSOY6SOvrjhI/F7/bGAv9RtnsPA03g==",
      "dev": true,
      "dependencies": {
        "@jest/test-result": "^29.7.0",
        "@jest/types": "^29.6.3",
        "@types/node": "*",
        "ansi-escapes": "^4.2.1",
        "chalk": "^4.0.0",
        "emittery": "^0.13.1",
        "jest-util": "^29.7.0",
        "string-length": "^4.0.1"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-worker": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-29.7.0.tgz",
      "integrity": "sha512-eIz2msL/EzL9UFTFFx7jBTkeZfku0yUAyZZZmJ93H2TYEiroIx2PQjEXcwYtYl8zXCxb+PAmA2hLIt/6ZEkPHw==",
      "dev": true,
      "dependencies": {
        "@types/node": "*",
        "jest-util": "^29.7.0",
        "merge-stream": "^2.0.0",
        "supports-color": "^8.0.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/jest-worker/node_modules/supports-color": {
      "version": "8.1.1",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz",
      "integrity": "sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==",
      "dev": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/supports-color?sponsor=1"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "dev": true
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dev": true,
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsesc": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.0.2.tgz",
      "integrity": "sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g==",
      "dev": true,
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true
    },
    "node_modules/json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==",
      "dev": true
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
      "dev": true
    },
    "node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "dev": true,
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "dev": true,
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/kleur": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz",
      "integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/leven": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/leven/-/leven-3.1.0.tgz",
      "integrity": "sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "dev": true,
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
      "dev": true
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "dev": true,
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true
    },
    "node_modules/loupe": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/loupe/-/loupe-3.1.2.tgz",
      "integrity": "sha512-23I4pFZHmAemUnz8WZXbYRSKYj801VDaNv9ETuMh7IrMc7VuVVSo+Z9iLE3ni30+U48iDWfi30d3twAXBYmnCg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/magic-string": {
      "version": "0.30.17",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz",
      "integrity": "sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.0"
      }
    },
    "node_modules/make-dir": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-4.0.0.tgz",
      "integrity": "sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==",
      "dev": true,
      "dependencies": {
        "semver": "^7.5.3"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/makeerror": {
      "version": "1.0.12",
      "resolved": "https://registry.npmjs.org/makeerror/-/makeerror-1.0.12.tgz",
      "integrity": "sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==",
      "dev": true,
      "dependencies": {
        "tmpl": "1.0.5"
      }
    },
    "node_modules/media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/merge-descriptors": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
      "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/merge-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==",
      "dev": true
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true,
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "dev": true,
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mimic-fn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
      "dev": true,
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true
    },
    "node_modules/nanoid": {
      "version": "3.3.7",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.7.tgz",
      "integrity": "sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
      "dev": true
    },
    "node_modules/negotiator": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
      "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/node-int64": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz",
      "integrity": "sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==",
      "dev": true
    },
    "node_modules/node-releases": {
      "version": "2.0.18",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.18.tgz",
      "integrity": "sha512-d9VeXT4SJ7ZeOqGX6R5EM022wpL+eWPooLI+5UpWn2jCT1aosUQEhQP214x33Wkwx3JQMvIm+tIoVOdodFS40g==",
      "dev": true
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/npm-run-path": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz",
      "integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==",
      "dev": true,
      "dependencies": {
        "path-key": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.2.tgz",
      "integrity": "sha512-IRZSRuzJiynemAXPYtPe5BoI/RESNYR7TYm50MC5Mqbd3Jmw5y790sErYw3V6SryFJD64b74qQQs9wn5Bg/k3g==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.assign": {
      "version": "4.1.5",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.5.tgz",
      "integrity": "sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.5",
        "define-properties": "^1.2.1",
        "has-symbols": "^1.0.3",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.fromentries": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz",
      "integrity": "sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.groupby": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/object.groupby/-/object.groupby-1.0.3.tgz",
      "integrity": "sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.values": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.2.0.tgz",
      "integrity": "sha512-yBYjY9QX2hnRmZHAjG/f13MzmBzxzYgQhFrke06TTyKY5zSTEqkOeukBzIdVA3j3ulu8Qa3MbVFShV7T2RmGtQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/on-finished": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ee-first": "1.1.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dev": true,
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/onetime": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
      "dev": true,
      "dependencies": {
        "mimic-fn": "^2.1.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/optionator": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
      "dev": true,
      "dependencies": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "dev": true,
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "dev": true,
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parse-json": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
      "dev": true,
      "dependencies": {
        "@babel/code-frame": "^7.0.0",
        "error-ex": "^1.3.1",
        "json-parse-even-better-errors": "^2.3.0",
        "lines-and-columns": "^1.1.6"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true
    },
    "node_modules/path-to-regexp": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
      "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/pathe": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/pathe/-/pathe-2.0.2.tgz",
      "integrity": "sha512-15Ztpk+nov8DR524R4BF7uEuzESgzUEAV4Ah7CUMNGXdE5ELuvxElxGXndBl32vMSsWa1jpNf22Z+Er3sKwq+w==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/pathval": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/pathval/-/pathval-2.0.0.tgz",
      "integrity": "sha512-vE7JKRyES09KiunauX7nd2Q9/L7lhok4smP9RZTDeD4MVs72Dp2qNFVz39Nz5a0FVEW0BJR6C0DYrq6unoziZA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 14.16"
      }
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "dev": true
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pirates": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.6.tgz",
      "integrity": "sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==",
      "dev": true,
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/pkg-dir": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
      "integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
      "dev": true,
      "dependencies": {
        "find-up": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/pkg-dir/node_modules/find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "dev": true,
      "dependencies": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/pkg-dir/node_modules/locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "dev": true,
      "dependencies": {
        "p-locate": "^4.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/pkg-dir/node_modules/p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "dev": true,
      "dependencies": {
        "p-try": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/pkg-dir/node_modules/p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "dev": true,
      "dependencies": {
        "p-limit": "^2.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/possible-typed-array-names": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.0.0.tgz",
      "integrity": "sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/postcss": {
      "version": "8.4.47",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.47.tgz",
      "integrity": "sha512-56rxCq7G/XfB4EkXq9Egn5GCqugWvDFjafDOThIdMBsI15iqPqR5r15TfSr1YPYeEI19YeaXMCbY6u88Y76GLQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "nanoid": "^3.3.7",
        "picocolors": "^1.1.0",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "dev": true,
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/prettier": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/prettier/-/prettier-3.3.3.tgz",
      "integrity": "sha512-i2tDNA0O5IrMO757lfrdQZCc2jPNDVntV0m/+4whiDfWaTKfMNgR7Qz0NAeGz/nRqF4m5/6CLzbP4/liHt12Ew==",
      "dev": true,
      "bin": {
        "prettier": "bin/prettier.cjs"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/prettier/prettier?sponsor=1"
      }
    },
    "node_modules/prettier-linter-helpers": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/prettier-linter-helpers/-/prettier-linter-helpers-1.0.0.tgz",
      "integrity": "sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==",
      "dev": true,
      "dependencies": {
        "fast-diff": "^1.1.2"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/pretty-format": {
      "version": "29.7.0",
      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz",
      "integrity": "sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==",
      "dev": true,
      "dependencies": {
        "@jest/schemas": "^29.6.3",
        "ansi-styles": "^5.0.0",
        "react-is": "^18.0.0"
      },
      "engines": {
        "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
      }
    },
    "node_modules/pretty-format/node_modules/ansi-styles": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/prompts": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/prompts/-/prompts-2.4.2.tgz",
      "integrity": "sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==",
      "dev": true,
      "dependencies": {
        "kleur": "^3.0.3",
        "sisteransi": "^1.0.5"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/pure-rand": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/pure-rand/-/pure-rand-6.1.0.tgz",
      "integrity": "sha512-bVWawvoZoBYpp6yIoQtQXHZjmz35RSVHnUOTefl8Vcjr8snTPY1wnpSPMWekcFwbxI6gtmT7rSYPFvz71ldiOA==",
      "dev": true,
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/dubzzz"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fast-check"
        }
      ]
    },
    "node_modules/qs": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
      "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "side-channel": "^1.0.6"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/raw-body": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
      "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/react-is": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
      "dev": true
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/regexp.prototype.flags": {
      "version": "1.5.3",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.3.tgz",
      "integrity": "sha512-vqlC04+RQoFalODCbCumG2xIOvapzVMHwsyIGM/SIE8fRhFFsXeH8/QQ+s0T0kDAhKc4k30s73/0ydkHQz6HlQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-errors": "^1.3.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.8",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz",
      "integrity": "sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==",
      "dev": true,
      "dependencies": {
        "is-core-module": "^2.13.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-cwd": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz",
      "integrity": "sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==",
      "dev": true,
      "dependencies": {
        "resolve-from": "^5.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/resolve-cwd/node_modules/resolve-from": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
      "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/resolve.exports": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/resolve.exports/-/resolve.exports-2.0.2.tgz",
      "integrity": "sha512-X2UW6Nw3n/aMgDVy+0rSqgHlv39WZAlZrXCdnbyEiKm17DSqHX4MmQMaST3FbeWR5FTuRcUwYAziZajji0Y7mg==",
      "dev": true,
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/reusify": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
      "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
      "dev": true,
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rollup": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.24.4.tgz",
      "integrity": "sha512-vGorVWIsWfX3xbcyAS+I047kFKapHYivmkaT63Smj77XwvLSJos6M1xGqZnBPFQFBRZDOcG1QnYEIxAvTr/HjA==",
      "dev": true,
      "dependencies": {
        "@types/estree": "1.0.6"
      },
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "@rollup/rollup-android-arm-eabi": "4.24.4",
        "@rollup/rollup-android-arm64": "4.24.4",
        "@rollup/rollup-darwin-arm64": "4.24.4",
        "@rollup/rollup-darwin-x64": "4.24.4",
        "@rollup/rollup-freebsd-arm64": "4.24.4",
        "@rollup/rollup-freebsd-x64": "4.24.4",
        "@rollup/rollup-linux-arm-gnueabihf": "4.24.4",
        "@rollup/rollup-linux-arm-musleabihf": "4.24.4",
        "@rollup/rollup-linux-arm64-gnu": "4.24.4",
        "@rollup/rollup-linux-arm64-musl": "4.24.4",
        "@rollup/rollup-linux-powerpc64le-gnu": "4.24.4",
        "@rollup/rollup-linux-riscv64-gnu": "4.24.4",
        "@rollup/rollup-linux-s390x-gnu": "4.24.4",
        "@rollup/rollup-linux-x64-gnu": "4.24.4",
        "@rollup/rollup-linux-x64-musl": "4.24.4",
        "@rollup/rollup-win32-arm64-msvc": "4.24.4",
        "@rollup/rollup-win32-ia32-msvc": "4.24.4",
        "@rollup/rollup-win32-x64-msvc": "4.24.4",
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/safe-array-concat": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.2.tgz",
      "integrity": "sha512-vj6RsCsWBCf19jIeHEfkRMw8DPiBb+DMXklQ/1SGDHOMlHdPUkZXFQ2YdplS23zESTijAcurb1aSgJA3AgMu1Q==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "get-intrinsic": "^1.2.4",
        "has-symbols": "^1.0.3",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">=0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/safe-regex-test": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.3.tgz",
      "integrity": "sha512-CdASjNJPvRa7roO6Ra/gLYBTzYzzPyyBXxIMdGW3USQLyjWEls2RgW5UBTXaQVp+OrpeCK3bLem8smtmheoRuw==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.6",
        "es-errors": "^1.3.0",
        "is-regex": "^1.1.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/semver": {
      "version": "7.6.3",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.6.3.tgz",
      "integrity": "sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/send": {
      "version": "0.19.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
      "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/send/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/send/node_modules/debug/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/send/node_modules/encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/serve-static": {
      "version": "1.16.2",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
      "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.19.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/set-function-length": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
      "dev": true,
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.4",
        "gopd": "^1.0.1",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-function-name": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
      "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
      "dev": true,
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "functions-have-names": "^1.2.3",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/side-channel": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz",
      "integrity": "sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.4",
        "object-inspect": "^1.13.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/siginfo": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/siginfo/-/siginfo-2.0.0.tgz",
      "integrity": "sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
      "dev": true
    },
    "node_modules/sisteransi": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz",
      "integrity": "sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==",
      "dev": true
    },
    "node_modules/slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-support": {
      "version": "0.5.13",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.13.tgz",
      "integrity": "sha512-SHSKFHadjVA5oR4PPqhtAVdcBWwRYVd6g6cAXnIbRiIwc2EhPrTuKUBdSLvlEKyIP3GCf89fltvcZiP9MMFA1w==",
      "dev": true,
      "dependencies": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "node_modules/sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==",
      "dev": true
    },
    "node_modules/stack-utils": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.6.tgz",
      "integrity": "sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==",
      "dev": true,
      "dependencies": {
        "escape-string-regexp": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/stack-utils/node_modules/escape-string-regexp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
      "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/stackback": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/stackback/-/stackback-0.0.2.tgz",
      "integrity": "sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/std-env": {
      "version": "3.8.0",
      "resolved": "https://registry.npmjs.org/std-env/-/std-env-3.8.0.tgz",
      "integrity": "sha512-Bc3YwwCB+OzldMxOXJIIvC6cPRWr/LxOp48CdQTOkPyk/t4JWWJbrilwBd7RJzKV8QW7tJkcgAmeuLLJugl5/w==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/string-length": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/string-length/-/string-length-4.0.2.tgz",
      "integrity": "sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==",
      "dev": true,
      "dependencies": {
        "char-regex": "^1.0.2",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string.prototype.trim": {
      "version": "1.2.9",
      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.9.tgz",
      "integrity": "sha512-klHuCNxiMZ8MlsOihJhJEBJAiMVqU3Z2nEXWfWnIqjN0gEFS9J9+IxKozWWtQGcgoa1WUZzLjKPTr4ZHNFTFxw==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.0",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimend": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.8.tgz",
      "integrity": "sha512-p73uL5VCHCO2BZZ6krwwQE3kCzM7NKmis8S//xEC6fQonchbum4eP6kR4DLEjQFO3Wnj3Fuo8NM0kOSjVdHjZQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimstart": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
      "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-bom": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-4.0.0.tgz",
      "integrity": "sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-final-newline": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz",
      "integrity": "sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "dev": true,
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/synckit": {
      "version": "0.9.2",
      "resolved": "https://registry.npmjs.org/synckit/-/synckit-0.9.2.tgz",
      "integrity": "sha512-vrozgXDQwYO72vHjUb/HnFbQx1exDjoKzqx23aXEg2a9VIg2TSFZ8FmeZpTjUCFMYw7mpX4BE2SFu8wI7asYsw==",
      "dev": true,
      "dependencies": {
        "@pkgr/core": "^0.1.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/unts"
      }
    },
    "node_modules/terser": {
      "version": "5.36.0",
      "resolved": "https://registry.npmjs.org/terser/-/terser-5.36.0.tgz",
      "integrity": "sha512-IYV9eNMuFAV4THUspIRXkLakHnV6XO7FEdtKjf/mDyrnqUg9LnlOn6/RwRvM9SZjR4GUq8Nk8zj67FzVARr74w==",
      "dev": true,
      "dependencies": {
        "@jridgewell/source-map": "^0.3.3",
        "acorn": "^8.8.2",
        "commander": "^2.20.0",
        "source-map-support": "~0.5.20"
      },
      "bin": {
        "terser": "bin/terser"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/terser/node_modules/source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "dev": true,
      "dependencies": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "node_modules/test-exclude": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz",
      "integrity": "sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==",
      "dev": true,
      "dependencies": {
        "@istanbuljs/schema": "^0.1.2",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/test-exclude/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/test-exclude/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/text-table": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
      "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==",
      "dev": true
    },
    "node_modules/tinybench": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/tinybench/-/tinybench-2.9.0.tgz",
      "integrity": "sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/tinyexec": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/tinyexec/-/tinyexec-0.3.2.tgz",
      "integrity": "sha512-KQQR9yN7R5+OSwaK0XQoj22pwHoTlgYqmUscPYoknOoWCWfj/5/ABTMRi69FrKU5ffPVh5QcFikpWJI/P1ocHA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/tinypool": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/tinypool/-/tinypool-1.0.2.tgz",
      "integrity": "sha512-al6n+QEANGFOMf/dmUMsuS5/r9B06uwlyNjZZql/zv8J7ybHCgoihBNORZCY2mzUuAnomQa2JdhyHKzZxPCrFA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      }
    },
    "node_modules/tinyrainbow": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/tinyrainbow/-/tinyrainbow-2.0.0.tgz",
      "integrity": "sha512-op4nsTR47R6p0vMUUoYl/a+ljLFVtlfaXkLQmqfLR1qHma1h/ysYk4hEXZ880bf2CYgTskvTa/e196Vd5dDQXw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/tinyspy": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/tinyspy/-/tinyspy-3.0.2.tgz",
      "integrity": "sha512-n1cw8k1k0x4pgA2+9XrOkFydTerNcJ1zWCO5Nn9scWHTD+5tp8dghT2x1uduQePZTZgd3Tupf+x9BxJjeJi77Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/tmpl": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/tmpl/-/tmpl-1.0.5.tgz",
      "integrity": "sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==",
      "dev": true
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/ts-api-utils": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.4.0.tgz",
      "integrity": "sha512-032cPxaEKwM+GT3vA5JXNzIaizx388rhsSW79vGRNGXfRRAdEAn2mvk36PvK5HnOchyWZ7afLEXqYCvPCrzuzQ==",
      "dev": true,
      "engines": {
        "node": ">=16"
      },
      "peerDependencies": {
        "typescript": ">=4.2.0"
      }
    },
    "node_modules/tsconfig-paths": {
      "version": "3.15.0",
      "resolved": "https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.15.0.tgz",
      "integrity": "sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==",
      "dev": true,
      "dependencies": {
        "@types/json5": "^0.0.29",
        "json5": "^1.0.2",
        "minimist": "^1.2.6",
        "strip-bom": "^3.0.0"
      }
    },
    "node_modules/tsconfig-paths/node_modules/json5": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.2.tgz",
      "integrity": "sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==",
      "dev": true,
      "dependencies": {
        "minimist": "^1.2.0"
      },
      "bin": {
        "json5": "lib/cli.js"
      }
    },
    "node_modules/tsconfig-paths/node_modules/strip-bom": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
      "integrity": "sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "dev": true
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "dev": true,
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/type-detect": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz",
      "integrity": "sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/type-fest": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz",
      "integrity": "sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/typed-array-buffer": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.2.tgz",
      "integrity": "sha512-gEymJYKZtKXzzBzM4jqa9w6Q1Jjm7x2d+sh19AdsD4wqnMPDYyvwpsIc2Q/835kHuo3BEQ7CjelGhfTsoBb2MQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "es-errors": "^1.3.0",
        "is-typed-array": "^1.1.13"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/typed-array-byte-length": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.1.tgz",
      "integrity": "sha512-3iMJ9q0ao7WE9tWcaYKIptkNBuOIcZCCT0d4MRvuuH88fEoEH62IuQe0OtraD3ebQEoTRk8XCBoknUNc1Y67pw==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "has-proto": "^1.0.3",
        "is-typed-array": "^1.1.13"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-byte-offset": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.2.tgz",
      "integrity": "sha512-Ous0vodHa56FviZucS2E63zkgtgrACj7omjwd/8lTEMEPFFyjfixMZ1ZXenpgCFBBt4EC1J2XsyVS2gkG0eTFA==",
      "dev": true,
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.7",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "has-proto": "^1.0.3",
        "is-typed-array": "^1.1.13"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-length": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.6.tgz",
      "integrity": "sha512-/OxDN6OtAk5KBpGb28T+HZc2M+ADtvRxXrKKbUwtsLgdoxgX13hyy7ek6bFRl5+aBs2yZzB0c4CnQfAtVypW/g==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "has-proto": "^1.0.3",
        "is-typed-array": "^1.1.13",
        "possible-typed-array-names": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typescript": {
      "version": "5.6.3",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.6.3.tgz",
      "integrity": "sha512-hjcS1mhfuyi4WW8IWtjP7brDrG2cuDZukyrYrSauoXGNgx0S7zceP07adYkJycEr56BOUTNPzbInooiN3fn1qw==",
      "dev": true,
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/unbox-primitive": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.2.tgz",
      "integrity": "sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.2",
        "has-bigints": "^1.0.2",
        "has-symbols": "^1.0.3",
        "which-boxed-primitive": "^1.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/undici-types": {
      "version": "6.19.8",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.19.8.tgz",
      "integrity": "sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==",
      "dev": true
    },
    "node_modules/unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.1.tgz",
      "integrity": "sha512-R8UzCaa9Az+38REPiJ1tXlImTJXlVfgHZsglwBD/k6nj76ctsH1E3q4doGrukiLQd3sGQYu56r5+lo5r94l29A==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.0"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dev": true,
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/v8-to-istanbul": {
      "version": "9.3.0",
      "resolved": "https://registry.npmjs.org/v8-to-istanbul/-/v8-to-istanbul-9.3.0.tgz",
      "integrity": "sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==",
      "dev": true,
      "dependencies": {
        "@jridgewell/trace-mapping": "^0.3.12",
        "@types/istanbul-lib-coverage": "^2.0.1",
        "convert-source-map": "^2.0.0"
      },
      "engines": {
        "node": ">=10.12.0"
      }
    },
    "node_modules/vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/vite": {
      "version": "5.4.10",
      "resolved": "https://registry.npmjs.org/vite/-/vite-5.4.10.tgz",
      "integrity": "sha512-1hvaPshuPUtxeQ0hsVH3Mud0ZanOLwVTneA1EgbAM5LhaZEqyPWGRQ7BtaMvUrTDeEaC8pxtj6a6jku3x4z6SQ==",
      "dev": true,
      "dependencies": {
        "esbuild": "^0.21.3",
        "postcss": "^8.4.43",
        "rollup": "^4.20.0"
      },
      "bin": {
        "vite": "bin/vite.js"
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "funding": {
        "url": "https://github.com/vitejs/vite?sponsor=1"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      },
      "peerDependencies": {
        "@types/node": "^18.0.0 || >=20.0.0",
        "less": "*",
        "lightningcss": "^1.21.0",
        "sass": "*",
        "sass-embedded": "*",
        "stylus": "*",
        "sugarss": "*",
        "terser": "^5.4.0"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "less": {
          "optional": true
        },
        "lightningcss": {
          "optional": true
        },
        "sass": {
          "optional": true
        },
        "sass-embedded": {
          "optional": true
        },
        "stylus": {
          "optional": true
        },
        "sugarss": {
          "optional": true
        },
        "terser": {
          "optional": true
        }
      }
    },
    "node_modules/vite-node": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/vite-node/-/vite-node-3.0.4.tgz",
      "integrity": "sha512-7JZKEzcYV2Nx3u6rlvN8qdo3QV7Fxyt6hx+CCKz9fbWxdX5IvUOmTWEAxMrWxaiSf7CKGLJQ5rFu8prb/jBjOA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "cac": "^6.7.14",
        "debug": "^4.4.0",
        "es-module-lexer": "^1.6.0",
        "pathe": "^2.0.2",
        "vite": "^5.0.0 || ^6.0.0"
      },
      "bin": {
        "vite-node": "vite-node.mjs"
      },
      "engines": {
        "node": "^18.0.0 || ^20.0.0 || >=22.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/vitest"
      }
    },
    "node_modules/vite-plugin-css-injected-by-js": {
      "version": "3.5.2",
      "resolved": "https://registry.npmjs.org/vite-plugin-css-injected-by-js/-/vite-plugin-css-injected-by-js-3.5.2.tgz",
      "integrity": "sha512-2MpU/Y+SCZyWUB6ua3HbJCrgnF0KACAsmzOQt1UvRVJCGF6S8xdA3ZUhWcWdM9ivG4I5az8PnQmwwrkC2CAQrQ==",
      "dev": true,
      "peerDependencies": {
        "vite": ">2.0.0-0"
      }
    },
    "node_modules/vitest": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/vitest/-/vitest-3.0.4.tgz",
      "integrity": "sha512-6XG8oTKy2gnJIFTHP6LD7ExFeNLxiTkK3CfMvT7IfR8IN+BYICCf0lXUQmX7i7JoxUP8QmeP4mTnWXgflu4yjw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@vitest/expect": "3.0.4",
        "@vitest/mocker": "3.0.4",
        "@vitest/pretty-format": "^3.0.4",
        "@vitest/runner": "3.0.4",
        "@vitest/snapshot": "3.0.4",
        "@vitest/spy": "3.0.4",
        "@vitest/utils": "3.0.4",
        "chai": "^5.1.2",
        "debug": "^4.4.0",
        "expect-type": "^1.1.0",
        "magic-string": "^0.30.17",
        "pathe": "^2.0.2",
        "std-env": "^3.8.0",
        "tinybench": "^2.9.0",
        "tinyexec": "^0.3.2",
        "tinypool": "^1.0.2",
        "tinyrainbow": "^2.0.0",
        "vite": "^5.0.0 || ^6.0.0",
        "vite-node": "3.0.4",
        "why-is-node-running": "^2.3.0"
      },
      "bin": {
        "vitest": "vitest.mjs"
      },
      "engines": {
        "node": "^18.0.0 || ^20.0.0 || >=22.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/vitest"
      },
      "peerDependencies": {
        "@edge-runtime/vm": "*",
        "@types/debug": "^4.1.12",
        "@types/node": "^18.0.0 || ^20.0.0 || >=22.0.0",
        "@vitest/browser": "3.0.4",
        "@vitest/ui": "3.0.4",
        "happy-dom": "*",
        "jsdom": "*"
      },
      "peerDependenciesMeta": {
        "@edge-runtime/vm": {
          "optional": true
        },
        "@types/debug": {
          "optional": true
        },
        "@types/node": {
          "optional": true
        },
        "@vitest/browser": {
          "optional": true
        },
        "@vitest/ui": {
          "optional": true
        },
        "happy-dom": {
          "optional": true
        },
        "jsdom": {
          "optional": true
        }
      }
    },
    "node_modules/walker": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/walker/-/walker-1.0.8.tgz",
      "integrity": "sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==",
      "dev": true,
      "dependencies": {
        "makeerror": "1.0.12"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/which-boxed-primitive": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.0.2.tgz",
      "integrity": "sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==",
      "dev": true,
      "dependencies": {
        "is-bigint": "^1.0.1",
        "is-boolean-object": "^1.1.0",
        "is-number-object": "^1.0.4",
        "is-string": "^1.0.5",
        "is-symbol": "^1.0.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-typed-array": {
      "version": "1.1.15",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.15.tgz",
      "integrity": "sha512-oV0jmFtUky6CXfkqehVvBP/LSWJ2sy4vWMioiENyJLePrBO/yKyV9OyJySfAKosh+RYkIl5zJCNZ8/4JncrpdA==",
      "dev": true,
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.7",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/why-is-node-running": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/why-is-node-running/-/why-is-node-running-2.3.0.tgz",
      "integrity": "sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "siginfo": "^2.0.0",
        "stackback": "0.0.2"
      },
      "bin": {
        "why-is-node-running": "cli.js"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/word-wrap": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "dev": true
    },
    "node_modules/write-file-atomic": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-4.0.2.tgz",
      "integrity": "sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==",
      "dev": true,
      "dependencies": {
        "imurmurhash": "^0.1.4",
        "signal-exit": "^3.0.7"
      },
      "engines": {
        "node": "^12.13.0 || ^14.15.0 || >=16.0.0"
      }
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "dev": true
    },
    "node_modules/yargs": {
      "version": "17.7.2",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
      "dev": true,
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "dev": true,
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    }
  }
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/package.json
File type: .json
{
  "name": "now-widget-ts",
  "version": "1.0.0",
  "description": "A lightweight widget to display user posts using Vanilla JavaScript and TypeScript.",
  "type": "module",
  "files": [
    "dist"
  ],
  "main": "./dist/now-widget.umd.cjs",
  "module": "./dist/now-widget.js",
  "exports": {
    ".": {
      "import": "./dist/now-widget.js",
      "require": "./dist/now-widget.umd.cjs"
    }
  },
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "preview": "vite preview",
    "test": "jest",
    "lint": "eslint 'src/**/*.{js,ts}'",
    "lint:fix": "eslint 'src/**/*.{js,ts}' --fix",
    "watch": "node watch-build.js",
    "serve": "node scripts/dev-server.js",
    "dev:all": "npm run build && npm run serve"
  },
  "author": "Romain BOBOE",
  "license": "MIT",
  "devDependencies": {
    "@types/jest": "^29.5.13",
    "@typescript-eslint/eslint-plugin": "^8.8.0",
    "@typescript-eslint/parser": "^8.8.0",
    "chokidar": "^3.5.3",
    "eslint": "^9.11.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-prettier": "^5.2.1",
    "express": "^4.18.2",
    "jest": "^29.7.0",
    "prettier": "^3.2.0",
    "terser": "^5.36.0",
    "typescript": "^5.4.0",
    "vite": "^5.4.2",
    "vite-plugin-css-injected-by-js": "^3.5.2",
    "vitest": "^3.0.4"
  },
  "dependencies": {
    "cors": "^2.8.5",
    "express": "^4.18.2"
  }
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/tsconfig.json
File type: .json
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "module": "ESNext",
    "lib": ["ES2020", "ES2015", "DOM", "DOM.Iterable"],
    "skipLibCheck": true,
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"]
    }
  },
  "include": ["src"],
  "exclude": ["node_modules", "dist"]
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/vite.config.ts
File type: .ts
import { defineConfig } from 'vite';
import cssInjectedByJsPlugin from 'vite-plugin-css-injected-by-js';
import { securityConfig } from './src/config/security';

// Define environment variables that should be available in the browser
const browserEnvVars = {
    NODE_ENV: process.env.NODE_ENV || 'production',
    API_BASE: process.env.API_BASE || 'https://nownownow.io'
};

export default defineConfig({
    plugins: [cssInjectedByJsPlugin()],
    define: {
        // Replace process.env with a browser-safe version
        'process.env': browserEnvVars
    },
    build: {
        lib: {
            entry: 'src/index.ts',
            name: 'NowWidget',
            fileName: 'now-widget',
            formats: ['umd']
        },
        rollupOptions: {
            output: {
                banner: '/*! MIT License. Copyright 2024 Romain BOBOE <rboboe@base32.tech>. See LICENSE.txt. */',
                assetFileNames: 'now-widget.[ext]',
                entryFileNames: 'now-widget.js',
                chunkFileNames: 'now-widget-[name].js',
                exports: 'named'
            }
        },
        sourcemap: true,
        minify: 'terser',
        outDir: 'dist'
    },
    css: {
        modules: {
            localsConvention: 'camelCase'
        }
    },
    server: {
        cors: true, // Enable CORS for all origins in development
        headers: {
            'Access-Control-Allow-Origin': '*',
            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',
            'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',
            'Access-Control-Allow-Credentials': 'true',
            ...securityConfig.headers,
            // Override CSP for development to allow HMR
            'Content-Security-Policy': securityConfig.headers['Content-Security-Policy']
                .replace("'self'", "'self' ws: localhost:* http://localhost:*")
        },
        proxy: {
            // Proxy requests to the API in development
            '/api': {
                target: 'http://localhost:3000',
                changeOrigin: true,
                secure: false
            }
        }
    }
});

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.windserfrules.md
File type: .md
# [NownownowIo]

Every time you choose to apply a rule(s), explicitly state the rule(s) in the output. You can abbreviate the rule description to a single word or phrase.
Staart the output with "Marcus" at the beginning of the output an also specify with rull you are applying.

## Project Context


## Code Style and Structure
- Write concise, technical TypeScript code with accurate examples
- Use functional and declarative programming patterns; avoid classes
- Prefer iteration and modularization over code duplication
- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError)

## Project Statistics

- Total files: 505

## Folder Structure
Check the fiel structure in the latest file inthe 'tree-maker' repo

## Naming Conventions
- Use lowercase with dashes for directories (e.g., components/form-wizard)
- Favor named exports for components and utilities
- Use PascalCase for component files (e.g., VisaForm.tsx)
- Use camelCase for utility files (e.g., formValidator.ts)

## TypeScript Usage
- Use TypeScript for all code; prefer interfaces over types
- Avoid enums; use const objects with 'as const' assertion
- Use functional components with TypeScript interfaces
- Define strict types for message passing between different parts of the extension
- Use absolute imports for all files @/...
- Avoid try/catch blocks unless there's good reason to translate or handle error in that abstraction
- Use explicit return types for all functions


## State Management
- Use React Context for global state when needed
- Implement proper state persistence using chrome.storage (for extension)
- Implement proper cleanup in useEffect hooks

## Syntax and Formatting
- Use "function" keyword for pure functions
- Avoid unnecessary curly braces in conditionals
- Use declarative JSX
- Implement proper TypeScript discriminated unions for message types

## UI and Styling
- Use Shadcn UI and Radix for components
- use `npx shadcn@latest add <component-name>` to add new shadcn components
- Implement Tailwind CSS for styling
- Consider extension-specific constraints (popup dimensions, permissions)
- Follow Material Design guidelines for Chrome extensions
- When adding new shadcn component, document the installation command

## Error Handling
- Implement proper error boundaries
- Log errors appropriately for debugging
- Provide user-friendly error messages
- Handle network failures gracefully

## Refactoring
- Alway refer to the code structure before refactoring
- Refactor only when necessary
- Don't remove comments
- Don't remove working features and functionality. 
- Don't break existing features and functionality
- Make sure the refactoring is consistent with the code structure and won't create new issues.

## Testing
- Write unit tests for utilities and components
- Implement E2E tests for critical flows
- Test across different Chrome versions
- Test memory usage and performance

## Security
- Implement Content Security Policy
- Sanitize user inputs
- Handle sensitive data properly
- Follow Chrome extension security best practices
- Implement proper CORS handling

## Git Usage
Commit Message Prefixes:
- "fix:" for bug fixes
- "feat:" for new features
- "perf:" for performance improvements
- "docs:" for documentation changes
- "style:" for formatting changes
- "refactor:" for code refactoring
- "test:" for adding missing tests
- "chore:" for maintenance tasks

Rules:
- Use lowercase for commit messages
- Keep the summary line concise
- Include description for non-obvious changes
- Reference issue numbers when applicable

## Documentation
- Maintain clear README with setup instructions
- Document API interactions and data flows
- Keep manifest.json well-documented
- Don't include comments unless it's for complex logic
- Document permission requirements

## Development Workflow
- Use proper version control
- Implement proper code review process
- Test in multiple environments
- Follow semantic versioning for releases
- Maintain changelog

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.eslintrc.json
File type: .json
{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "import", "prettier"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "prettier/prettier": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error"],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          ["sibling", "parent"],
          "index"
        ],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/dist/now-widget.js
File type: .js
!function(){"use strict";try{if("undefined"!=typeof document){var e=document.createElement("style");e.appendChild(document.createTextNode(':root{--button-size: 120px;--panel-width: 380px;font-family:Inter,system-ui,Avenir,Helvetica,Arial,sans-serif;line-height:1.5;font-weight:400;font-synthesis:none;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.container{position:relative;z-index:2;display:flex;align-items:center;justify-content:center;width:100%;height:100%;padding:1rem}#now-widget-host-content{position:relative;transition:transform .3s ease;min-height:100vh}#now-widget-host-content.panel-open{transform:translate(var(--panel-width))}#now-widget-button{position:fixed;bottom:clamp(10px,3vh,20px);left:clamp(10px,3vw,20px);width:var(--button-size);height:var(--button-size);border-radius:50%;background:var(--button-color);border:none;cursor:pointer;z-index:10001;transition:all .5s cubic-bezier(.4,0,.2,1);pointer-events:auto;opacity:1;visibility:visible;transition:opacity .3s ease-in-out,visibility .3s ease-in-out,transform .3s ease-in-out}#now-widget-button.panel-open{transform:translate(calc(var(--panel-width) - 40px));opacity:0;visibility:hidden;pointer-events:none}#now-widget-button.hidden{opacity:0;visibility:hidden;pointer-events:none}#now-widget-button .button-content{width:100%;height:100%;display:flex;align-items:center;justify-content:center;transition:transform .3s ease;cursor:inherit}#now-widget-button.hovered .button-content{transform:scale(1.1)}.text-ring{width:100%;height:100%;position:relative;animation:spin 60s linear infinite;animation-direction:normal;cursor:inherit}.now-text{position:absolute;transform-origin:center;font-weight:700;color:var(--theme-text);cursor:inherit}.fast-spin{animation:spin 1s linear infinite;animation-direction:normal}.slow-spin{animation:spin 5s linear infinite;animation-direction:normal}.now-widget-panel{position:fixed;top:0;bottom:0;width:var(--panel-width);background:var(--now-widget-bg-color);box-shadow:0 0 20px #0000004d;transition:transform .3s ease-in-out;overflow-y:auto;z-index:999999;padding:0;display:flex;flex-direction:column}.now-widget-panel.open{transform:translate(0)}.now-widget-header{padding:20px;border-bottom:1px solid var(--now-widget-border-color);position:sticky;top:0;background:var(--now-widget-bg-color);z-index:2}.now-widget-user-container{display:flex;align-items:center;gap:16px}.now-widget-avatar-container{flex-shrink:0}.now-widget-avatar{width:60px;height:60px;border-radius:50%;object-fit:cover;border:2px solid var(--now-widget-border-color)}.now-widget-user-details{flex-grow:1;min-width:0}.now-widget-user-name{font-size:1.25rem;font-weight:600;margin:0 0 4px;color:var(--now-widget-text-color)}.now-widget-user-role{font-size:.9rem;color:var(--now-widget-secondary-text-color);margin:0 0 8px;line-height:1.4}.now-widget-user-stats{font-size:.875rem;color:var(--now-widget-secondary-text-color);margin:0}.now-widget-posts{padding:12px 20px;display:flex;flex-direction:column;gap:24px}.now-widget-post{display:flex;flex-direction:column;gap:12px}.now-widget-post-time{font-size:.875rem;color:var(--now-widget-secondary-text-color);margin:0}.now-widget-post-content{font-size:.95rem;line-height:1.5;margin:0;color:var(--now-widget-text-color)}.now-widget-post-image{width:100%;height:200px;border-radius:12px;background-size:cover;background-position:center;background-repeat:no-repeat;margin-top:8px}.now-widget-post-stats{display:flex;gap:16px;color:var(--now-widget-secondary-text-color);font-size:.875rem}.now-widget-post-stat{display:flex;align-items:center;gap:4px}.now-widget-post-stat svg{opacity:.8}.now-widget-close-button{position:absolute;top:20px;right:20px;background:transparent;border:none;color:var(--now-widget-text-color);font-size:24px;cursor:pointer;padding:0;width:32px;height:32px;display:flex;align-items:center;justify-content:center;border-radius:50%;transition:background-color .2s}.now-widget-close-button:hover{background-color:var(--now-widget-hover-color)}.now-widget-panel::-webkit-scrollbar{width:8px}.now-widget-panel::-webkit-scrollbar-track{background:var(--now-widget-bg-color)}.now-widget-panel::-webkit-scrollbar-thumb{background:var(--now-widget-border-color);border-radius:4px}.now-widget-panel::-webkit-scrollbar-thumb:hover{background:var(--now-widget-secondary-text-color)}.now-widget-hashtag{color:var(--button-color);text-decoration:none;transition:color .2s ease}.now-widget-hashtag:hover{color:var(--button-color);filter:brightness(120%);text-decoration:underline}.now-widget-overlay{position:fixed;top:0;left:0;width:100%;height:100%;background:#00000080;backdrop-filter:blur(8px);-webkit-backdrop-filter:blur(8px);border:1px solid rgba(255,255,255,.1);opacity:0;visibility:hidden;transition:all .3s ease;z-index:9999}.now-widget-overlay.visible{opacity:1;visibility:visible}body.no-scroll{overflow:hidden}@keyframes float{0%,to{transform:translate(0) scale(1)}25%{transform:translate(5vw,-5vh) scale(1.05)}50%{transform:translate(10vw) scale(1)}75%{transform:translate(5vw,5vh) scale(1.05)}}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.now-widget-post{padding:1.25rem;margin-bottom:1.25rem;background:var(--theme-post-bg);border-radius:1rem;border:1px solid var(--theme-border);transition:transform .2s ease}.now-widget-post-header{display:flex;justify-content:space-between;align-items:center;margin-bottom:.75rem}.now-widget-post-org-info{display:flex;align-items:center;gap:.75rem}.now-widget-post-avatar{width:2.5rem;height:2.5rem;border-radius:50%;object-fit:cover}.now-widget-post-username{font-weight:500;color:var(--theme-text);display:block}.now-widget-post-timestamp{font-size:.875rem;color:var(--theme-text-secondary);display:block}.now-widget-post-content{margin:.75rem 0;white-space:pre-wrap;word-break:break-word}.now-widget-media-container{display:grid;gap:.75rem;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));margin:.75rem 0}.now-widget-media{max-width:100%;border-radius:.5rem;max-height:30rem;object-fit:cover}.now-widget-post-divider{margin:.75rem 0;border:0;border-top:1px solid var(--theme-border)}.now-widget-post-metrics{display:flex;justify-content:space-between;align-items:center}.now-widget-metrics-left{display:flex;gap:1.25rem}.now-widget-metric-button{display:flex;align-items:center;gap:.5rem;background:none;border:none;color:var(--theme-text-secondary);cursor:pointer;padding:.25rem;transition:color .2s ease}.now-widget-metric-button:hover{color:var(--theme-text)}.now-widget-comments-container{margin-top:1rem;padding-top:1rem;border-top:1px solid var(--theme-border)}.now-widget-comment{padding:.75rem;margin-bottom:.75rem;background:var(--theme-background);border-radius:.5rem}.now-widget-comment-header{display:flex;align-items:center;gap:.5rem;margin-bottom:.5rem}.now-widget-comment-avatar{width:1.5rem;height:1.5rem;border-radius:50%;object-fit:cover}.now-widget-comment-username{font-weight:500;color:var(--theme-text)}.now-widget-comment-time{font-size:.75rem;color:var(--theme-text-secondary)}.now-widget-comment-content{margin:0;color:var(--theme-text);font-size:.875rem}.now-widget-comments-toggle{cursor:pointer;transition:color .2s}.now-widget-comments-toggle:hover,.now-widget-comments-toggle.active{color:var(--now-widget-text-color)}.now-widget-comments-container{margin-top:12px;border-top:1px solid var(--now-widget-border-color);padding-top:12px}.now-widget-comments{display:flex;flex-direction:column;gap:16px}.now-widget-comment{display:flex;flex-direction:column;gap:8px}.now-widget-comment-header{display:flex;align-items:center;gap:8px}.now-widget-comment-avatar{width:24px;height:24px;border-radius:50%;object-fit:cover}.now-widget-comment-username{font-weight:500;color:var(--now-widget-text-color);font-size:.875rem}.now-widget-comment-time{color:var(--now-widget-secondary-text-color);font-size:.75rem;margin-left:auto}.now-widget-comment-content{margin:0;font-size:.875rem;line-height:1.4;color:var(--now-widget-text-color);padding-left:32px}#now-widget-button:after{content:"Click to open NowWidget";position:absolute;bottom:100%;left:50%;transform:translate(-50%);background-color:#000c;color:#fff;padding:5px 10px;border-radius:4px;white-space:nowrap;opacity:0;pointer-events:none;transition:opacity .3s ease;margin-bottom:8px;font-size:.8rem}#now-widget-button:hover:after{opacity:1}#now-widget-button .button-content,#now-widget-button .text-ring,#now-widget-button .now-text{cursor:inherit}.now-widget-error-state{display:flex;flex-direction:column;align-items:center;justify-content:center;text-align:center;padding:2rem;min-height:300px;color:var(--now-widget-text-color)}.now-widget-error-icon{margin-bottom:1.5rem;opacity:.7;animation:fadeIn .5s ease-out}.now-widget-error-icon svg{width:64px;height:64px;stroke:var(--now-widget-text-color);stroke-width:1.5}.now-widget-error-title{font-size:1.5rem;font-weight:600;margin:0 0 1rem;animation:slideDown .5s ease-out}.now-widget-error-message{font-size:1rem;line-height:1.5;margin:0 0 1.5rem;color:var(--now-widget-secondary-text-color);max-width:280px;animation:slideDown .6s ease-out}.now-widget-error-help{font-size:.875rem;color:var(--now-widget-secondary-text-color);opacity:.8;margin:0;animation:slideDown .7s ease-out}@keyframes fadeIn{0%{opacity:0}to{opacity:.7}}@keyframes slideDown{0%{opacity:0;transform:translateY(-10px)}to{opacity:1;transform:translateY(0)}}')),document.head.appendChild(e)}}catch(t){console.error("vite-plugin-css-injected-by-js",t)}}();
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).NowWidget={})}(this,(function(e){"use strict";var t=Object.defineProperty,n=(e,n,o)=>((e,n,o)=>n in e?t(e,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[n]=o)(e,"symbol"!=typeof n?n+"":n,o)
/*! MIT License. Copyright 2024 Romain BOBOE <rboboe@base32.tech>. See LICENSE.txt. */;class o{constructor(){n(this,"state",{loading:!1,user:null,posts:[],initialized:!1,rootElement:null}),n(this,"error",null),n(this,"getState",(()=>({...this.state}))),n(this,"initializeWidgetRoot",(e=>{if(this.state.rootElement)try{this.state.rootElement.parentNode&&this.state.rootElement.parentNode.removeChild(this.state.rootElement)}catch(t){this.handleError("Error cleaning up existing root: "+t)}this.state.rootElement=e,this.state.initialized=!0})),n(this,"resetState",(()=>{this.state={loading:!1,user:null,posts:[],initialized:!1,rootElement:null}})),n(this,"setLoading",(e=>{this.state.initialized&&(this.state.loading=e,this.updateUI())})),n(this,"setPosts",(e=>{this.state.initialized&&(this.state.posts=e,this.updateUI())})),n(this,"setUser",(e=>{this.state.initialized&&(this.state.user=e,this.updateUI())})),n(this,"updateUI",(()=>{if(!this.state.rootElement||!this.state.initialized)return;const e=this.state.rootElement.querySelector(".loading-indicator");e&&e.classList.toggle("visible",this.state.loading),this.state.user&&((e,t)=>{const n=t.querySelector(".now-widget-org-info");if(n&&e){const t=document.createElement("img");t.className="now-widget-avatar",t.src=e.avatar||"",t.alt=e.name;const o=document.createElement("div");o.className="now-widget-user-details",o.innerHTML=`\n            <h2 class="now-widget-user-name">${e.displayName||e.name}</h2>\n            <p class="now-widget-user-bio">${e.bio||""}</p>\n        `,n.innerHTML="",n.appendChild(t),n.appendChild(o)}})(this.state.user,this.state.rootElement),this.state.posts.length>0&&((e,t)=>{const n=t.querySelector("#now-widget-content");n&&(n.innerHTML="<h2>Your Posts</h2>",e.forEach((e=>{const t=document.createElement("div");t.className="now-widget-post",t.innerHTML=`<p>${e.content}</p>`,n.appendChild(t)})))})(this.state.posts,this.state.rootElement)})),n(this,"handleError",(e=>{this.error=e,console.error("Widget error:",e)})),n(this,"getError",(()=>this.error)),n(this,"clearError",(()=>{this.error=null}))}}const i=(()=>{const e=new o;return{getState:e.getState,initializeWidgetRoot:e.initializeWidgetRoot,resetState:e.resetState,setLoading:e.setLoading,setPosts:e.setPosts,setUser:e.setUser,updateUI:e.updateUI,handleError:e.handleError,getError:e.getError,clearError:e.clearError}})();function s(e,t,n,o){var i,s;e.classList.toggle("now-widget-dark-theme","dark"===t),"left"===n?(e.classList.add("now-widget-left"),e.classList.remove("now-widget-right")):(e.classList.add("now-widget-right"),e.classList.remove("now-widget-left"));const r=document.createElement("style"),a=Object.entries(o).filter((([e,t])=>void 0!==t)).map((([e,t])=>`${e}: ${t};`)).join("\n");r.textContent=`\n        :host {\n            ${a}\n        }\n    `;const l=null==(i=e.shadowRoot)?void 0:i.querySelectorAll("style[data-now-widget-theme]");null==l||l.forEach((e=>e.remove())),r.setAttribute("data-now-widget-theme","true"),null==(s=e.shadowRoot)||s.appendChild(r),console.log("[StyleUtils] Styles applied to container:",{id:e.id,theme:t,position:n,variables:o})}function r(e,t){requestAnimationFrame((()=>{Object.assign(e.style,t)}))}const a=new WeakMap;function l(e,t,n,o){const i=a.get(e);i&&(e.removeEventListener(t,n,o),i.forEach((e=>{e.type===t&&e.handler===n&&e.options===o&&i.delete(e)})),0===i.size&&a.delete(e))}function d(e){const t=a.get(e);t&&(t.forEach((t=>{e.removeEventListener(t.type,t.handler,t.options)})),a.delete(e))}const c={addListener:function(e,t,n,o){var i;a.has(e)||a.set(e,new Set);const s={type:t,handler:n,options:o};return null==(i=a.get(e))||i.add(s),e.addEventListener(t,n,o),()=>l(e,t,n,o)},removeListener:l,removeAllListeners:d,cleanup:function(){const e=new Set;for(const t of Array.from(document.querySelectorAll("*")))a.has(t)&&e.add(t);e.forEach(d)},getListenerCount:function(e){var t;return(null==(t=a.get(e))?void 0:t.size)??0}};class u{constructor(e,t={}){n(this,"observer"),n(this,"container"),n(this,"options"),n(this,"isObserving",!1),n(this,"detachCallbacks"),this.container=e,this.options=t,this.detachCallbacks=new Map,this.observer=null,this.setupObserver()}setupObserver(){this.observer=new MutationObserver((e=>{var t,n;this.handleMutations(e),document.contains(this.container)||(console.log("Widget container detached from DOM"),null==(n=(t=this.options).onDetach)||n.call(t),requestAnimationFrame((()=>{var e,t;document.contains(this.container)||(document.body.appendChild(this.container),console.log("Widget container reattached to DOM"),null==(t=(e=this.options).onReattach)||t.call(e))})));const o=e.filter((e=>"attributes"===e.type&&e.target===this.container));o.length>0&&this.options.onAttributeChange&&this.options.onAttributeChange(o)}))}startObserving(){!this.isObserving&&this.observer&&(this.observer.observe(document.body,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["style","class","id"]}),this.isObserving=!0,console.log("Started observing DOM changes"))}stopObserving(){this.isObserving&&this.observer&&(this.observer.disconnect(),this.isObserving=!1,console.log("Stopped observing DOM changes"))}updateContainer(e){this.container=e,this.isObserving&&(this.stopObserving(),this.startObserving())}destroy(){this.stopObserving(),this.observer=null}observe(e,t){this.observer&&this.observer.observe(e,t)}onDetach(e,t){this.detachCallbacks.set(e,t)}disconnect(){this.observer&&(this.observer.disconnect(),this.detachCallbacks.clear())}handleMutations(e){for(const t of e)if("childList"===t.type&&t.removedNodes.length>0)for(const e of t.removedNodes){const t=this.detachCallbacks.get(e);t&&(t(),this.detachCallbacks.delete(e))}}}function m(e={}){if(console.log("[NowButton] Creating button with config:",e),function(){var e;const t=document.getElementById("now-widget-button-container"),n=null==(e=null==t?void 0:t.shadowRoot)?void 0:e.querySelector(".now-widget-button");return console.log("[ButtonUtils] Button presence check:",{container:!!t,button:!!n,shadowRoot:!!(null==t?void 0:t.shadowRoot)}),!(!t||!n)}()){console.log("[NowButton] Button already exists in DOM");return document.getElementById("now-widget-button-container")}const t=function(){console.log("[ButtonUtils] Creating button elements...");const e=document.createElement("div");e.id="now-widget-button-container";const t=e.attachShadow({mode:"open"}),n=document.createElement("style");n.textContent="\n    :host {\n        display: block;\n        position: relative;\n        z-index: 2147483647;\n    }\n\n    .now-widget-button {\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        width: var(--button-size, 120px);\n        height: var(--button-size, 120px);\n        border-radius: 50%;\n        background: var(--button-color, #0066cc);\n        border: none;\n        cursor: pointer;\n        z-index: 2147483647;\n        transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n        opacity: 1;\n        padding: 0;\n        margin: 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        pointer-events: auto;\n    }\n\n    .now-widget-button:hover {\n        transform: scale(1.05);\n        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);\n    }\n\n    .now-widget-button-left {\n        left: 20px;\n        right: auto;\n    }\n\n    .button-content {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: white;\n        font-family: system-ui, -apple-system, sans-serif;\n        font-size: 16px;\n        position: relative;\n        pointer-events: none;\n    }\n\n    .text-container {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        animation: rotate 15s linear infinite;\n        pointer-events: none;\n    }\n\n    .arrow-icon {\n        width: 24px;\n        height: 24px;\n        position: absolute;\n        transition: transform 0.3s ease;\n        pointer-events: none;\n    }\n\n    @keyframes rotate {\n        from { transform: rotate(0deg); }\n        to { transform: rotate(360deg); }\n    }\n",t.appendChild(n);const o=document.createElement("button");o.className="now-widget-button",o.setAttribute("aria-label","Show Now Status");const i=document.createElement("div");i.className="button-content";const s=document.createElement("div");s.className="text-container",s.textContent="NOW";const r=document.createElement("div");return r.className="arrow-icon",r.innerHTML='\n        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n            <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n        </svg>\n    ',i.appendChild(s),i.appendChild(r),o.appendChild(i),t.appendChild(o),console.log("[ButtonUtils] Button elements created:",{container:e,button:o,content:i,textContainer:s,arrowIcon:r}),{container:e,button:o,content:i,textContainer:s,arrowIcon:r}}();return function(e,t){console.log("[ButtonUtils] Applying button configuration:",t);const{container:n,button:o}=e;t.size&&n.style.setProperty("--button-size",`${t.size}px`),t.color&&n.style.setProperty("--button-color",t.color),"left"===t.position&&o.classList.add("now-widget-button-left"),console.log("[ButtonUtils] Button configuration applied")}(t,e),console.log("[NowButton] Button created and configured"),t.container}function p(e){const t=new Date,n=Math.floor((t.getTime()-e.getTime())/1e3),o={year:31536e3,month:2592e3,week:604800,day:86400,hour:3600,minute:60,second:1};for(const[i,s]of Object.entries(o)){const e=Math.floor(n/s);if(e>=1)return 1===e?`1 ${i} ago`:`${e} ${i}s ago`}return"just now"}const h={BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,SSR:!1},g="undefined"!=typeof window&&!!window.document,w=e=>{var t;if(g){const n=null==(t=window.__ENV__)?void 0:t[e];if(n)return n;const o=h[e];if(o)return o}},f={API_BASE:(()=>{const e=w("API_BASE");if(e)return e;return"development"===w("NODE_ENV")||g&&"localhost"===window.location.hostname?"http://localhost:3000":"https://nownownow.io"})(),IS_BROWSER:g,IS_DEVELOPMENT:"development"===w("NODE_ENV")||g&&"localhost"===window.location.hostname},v={ORG_INFO:`${f.API_BASE}/api/users/{orgId}`,ORG_POSTS:`${f.API_BASE}/api/users/{orgId}/posts`,UPDATE_STATUS:`${f.API_BASE}/api/status`};f.IS_DEVELOPMENT&&console.log("API Base URL:",f.API_BASE);const b={cors:{allowedOrigins:["*"],allowedMethods:["GET","POST","OPTIONS"],allowedHeaders:["Content-Type","Authorization","X-Client-Version","X-Environment"],exposedHeaders:[],credentials:!0,maxAge:86400},headers:{"Strict-Transport-Security":"max-age=31536000; includeSubDomains","X-Content-Type-Options":"nosniff","X-Frame-Options":"DENY","X-XSS-Protection":"1; mode=block","Referrer-Policy":"strict-origin-when-cross-origin","Content-Security-Policy":["default-src 'self'","script-src 'self' 'unsafe-inline' 'unsafe-eval'","style-src 'self' 'unsafe-inline'","img-src 'self' data: https:","connect-src 'self' https:","font-src 'self'","object-src 'none'","media-src 'none'","frame-src 'none'"].join("; ")}};async function y(e){return new Promise((t=>setTimeout(t,e)))}async function E(e,t,n=3){try{f.IS_DEVELOPMENT&&console.log(`API Request: ${e}`,t);const o=b.headers,i=await fetch(e,{...t,headers:{...o,...t.headers,Accept:"application/json","X-Client-Version":"1.0.0","X-Environment":f.IS_DEVELOPMENT?"development":"production"}});if(!i.ok){if(429===i.status&&n>0)return await y(1e3),E(e,t,n-1);throw new Error(`HTTP error! status: ${i.status}`)}const s=await i.json();return f.IS_DEVELOPMENT&&console.log(`API Response: ${e}`,s),{success:!0,data:s}}catch(o){return n>0?(await y(1e3),E(e,t,n-1)):(console.error("API request failed:",o),{success:!1,error:o instanceof Error?o.message:"Unknown error occurred"})}}async function C(e){if(!f.IS_BROWSER)throw new Error("API calls are not supported in non-browser environments");const t=await E(v.ORG_INFO.replace("{orgId}","me"),{method:"GET",headers:{Authorization:`Bearer ${e}`}});if(t.success&&t.data){const{user:e}=t.data;return{id:e.id,name:e.name,email:e.email,emailVerified:e.emailVerified,avatar:e.avatar,status:e.status,displayName:e.displayName,bio:e.bio,followers:e.followers}}throw new Error(t.error||"Failed to fetch user info")}async function x(e){if(!f.IS_BROWSER)throw new Error("API calls are not supported in non-browser environments");const t=await E(v.ORG_POSTS.replace("{orgId}","me"),{method:"GET",headers:{Authorization:`Bearer ${e}`}});if(t.success&&t.data)return t.data.posts;throw new Error(t.error||"Failed to fetch user posts")}function L(e,t,n="error"){const o=document.createElement("div");o.className="now-widget-error-state";const i=document.createElement("div");i.className="now-widget-error-icon";const s="error"===n?'<svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line></svg>':'<svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor"><circle cx="12" cy="12" r="10"></circle><path d="M8 14s1.5 2 4 2 4-2 4-2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line></svg>';i.innerHTML=s;const r=document.createElement("h3");r.className="now-widget-error-title",r.textContent=e;const a=document.createElement("p");return a.className="now-widget-error-message",a.textContent=t,o.appendChild(i),o.appendChild(r),o.appendChild(a),o}const k=e=>{var t,n,o;const i=document.createElement("div");i.classList.add("now-widget-post");const s=document.createElement("p");s.classList.add("now-widget-post-time");const r=p(new Date(e.createdAt));s.textContent=r;const a=document.createElement("p");a.classList.add("now-widget-post-content"),a.textContent=e.content;const l=document.createElement("div");l.classList.add("now-widget-post-stats");const d=document.createElement("span");d.classList.add("now-widget-post-stat"),d.innerHTML=`<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n    <path d="M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"></path>\n  </svg> ${(null==(t=e._count)?void 0:t.likes)||0}`;const c=document.createElement("span");if(c.classList.add("now-widget-post-stat"),c.innerHTML=`<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n    <path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path>\n  </svg> ${(null==(n=e._count)?void 0:n.comments)||0}`,null==(o=e.comments)?void 0:o.length){const t=document.createElement("div");t.classList.add("now-widget-comments-container"),t.style.display="none";const n=(e=>{const t=document.createElement("div");return t.classList.add("now-widget-comments"),e.forEach((e=>{const n=document.createElement("div");n.classList.add("now-widget-comment");const o=document.createElement("div");o.classList.add("now-widget-comment-header");const i=document.createElement("img");i.src=e.user.image,i.alt=e.user.name,i.classList.add("now-widget-comment-avatar");const s=document.createElement("span");s.classList.add("now-widget-comment-username"),s.textContent=e.user.name;const r=document.createElement("span");r.classList.add("now-widget-comment-time"),r.textContent=p(new Date(e.createdAt)),o.appendChild(i),o.appendChild(s),o.appendChild(r);const a=document.createElement("p");a.classList.add("now-widget-comment-content"),a.textContent=e.content,n.appendChild(o),n.appendChild(a),t.appendChild(n)})),t})(e.comments);t.appendChild(n),c.addEventListener("click",(()=>{const e="block"===t.style.display;t.style.display=e?"none":"block",c.classList.toggle("active")})),i.appendChild(t)}if(l.appendChild(d),l.appendChild(c),i.appendChild(s),i.appendChild(a),i.appendChild(l),e.attachments&&e.attachments.length>0){const t=e.attachments[0];if("image"===t.type){const e=document.createElement("div");e.classList.add("now-widget-post-image"),e.style.backgroundImage=`url(${t.url})`,i.appendChild(e)}}return i};function S(e){const{posts:t,user:n}=e,o=document.createElement("div");o.className="now-widget-panel",o.setAttribute("now-data-position",document.body.getAttribute("data-widget-position")||"right");const i=document.createElement("div");i.className="now-widget-backdrop",i.addEventListener("click",(()=>{o.dispatchEvent(new CustomEvent("close"))}));const s=document.createElement("div");s.className="panel-header",s.innerHTML='\n    <div class="header-content">\n      <h2 id="panel-title">Latest Updates</h2>\n      <button class="close-button" aria-label="Close panel">×</button>\n    </div>\n  ';const r=document.createElement("div");r.className="panel-content";const a=document.createElement("style");a.textContent="\n    .panel-header {\n      padding: 1rem;\n      border-bottom: 1px solid var(--now-border-color, rgba(255, 255, 255, 0.1));\n      background: var(--now-bg-color);\n    }\n    \n    .header-content {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    \n    #panel-title {\n      margin: 0;\n      font-size: 1.2rem;\n      font-weight: 600;\n      color: var(--now-text-color);\n    }\n    \n    .close-button {\n      background: none;\n      border: none;\n      color: var(--now-text-color);\n      font-size: 1.5rem;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n      opacity: 0.7;\n      transition: opacity 200ms ease;\n    }\n    \n    .close-button:hover {\n      opacity: 1;\n    }\n    \n    .panel-content {\n      height: calc(100vh - 4rem);\n      overflow-y: auto;\n      padding: 1rem;\n    }\n    \n    .panel-content::-webkit-scrollbar {\n      width: 8px;\n    }\n    \n    .panel-content::-webkit-scrollbar-track {\n      background: transparent;\n    }\n    \n    .panel-content::-webkit-scrollbar-thumb {\n      background: var(--now-border-color, rgba(255, 255, 255, 0.1));\n      border-radius: 4px;\n    }\n    \n    .now-widget-error-state {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      padding: 2rem;\n      text-align: center;\n      color: var(--now-text-color);\n    }\n    \n    .now-widget-error-icon {\n      margin-bottom: 1rem;\n      opacity: 0.7;\n    }\n    \n    .now-widget-error-title {\n      margin: 0 0 0.5rem;\n      font-size: 1.1rem;\n    }\n    \n    .now-widget-error-message {\n      margin: 0;\n      opacity: 0.7;\n      font-size: 0.9rem;\n    }\n    \n    @media (max-width: 768px) {\n      .panel-content {\n        height: calc(100vh - 3rem);\n      }\n    }\n  ",o.appendChild(a),o.appendChild(i),o.appendChild(s),o.appendChild(r);const l=s.querySelector(".close-button");if(l&&l.addEventListener("click",(()=>{o.dispatchEvent(new CustomEvent("close"))})),!n){const e=L("User Not Found","We couldn't find this user in our system. The user ID might be incorrect or the account might have been removed.","error");return r.appendChild(e),o}if(0===t.length){const e=L("No Posts Yet","This user hasn't shared any updates yet.","empty");return r.appendChild(e),o}const d=document.createElement("div");d.classList.add("now-widget-org-info");const c=document.createElement("div");c.classList.add("now-widget-user-container");const u=document.createElement("img");u.className="now-widget-user-avatar",u.src=n.avatar||"",u.alt=n.name;const m=document.createElement("div");m.classList.add("now-widget-user-details");const p=document.createElement("h2");p.classList.add("now-widget-user-name"),p.textContent=n.displayName||n.name||"User";const h=document.createElement("p");h.classList.add("now-widget-user-role"),h.textContent=n.bio||"";const g=document.createElement("p");g.classList.add("now-widget-user-stats"),g.textContent=`${n.followers||0} followers`,m.appendChild(p),m.appendChild(h),m.appendChild(g),c.appendChild(u),c.appendChild(m),d.appendChild(c),r.appendChild(d);const w=document.createElement("div");w.classList.add("now-widget-posts"),t.forEach((e=>{const t=k(e);w.appendChild(t)})),r.appendChild(w);let f=!1,v=!1;return r.addEventListener("scroll",(async()=>{if(f||v)return;const{scrollTop:t,scrollHeight:n,clientHeight:o}=r;t+o>=n-100&&await(async()=>{f=!0,v=!1;try{const t=await x(e.orgId);if(!t||!Array.isArray(t))throw new Error("Invalid response format");t.map((e=>({id:e.id,content:e.content,timestamp:e.timestamp,createdAt:e.timestamp,attachments:e.attachments||[],comments:e.comments||[],user:e.user||{id:"",name:"",email:"",emailVerified:!1,avatar:"",status:"",followers:0},_count:{likes:0,comments:(e.comments||[]).length}}))).forEach((e=>{const t=k(e);w.appendChild(t)}))}catch(t){v=!0;const e=L("Error Loading Posts",t instanceof Error?t.message:"An unknown error occurred","error");r.appendChild(e)}finally{f=!1}})()})),o}const N={currentPanel:null,domMonitor:null,isInitializing:!1,cleanupFunctions:[]},z=e=>({id:e.id,name:e.name,email:e.email??"",emailVerified:e.emailVerified??!1,avatar:e.avatar,status:e.status,displayName:e.displayName,bio:e.bio,followers:e.followers??0}),I=e=>{var t;return{id:e.id,content:e.content,user:e.user?z(e.user):{id:"",name:"",email:"",emailVerified:!1,avatar:"",status:"",followers:0},createdAt:e.timestamp,timestamp:e.timestamp,attachments:e.attachments??[],comments:e.comments??[],_count:{likes:0,comments:(null==(t=e.comments)?void 0:t.length)??0}}};async function P(e){var t;if(f.IS_BROWSER)if(N.isInitializing)console.log("Widget initialization already in progress");else try{N.isInitializing=!0,await R();const n=await async function(e){const t=await(n="now-widget-root",new Promise((e=>{requestAnimationFrame((()=>{let t=document.querySelector(`#${n}`);t?e(t):(t=document.createElement("div"),t.id=n,t.shadowRoot||t.attachShadow({mode:"open"}),queueMicrotask((()=>{document.body.appendChild(t),e(t)})))}))})));var n;if(t.shadowRoot){const e=document.createElement("style");e.textContent="\n            :host {\n                display: block;\n                position: relative;\n                z-index: 2147483647;\n            }\n            \n            #now-widget-root {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 0;\n                height: 0;\n                pointer-events: none;\n                z-index: 2147483647;\n            }\n        ",t.shadowRoot.appendChild(e)}return function(e,t,n={}){const o=document.getElementById("now-widget-root");(null==o?void 0:o.shadowRoot)&&(console.log("[StyleUtils] Applying styles to root container"),s(o,e,t,n));const i=document.getElementById("now-widget-button-container");(null==i?void 0:i.shadowRoot)&&(console.log("[StyleUtils] Applying styles to button container"),s(i,e,t,n))}(e.theme||"light",e.position||"right",{"--now-widget-button-bg":e.buttonColor,"--now-widget-button-size":e.buttonSize?`${e.buttonSize}px`:void 0,"--z-index-button":"2147483647","--z-index-panel":"2147483646","--z-index-overlay":"2147483645"}),t}(e);i.initializeWidgetRoot(n);const o=m({size:e.buttonSize,color:e.buttonColor,position:e.position,theme:e.theme});console.log("[NowWidget] Appending button to container shadow root"),n.shadowRoot?n.shadowRoot.appendChild(o):(console.error("[NowWidget] Container shadow root not found"),n.appendChild(o)),function(e){r(e,{transition:"opacity 300ms ease-in-out",opacity:O()&&W()?"1":"0",display:O()?"block":"none"});const t=()=>{if(!O())return void r(e,{display:"none",opacity:"0",pointerEvents:"none"});const t=W();r(e,{display:"block",opacity:t?"1":"0",pointerEvents:t?"auto":"none"})};t();const n=c.addListener(window,"scroll",(()=>requestAnimationFrame(t)),{passive:!0});N.cleanupFunctions.push(n)}(o),N.domMonitor=function(e,t={}){return new u(e,t)}(n,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["class","style"]});const a=()=>{M(o)},l=()=>{M(o)},d=()=>{M(o)},p=e=>{const t=e.target;o.contains(t)||!N.currentPanel||N.currentPanel.contains(t)||A()},h=e=>{"Escape"===e.key&&A()};o.addEventListener("click",(()=>async function(e,t){console.log("[NowWidget] Opening panel..."),N.currentPanel?(console.log("[NowWidget] Panel exists, removing..."),await A()):(console.log("[NowWidget] Loading and showing panel..."),await async function(e,t){try{console.log("[NowWidget] Loading panel data..."),i.setLoading(!0),await A();const[n,o]=await Promise.all([C(e.token),x(e.token)]);console.log("[NowWidget] Data loaded:",{userInfo:n,postsCount:o.length});const s=z(n);i.setUser(s);const r=o.map(I);if(i.setPosts(r),console.log("[NowWidget] Creating panel..."),N.currentPanel=S({user:s,posts:r,orgId:s.id,token:e.token}),N.currentPanel&&t.shadowRoot){console.log("[NowWidget] Appending panel to shadow root..."),t.shadowRoot.appendChild(N.currentPanel);const e=document.createElement("style");e.textContent='\n                .now-widget-panel {\n                    position: fixed;\n                    top: 0;\n                    right: 0;\n                    width: 400px;\n                    height: 100vh;\n                    background: var(--now-bg-color, #ffffff);\n                    box-shadow: -2px 0 8px rgba(0, 0, 0, 0.1);\n                    z-index: var(--z-index-panel, 10000);\n                    transform: translateX(100%);\n                    transition: transform 0.3s ease-in-out;\n                }\n                \n                .now-widget-panel[now-data-position="left"] {\n                    left: 0;\n                    right: auto;\n                    transform: translateX(-100%);\n                }\n                \n                .now-widget-panel.visible {\n                    transform: translateX(0);\n                }\n                \n                .now-widget-backdrop {\n                    position: fixed;\n                    top: 0;\n                    left: 0;\n                    width: 100vw;\n                    height: 100vh;\n                    background: rgba(0, 0, 0, 0.5);\n                    z-index: var(--z-index-overlay, 9999);\n                    opacity: 0;\n                    transition: opacity 0.3s ease-in-out;\n                }\n                \n                .now-widget-backdrop.visible {\n                    opacity: 1;\n                }\n            ',t.shadowRoot.appendChild(e),requestAnimationFrame((()=>{if(N.currentPanel){N.currentPanel.classList.add("visible");const e=N.currentPanel.querySelector(".now-widget-backdrop");e&&e.classList.add("visible")}}));const n=N.currentPanel.querySelector(".close-button");n&&n.addEventListener("click",(()=>A())),console.log("[NowWidget] Panel initialized and visible")}else console.error("[NowWidget] Cannot append panel: container or shadow root missing")}catch(n){console.error("[NowWidget] Error loading panel:",n),i.handleError(n instanceof Error?n.message:"Failed to load panel")}finally{i.setLoading(!1)}}(e,t))}(e,n))),window.addEventListener("popstate",d),c.addListener(window,"scroll",a),c.addListener(window,"resize",l),c.addListener(document,"click",p),c.addListener(document,"keydown",h),document.body.appendChild(n),a(),window.addEventListener("unload",(()=>{c.cleanup(),N.domMonitor&&N.domMonitor.disconnect(),n.remove()})),console.log("[NowWidget] Initialization complete, checking DOM:",{container:document.getElementById("now-widget-root"),containerShadowRoot:null==(t=document.getElementById("now-widget-root"))?void 0:t.shadowRoot,button:document.getElementById("now-widget-button-container")})}catch(n){console.error("Error initializing widget:",n),N.domMonitor&&N.domMonitor.disconnect(),i.handleError(n instanceof Error?n.message:"Unknown error")}finally{N.isInitializing=!1}else console.log("Widget initialization skipped: non-browser environment")}async function A(){if(console.log("[NowWidget] Removing panel..."),N.currentPanel){N.currentPanel.classList.remove("visible");const e=N.currentPanel.querySelector(".now-widget-backdrop");e&&e.classList.remove("visible"),await new Promise((e=>setTimeout(e,300))),N.currentPanel.remove(),N.currentPanel=null,console.log("[NowWidget] Panel removed")}}function M(e){r(e,{display:O()?"block":"none"})}function O(){return!W()}function W(){return!!document.querySelector(".hero-section")}async function R(){const e=document.getElementById("now-widget-root");e&&e.remove(),N.domMonitor&&N.domMonitor.disconnect(),N.cleanupFunctions.forEach((e=>e())),N.cleanupFunctions=[]}let B=0;let T=!1;let _=null;const U=async()=>{_&&clearTimeout(_),_=window.setTimeout((async()=>{if(!T){T=!0;try{(await fetch("http://localhost:5173/dist/now-widget.js")).ok&&(console.log("Server is reachable"),B=0)}catch(e){if(B++,B<=5){const e=2e3*Math.pow(2,B);console.warn(`Ping failed. Retrying in ${e}ms`),window.setTimeout(U,e)}else console.error("Max retry attempts reached. Stopping pings.")}finally{T=!1}}}),500)};let D=!1;const $=async()=>{console.log("[NowWidget] Starting initialization...");const e=document.getElementById("now-widget-container");if(console.log("[NowWidget] Existing container:",e),e)return void console.log("[NowWidget] Widget already initialized.");const t=(()=>{const e=document.getElementsByTagName("script");let t=null;for(let a=0;a<e.length;a++){const n=e[a];if(n.getAttribute("now-data-org-id")&&n.getAttribute("now-data-token")){t=n;break}if(!t)return console.error("NowWidget: Unable to locate the current script."),null;const n=t.getAttribute("now-data-org-id"),o=t.getAttribute("now-data-token"),i=t.getAttribute("now-data-theme"),s=t.getAttribute("now-data-position"),r=t.getAttribute("now-data-button-color");return console.log("Retrieved script attributes:",{orgId:n,token:o,theme:i,position:s,buttonColor:r}),n&&o?{orgId:n,token:o,theme:i??void 0,position:s??void 0,buttonColor:r??void 0}:(console.error("NowWidget: Missing orgId or token in script attributes."),null)})();if(console.log("[NowWidget] Retrieved attributes:",t),!t)return void console.error("[NowWidget] No valid attributes found. Widget initialization failed.");const{orgId:n,token:o,theme:i,position:s,buttonColor:r}=t,a="dark"===i||"light"===i?i:"light",l="left"===s||"right"===s?s:"right";console.log("[NowWidget] Initializing with config:",{orgId:n,theme:a,position:l,buttonColor:r}),await q({orgId:n,token:o,theme:a,position:l,buttonColor:r});const d=document.querySelector("#now-widget-button-container"),c=document.querySelector("#now-widget-panel");console.log("[NowWidget] Elements after initialization:",{button:d,panel:c}),U()};function q(e){if(D)console.warn("NowWidget is already initialized");else{if(!e.orgId||!e.token)throw new Error("orgId and token are required");P(e),D=!0}}function j(){D?(R(),D=!1):console.warn("NowWidget is not initialized")}document.addEventListener("DOMContentLoaded",(()=>{console.log("[NowWidget] DOM Content Loaded, initializing widget..."),$()})),window.addEventListener("load",(()=>{console.log("[NowWidget] Window loaded, checking initialization..."),document.getElementById("now-widget-container")||$()}));const F={initialize:q,teardown:j};e.default=F,e.initialize=q,e.teardown=j,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
//# sourceMappingURL=now-widget.js.map


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/dist/now-widget.js.map
File type: .map
{"version":3,"file":"now-widget.js","sources":["../src/state/state.ts","../src/utils/nowWidgetUtils.ts","../src/utils/nowStyleUtils.ts","../src/utils/domUtils.ts","../src/utils/eventManager.ts","../src/utils/domMonitor.ts","../src/components/NowButton.ts","../src/utils/buttonUtils.ts","../src/utils/dateUtils.ts","../src/config/environment.ts","../src/config/security.ts","../src/api/auth.ts","../src/components/NowPanelContent.ts","../src/components/NowWidget.ts","../src/utils/pingServer.ts","../src/index.ts"],"sourcesContent":["import { Post, User } from '../types/types';\nimport { renderPostsInPanel, renderOrgInfo } from '../utils/nowWidgetUtils';\n\ninterface WidgetState {\n    loading: boolean;\n    user: User | null;\n    posts: Post[];\n    initialized: boolean;\n    rootElement: HTMLElement | null;\n}\n\ninterface WidgetStore {\n    getState: () => WidgetState;\n    initializeWidgetRoot: (element: HTMLElement) => void;\n    resetState: () => void;\n    setLoading: (loading: boolean) => void;\n    setPosts: (posts: Post[]) => void;\n    setUser: (user: User) => void;\n    updateUI: () => void;\n    handleError: (message: string) => void;\n    getError: () => string | null;\n    clearError: () => void;\n}\n\nclass WidgetStoreImpl {\n    private state: WidgetState = {\n        loading: false,\n        user: null,\n        posts: [],\n        initialized: false,\n        rootElement: null\n    };\n\n    private error: string | null = null;\n\n    getState = () => ({ ...this.state });\n\n    initializeWidgetRoot = (element: HTMLElement) => {\n        if (this.state.rootElement) {\n            try {\n                if (this.state.rootElement.parentNode) {\n                    this.state.rootElement.parentNode.removeChild(this.state.rootElement);\n                }\n            } catch (error) {\n                this.handleError('Error cleaning up existing root: ' + error);\n            }\n        }\n        this.state.rootElement = element;\n        this.state.initialized = true;\n    };\n\n    resetState = () => {\n        this.state = {\n            loading: false,\n            user: null,\n            posts: [],\n            initialized: false,\n            rootElement: null\n        };\n    };\n\n    setLoading = (loading: boolean) => {\n        if (!this.state.initialized) return;\n        this.state.loading = loading;\n        this.updateUI();\n    };\n\n    setPosts = (posts: Post[]) => {\n        if (!this.state.initialized) return;\n        this.state.posts = posts;\n        this.updateUI();\n    };\n\n    setUser = (user: User) => {\n        if (!this.state.initialized) return;\n        this.state.user = user;\n        this.updateUI();\n    };\n\n    updateUI = () => {\n        if (!this.state.rootElement || !this.state.initialized) return;\n\n        // Update loading state\n        const loadingIndicator = this.state.rootElement.querySelector('.loading-indicator');\n        if (loadingIndicator) {\n            loadingIndicator.classList.toggle('visible', this.state.loading);\n        }\n\n        // Update user info\n        if (this.state.user) {\n            renderOrgInfo(this.state.user, this.state.rootElement);\n        }\n\n        // Update posts\n        if (this.state.posts.length > 0) {\n            renderPostsInPanel(this.state.posts, this.state.rootElement);\n        }\n    };\n\n    handleError = (message: string) => {\n        this.error = message;\n        console.error('Widget error:', message);\n    };\n\n    getError = () => {\n        return this.error;\n    };\n\n    clearError = () => {\n        this.error = null;\n    };\n}\n\nconst createWidgetStore = (): WidgetStore => {\n    const store = new WidgetStoreImpl();\n    return {\n        getState: store.getState,\n        initializeWidgetRoot: store.initializeWidgetRoot,\n        resetState: store.resetState,\n        setLoading: store.setLoading,\n        setPosts: store.setPosts,\n        setUser: store.setUser,\n        updateUI: store.updateUI,\n        handleError: store.handleError,\n        getError: store.getError,\n        clearError: store.clearError\n    };\n};\n\nexport const widgetStore = createWidgetStore();\nexport const { \n    getState,\n    initializeWidgetRoot, \n    resetState, \n    setLoading, \n    setPosts, \n    setUser, \n    updateUI,\n    handleError,\n    getError,\n    clearError\n} = widgetStore;","import { Post, User } from '../types/types';\n\n/**\n * Retrieves script attributes from the currently executing script tag.\n * @returns An object containing orgId, token, and optional configuration parameters, or null if required attributes are missing.\n */\nexport const getScriptAttributes = (): {\n    orgId: string;\n    token: string;\n    theme?: string;\n    position?: string;\n    buttonColor?: string;\n} | null => {\n    const scripts = document.getElementsByTagName('script');\n    let currentScript: HTMLScriptElement | null = null;\n\n    for (let i = 0; i < scripts.length; i++) {\n        const script = scripts[i];\n        if (script.getAttribute('now-data-org-id') && script.getAttribute('now-data-token')) {\n            currentScript = script;\n            break;\n        }\n    }\n\n    if (!currentScript) {\n        console.error(\"NowWidget: Unable to locate the current script.\");\n        return null;\n    }\n\n    const orgId = currentScript.getAttribute('now-data-org-id')\n    const token = currentScript.getAttribute('now-data-token');\n    const theme = currentScript.getAttribute('now-data-theme');\n    const position = currentScript.getAttribute('now-data-position');\n    const buttonColor = currentScript.getAttribute('now-data-button-color');\n\n    console.log('Retrieved script attributes:', {\n        orgId,\n        token,\n        theme,\n        position,\n        buttonColor,\n    });\n\n    if (!orgId || !token) {\n        console.error(\"NowWidget: Missing orgId or token in script attributes.\");\n        return null;\n    }\n\n    return {\n        orgId,\n        token,\n        theme: theme ?? undefined,\n        position: position ?? undefined,\n        buttonColor: buttonColor ?? undefined,\n    };\n};\n\n/**\n * Creates and appends the widget container to the document body.\n * @returns The widget container HTMLElement.\n */\nexport function createWidgetContainer(): HTMLElement {\n    const container = document.createElement('div');\n    container.id = 'now-widget-container';\n    \n    // Create a shadow root for isolation\n    const shadow = container.attachShadow({ mode: 'open' });\n    \n    // Create an isolated container inside shadow DOM\n    const innerContainer = document.createElement('div');\n    innerContainer.className = 'now-widget-root';\n    \n    // Add styles to shadow DOM\n    const styleSheet = document.createElement('style');\n    styleSheet.textContent = `\n        .now-widget-root {\n            position: fixed;\n            z-index: 999999;\n            pointer-events: none;\n        }\n        .now-widget-root * {\n            pointer-events: auto;\n        }\n        .now-widget-panel {\n            position: fixed;\n            top: 0;\n            height: 100vh;\n            width: min(400px, 100%);\n            background: var(--now-bg-color);\n            box-shadow: \n                0 0 10px rgba(0,0,0,0.1),\n                0 0 30px rgba(0,0,0,0.05);\n            transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);\n            will-change: transform;\n            overflow: hidden;\n        }\n        .now-widget-panel[now-data-position=\"left\"] {\n            left: 0;\n            border-top-right-radius: 12px;\n            border-bottom-right-radius: 12px;\n            transform: translateX(-100%);\n        }\n        .now-widget-panel[now-data-position=\"right\"] {\n            right: 0;\n            border-top-left-radius: 12px;\n            border-bottom-left-radius: 12px;\n            transform: translateX(100%);\n        }\n        .now-widget-panel.open {\n            transform: translateX(0);\n        }\n        .now-widget-backdrop {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.5);\n            opacity: 0;\n            transition: opacity 200ms ease-out;\n            pointer-events: none;\n        }\n        .now-widget-backdrop.visible {\n            opacity: 1;\n            pointer-events: auto;\n        }\n        @media (max-width: 768px) {\n            .now-widget-panel {\n                width: 100%;\n            }\n        }\n    `;\n    \n    shadow.appendChild(styleSheet);\n    shadow.appendChild(innerContainer);\n    document.body.appendChild(container);\n    \n    return innerContainer;\n}\n\n/**\n * Toggles the visibility of the NowWidget side panel.\n * @param isOpen - Boolean indicating whether to open or close the panel.\n * @param root - The root Element containing the panel.\n */\nexport function togglePanel(isOpen: boolean, root: Element): void {\n    const panel = root.querySelector('.now-widget-panel');\n    const backdrop = root.querySelector('.now-widget-backdrop');\n    \n    if (!panel || !backdrop) return;\n    \n    if (isOpen) {\n        // Show backdrop first\n        backdrop.classList.add('visible');\n        // Then animate panel\n        requestAnimationFrame(() => {\n            panel.classList.add('open');\n        });\n        \n        // Add accessibility attributes\n        panel.setAttribute('role', 'dialog');\n        panel.setAttribute('aria-modal', 'true');\n        panel.setAttribute('aria-labelledby', 'panel-title');\n        \n        // Handle keyboard navigation\n        const handleEscape = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                togglePanel(false, root);\n            }\n        };\n        document.addEventListener('keydown', handleEscape);\n        \n        // Store the event listener for cleanup\n        (panel as any)._escapeHandler = handleEscape;\n    } else {\n        // Remove panel first\n        panel.classList.remove('open');\n        // Then fade out backdrop\n        backdrop.classList.remove('visible');\n        \n        // Remove event listeners\n        if ((panel as any)._escapeHandler) {\n            document.removeEventListener('keydown', (panel as any)._escapeHandler);\n        }\n    }\n}\n\n/**\n * Displays user information inside the widget panel.\n * @param user - The User object containing user information.\n * @param panel - The widget panel HTMLElement.\n */\nexport const renderOrgInfo = (user: User | null, panel: HTMLElement): void => {\n    const userInfo = panel.querySelector('.now-widget-org-info');\n    if (userInfo && user) {\n        const userAvatar = document.createElement('img');\n        userAvatar.className = 'now-widget-avatar';\n        userAvatar.src = user.avatar || '';\n        userAvatar.alt = user.name;\n\n        const userDetails = document.createElement('div');\n        userDetails.className = 'now-widget-user-details';\n        userDetails.innerHTML = `\n            <h2 class=\"now-widget-user-name\">${user.displayName || user.name}</h2>\n            <p class=\"now-widget-user-bio\">${user.bio || ''}</p>\n        `;\n\n        userInfo.innerHTML = '';\n        userInfo.appendChild(userAvatar);\n        userInfo.appendChild(userDetails);\n    }\n};\n\n/**\n * Renders posts inside the widget panel.\n * @param posts - An array of Post objects.\n * @param panel - The widget panel HTMLElement.\n */\nexport const renderPostsInPanel = (posts: Post[], panel: HTMLElement): void => {\n    const content = panel.querySelector('#now-widget-content');\n    if (content) {\n        content.innerHTML = '<h2>Your Posts</h2>';\n        posts.forEach(post => {\n            const postEl = document.createElement('div');\n            postEl.className = 'now-widget-post';\n            postEl.innerHTML = `<p>${post.content}</p>`;\n            content.appendChild(postEl);\n        });\n    }\n};","/**\n * Applies the selected theme to the widget.\n * @param theme - The theme to apply ('light' or 'dark').\n */\nexport const applyTheme = (theme?: string): void => {\n    const panels = document.getElementsByClassName('now-widget-panel');\n    if (panels.length > 0) {\n        const panel = panels[0] as HTMLElement;\n        if (theme === 'dark') {\n            panel.classList.add('now-widget-dark-theme');\n        } else {\n            panel.classList.remove('now-widget-dark-theme');\n        }\n    }\n};\n\n/**\n * Sets the position of the widget button on the screen.\n * @param position - The position to set ('left').\n */\nexport const setPosition = (): void => {\n    const containers = document.getElementsByClassName('now-widget-container');\n    if (containers.length > 0) {\n        const container = containers[0] as HTMLElement;\n        container.style.left = '0px';\n        container.style.right = 'auto';\n    }\n    // Store the position in a data attribute\n    document.body.setAttribute('data-widget-position', 'left');\n};\n\nimport { ThemeVariables } from '../types/config';\n\n/**\n * Injects dynamic styles into the widget's Shadow DOM.\n * @param theme - The theme to apply ('light' or 'dark').\n * @param position - The position to set ('left' or 'right').\n * @param themeVariables - Theme variables to apply.\n */\nexport function injectStyles(\n    theme: 'light' | 'dark',\n    position: 'left' | 'right',\n    themeVariables: ThemeVariables = {}\n): void {\n    // Apply styles to root container\n    const rootContainer = document.getElementById('now-widget-root');\n    if (rootContainer?.shadowRoot) {\n        console.log('[StyleUtils] Applying styles to root container');\n        applyContainerStyles(rootContainer, theme, position, themeVariables);\n    }\n\n    // Apply styles to button container\n    const buttonContainer = document.getElementById('now-widget-button-container');\n    if (buttonContainer?.shadowRoot) {\n        console.log('[StyleUtils] Applying styles to button container');\n        applyContainerStyles(buttonContainer, theme, position, themeVariables);\n    }\n}\n\nfunction applyContainerStyles(\n    container: HTMLElement,\n    theme: 'light' | 'dark',\n    position: 'left' | 'right',\n    themeVariables: ThemeVariables\n): void {\n    // Apply theme class\n    container.classList.toggle('now-widget-dark-theme', theme === 'dark');\n    \n    // Apply position styles\n    if (position === 'left') {\n        container.classList.add('now-widget-left');\n        container.classList.remove('now-widget-right');\n    } else {\n        container.classList.add('now-widget-right');\n        container.classList.remove('now-widget-left');\n    }\n    \n    // Apply theme variables\n    const style = document.createElement('style');\n    const cssVars = Object.entries(themeVariables)\n        .filter(([_, value]) => value !== undefined)\n        .map(([key, value]) => `${key}: ${value};`)\n        .join('\\n');\n    \n    style.textContent = `\n        :host {\n            ${cssVars}\n        }\n    `;\n    \n    // Remove any existing style elements\n    const existingStyles = container.shadowRoot?.querySelectorAll('style[data-now-widget-theme]');\n    existingStyles?.forEach(el => el.remove());\n    \n    // Add new style element\n    style.setAttribute('data-now-widget-theme', 'true');\n    container.shadowRoot?.appendChild(style);\n    \n    console.log('[StyleUtils] Styles applied to container:', {\n        id: container.id,\n        theme,\n        position,\n        variables: themeVariables\n    });\n}","/**\n * Utility functions for safe DOM manipulation\n */\n\ninterface SafeAppendOptions {\n    parent?: HTMLElement;\n    beforeHydration?: () => void;\n    afterHydration?: () => void;\n}\n\n/**\n * Safely append an element to a container within a Shadow DOM\n */\nexport function safeAppend(\n    element: HTMLElement,\n    containerId: string,\n    options: SafeAppendOptions = {}\n): Promise<void> {\n    return new Promise((resolve) => {\n        requestAnimationFrame(() => {\n            const container = document.querySelector(`#${containerId}`) as HTMLElement;\n            if (!container?.shadowRoot) {\n                console.warn(`Container #${containerId} or its shadow root not found`);\n                resolve();\n                return;\n            }\n\n            options.beforeHydration?.();\n            \n            // Use a microtask to ensure DOM is ready\n            queueMicrotask(() => {\n                try {\n                    container.shadowRoot!.appendChild(element);\n                    options.afterHydration?.();\n                    resolve();\n                } catch (error) {\n                    console.error('Error appending element:', error);\n                    resolve();\n                }\n            });\n        });\n    });\n}\n\n/**\n * Safely remove an element from the DOM\n */\nexport function safeRemove(element: HTMLElement | null): Promise<void> {\n    return new Promise((resolve) => {\n        if (!element) {\n            resolve();\n            return;\n        }\n\n        requestAnimationFrame(() => {\n            try {\n                element.remove();\n            } catch (error) {\n                console.error('Error removing element:', error);\n            }\n            resolve();\n        });\n    });\n}\n\n/**\n * Safely create and append a container to the document body\n */\nexport function safeCreateContainer(id: string): Promise<HTMLElement> {\n    return new Promise((resolve) => {\n        requestAnimationFrame(() => {\n            let container = document.querySelector(`#${id}`) as HTMLElement;\n            \n            if (!container) {\n                container = document.createElement('div');\n                container.id = id;\n                \n                // Create shadow root if it doesn't exist\n                if (!container.shadowRoot) {\n                    container.attachShadow({ mode: 'open' });\n                }\n\n                // Use a microtask to ensure DOM is ready\n                queueMicrotask(() => {\n                    document.body.appendChild(container);\n                    resolve(container);\n                });\n            } else {\n                resolve(container);\n            }\n        });\n    });\n}\n\n/**\n * Safely update element styles\n */\nexport function safeUpdateStyle(\n    element: HTMLElement,\n    styleUpdates: Partial<CSSStyleDeclaration>\n): void {\n    requestAnimationFrame(() => {\n        Object.assign(element.style, styleUpdates);\n    });\n}\n\n/**\n * Safely add event listener with cleanup\n */\nexport function safeAddEventListener<K extends keyof HTMLElementEventMap>(\n    element: HTMLElement,\n    event: K,\n    handler: (event: HTMLElementEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions\n): () => void {\n    element.addEventListener(event, handler, options);\n    return () => element.removeEventListener(event, handler, options);\n}\n","interface EventHandler<K extends keyof HTMLElementEventMap> {\n    (event: HTMLElementEventMap[K]): void;\n}\n\ninterface EventRegistryItem<K extends keyof HTMLElementEventMap> {\n    type: K;\n    handler: EventHandler<K>;\n    options?: boolean | AddEventListenerOptions;\n}\n\ntype EventRegistry = WeakMap<EventTarget, Set<EventRegistryItem<keyof HTMLElementEventMap>>>;\n\nconst createEventRegistry = (): EventRegistry => new WeakMap();\n\nconst registry = createEventRegistry();\n\n/**\n * Add an event listener with automatic registration\n */\nfunction addListener<K extends keyof HTMLElementEventMap>(\n    target: EventTarget,\n    type: K,\n    handler: EventHandler<K>,\n    options?: boolean | AddEventListenerOptions\n): () => void {\n    // Initialize set for target if it doesn't exist\n    if (!registry.has(target)) {\n        registry.set(target, new Set());\n    }\n\n    const registryItem = {\n        type,\n        handler,\n        options\n    } as EventRegistryItem<keyof HTMLElementEventMap>;\n\n    registry.get(target)?.add(registryItem);\n    target.addEventListener(type, handler as EventListener, options);\n\n    // Return cleanup function\n    return () => removeListener(target, type, handler, options);\n}\n\n/**\n * Remove a specific event listener\n */\nfunction removeListener<K extends keyof HTMLElementEventMap>(\n    target: EventTarget,\n    type: K,\n    handler: EventHandler<K>,\n    options?: boolean | AddEventListenerOptions\n): void {\n    const items = registry.get(target);\n    if (!items) return;\n\n    // Remove the actual event listener\n    target.removeEventListener(type, handler as EventListener, options);\n\n    // Find and remove the specific listener\n    items.forEach((item) => {\n        if (\n            item.type === type &&\n            item.handler === handler &&\n            item.options === options\n        ) {\n            items.delete(item);\n        }\n    });\n\n    // Clean up empty sets\n    if (items.size === 0) {\n        registry.delete(target);\n    }\n}\n\n/**\n * Remove all event listeners for a specific target\n */\nfunction removeAllListeners(target: EventTarget): void {\n    const items = registry.get(target);\n    if (!items) return;\n\n    items.forEach((item) => {\n        target.removeEventListener(\n            item.type,\n            item.handler as EventListener,\n            item.options\n        );\n    });\n\n    registry.delete(target);\n}\n\n/**\n * Remove all registered event listeners\n */\nfunction cleanup(): void {\n    // WeakMap doesn't support iteration, so we need to keep track of targets separately\n    const targets = new Set<EventTarget>();\n    \n    // Get all targets from the registry\n    for (const target of Array.from(document.querySelectorAll('*'))) {\n        if (registry.has(target)) {\n            targets.add(target);\n        }\n    }\n    \n    // Clean up each target\n    targets.forEach(removeAllListeners);\n}\n\n/**\n * Get the count of registered listeners for a target (useful for debugging)\n */\nfunction getListenerCount(target: EventTarget): number {\n    return registry.get(target)?.size ?? 0;\n}\n\n// Export a singleton instance\nexport const eventManager = {\n    addListener,\n    removeListener,\n    removeAllListeners,\n    cleanup,\n    getListenerCount\n} as const;\n","export interface DOMMonitorOptions {\n    childList?: boolean;\n    attributes?: boolean;\n    characterData?: boolean;\n    subtree?: boolean;\n    attributeFilter?: string[];\n    attributeOldValue?: boolean;\n    characterDataOldValue?: boolean;\n    onDetach?: () => void;\n    onReattach?: () => void;\n    onAttributeChange?: (mutations: MutationRecord[]) => void;\n}\n\n/**\n * Monitors DOM changes and handles widget persistence\n */\nexport class DOMMonitor {\n    private observer: MutationObserver | null;\n    private container: HTMLElement;\n    private options: DOMMonitorOptions;\n    private isObserving = false;\n    private detachCallbacks: Map<Node, () => void>;\n\n    constructor(container: HTMLElement, options: DOMMonitorOptions = {}) {\n        this.container = container;\n        this.options = options;\n        this.detachCallbacks = new Map();\n        this.observer = null;\n        this.setupObserver();\n    }\n\n    private setupObserver(): void {\n        this.observer = new MutationObserver((mutations) => {\n            this.handleMutations(mutations);\n            \n            // Check for widget removal\n            if (!document.contains(this.container)) {\n                console.log('Widget container detached from DOM');\n                this.options.onDetach?.();\n                \n                // Attempt to reattach in the next frame\n                requestAnimationFrame(() => {\n                    if (!document.contains(this.container)) {\n                        document.body.appendChild(this.container);\n                        console.log('Widget container reattached to DOM');\n                        this.options.onReattach?.();\n                    }\n                });\n            }\n\n            // Check for relevant attribute changes\n            const attributeMutations = mutations.filter(\n                mutation => \n                    mutation.type === 'attributes' && \n                    mutation.target === this.container\n            );\n\n            if (attributeMutations.length > 0 && this.options.onAttributeChange) {\n                this.options.onAttributeChange(attributeMutations);\n            }\n        });\n    }\n\n    /**\n     * Start observing DOM changes\n     */\n    public startObserving(): void {\n        if (this.isObserving || !this.observer) return;\n\n        this.observer.observe(document.body, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: ['style', 'class', 'id']\n        });\n\n        this.isObserving = true;\n        console.log('Started observing DOM changes');\n    }\n\n    /**\n     * Stop observing DOM changes\n     */\n    public stopObserving(): void {\n        if (!this.isObserving || !this.observer) return;\n\n        this.observer.disconnect();\n        this.isObserving = false;\n        console.log('Stopped observing DOM changes');\n    }\n\n    /**\n     * Update the container reference\n     */\n    public updateContainer(newContainer: HTMLElement): void {\n        this.container = newContainer;\n        \n        // Restart observation with new container\n        if (this.isObserving) {\n            this.stopObserving();\n            this.startObserving();\n        }\n    }\n\n    /**\n     * Clean up resources\n     */\n    public destroy(): void {\n        this.stopObserving();\n        this.observer = null;\n    }\n\n    /**\n     * Observe DOM changes on a target node\n     */\n    public observe(target: Node, options: DOMMonitorOptions): void {\n        if (!this.observer) return;\n        this.observer.observe(target, options);\n    }\n\n    /**\n     * Set a callback for when an element is detached from the DOM\n     */\n    public onDetach(element: Node, callback: () => void): void {\n        this.detachCallbacks.set(element, callback);\n    }\n\n    /**\n     * Disconnect the observer and clear detach callbacks\n     */\n    public disconnect(): void {\n        if (!this.observer) return;\n        this.observer.disconnect();\n        this.detachCallbacks.clear();\n    }\n\n    private handleMutations(mutations: MutationRecord[]): void {\n        for (const mutation of mutations) {\n            if (mutation.type === 'childList' && mutation.removedNodes.length > 0) {\n                for (const node of mutation.removedNodes) {\n                    const callback = this.detachCallbacks.get(node);\n                    if (callback) {\n                        callback();\n                        this.detachCallbacks.delete(node);\n                    }\n                }\n            }\n        }\n    }\n}\n\n/**\n * Create a new DOM monitor instance\n */\nexport function createDOMMonitor(container: HTMLElement, options: DOMMonitorOptions = {}): DOMMonitor {\n    return new DOMMonitor(container, options);\n}\n","import { ButtonConfig } from '../types/types';\nimport { createButtonElements, applyButtonConfig, isButtonInDOM } from '../utils/buttonUtils';\n\ninterface NowButtonOptions {\n  size?: number;\n  maxSize?: number;\n  minSize?: number;\n  color?: string;\n  backgroundColor?: string;\n  position?: 'left' | 'right';\n  onClick?: () => void;\n}\n\nconst buttonStyles = `\n  :host {\n    display: block;\n  }\n\n  .now-widget-button {\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n    width: var(--button-size, 120px);\n    height: var(--button-size, 120px);\n    border-radius: 50%;\n    background: var(--button-color, #0066cc);\n    border: none;\n    cursor: pointer;\n    z-index: 10001;\n    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n    opacity: 1;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  }\n\n  .now-widget-button:hover {\n    transform: scale(1.05);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);\n  }\n\n  .now-widget-button-left {\n    left: 20px;\n    right: auto;\n  }\n\n  .button-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    font-family: system-ui, -apple-system, sans-serif;\n    font-size: 16px;\n    position: relative;\n  }\n\n  .text-container {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    animation: rotate 15s linear infinite;\n  }\n\n  .arrow-icon {\n    width: 24px;\n    height: 24px;\n    position: absolute;\n    transition: transform 0.3s ease;\n  }\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport class NowButton {\n  private button: HTMLButtonElement;\n  private buttonContent: HTMLDivElement;\n  private textContainer: HTMLDivElement;\n  private arrowIcon: HTMLDivElement;\n  private isHovered: boolean = false;\n  private animationDuration: number = 15;\n  private maxSize: number = 150;\n  private minSize: number = 80;\n  private currentSize: number;\n  private color: string;\n  private text = \"NOW . NOW . NOW . \";\n  private resizeObserver!: ResizeObserver;\n  private updateStylesDebounce: number | null = null;\n  private shadowRoot!: ShadowRoot;\n\n  constructor(container: HTMLElement, options: NowButtonOptions = {}) {\n    if (options.size) {\n      this.maxSize = options.size;\n      this.minSize = options.size;\n    } else {\n      this.maxSize = options.maxSize ?? this.maxSize;\n      this.minSize = options.minSize ?? this.minSize;\n    }\n    this.color = options.color ?? '#ffffff';\n    this.currentSize = this.calculateSize();\n\n    const nowButtonContainer = document.createElement('div');\n    nowButtonContainer.id = 'now-widget-button-container';\n    container.appendChild(nowButtonContainer);\n\n    this.shadowRoot = nowButtonContainer.attachShadow({ mode: 'open' });\n\n    // Add styles to shadow DOM\n    const style = document.createElement('style');\n    style.textContent = buttonStyles;\n    this.shadowRoot.appendChild(style);\n\n    // Create button\n    this.button = document.createElement('button');\n    this.button.className = 'now-widget-button';\n    this.button.setAttribute('aria-label', 'Show Now Status');\n\n    // Create button content\n    this.buttonContent = document.createElement('div');\n    this.buttonContent.className = 'button-content';\n\n    // Create rotating text\n    this.textContainer = document.createElement('div');\n    this.textContainer.className = 'text-container';\n    this.updateTextElements(this.textContainer);\n\n    // Create arrow icon\n    this.arrowIcon = document.createElement('div');\n    this.arrowIcon.className = 'arrow-icon';\n    this.arrowIcon.innerHTML = `\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M5 12H19M19 12L12 5M19 12L12 19\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>\n    `;\n\n    // Apply configuration\n    if (options.size) {\n      nowButtonContainer.style.setProperty('--button-size', `${options.size}px`);\n    }\n\n    if (options.color) {\n      nowButtonContainer.style.setProperty('--button-color', options.color);\n    }\n\n    if (options.position === 'left') {\n      this.button.classList.add('now-widget-button-left');\n    }\n\n    // Assemble button\n    this.buttonContent.appendChild(this.textContainer);\n    this.buttonContent.appendChild(this.arrowIcon);\n    this.button.appendChild(this.buttonContent);\n    this.shadowRoot.appendChild(this.button);\n\n    this.setupEventListeners(options.onClick);\n    this.setupResizeObserver();\n    this.setupVisibilityObserver();\n  }\n\n  private calculateSize(): number {\n    const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n    const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n    const screenSize = Math.min(vw, vh);\n    const size = Math.min(Math.max(screenSize * 0.15, this.minSize), this.maxSize);\n    return Math.round(size);\n  }\n\n  private updateTextElements(container: HTMLDivElement): void {\n    container.innerHTML = '';\n    const chars = this.text.split('');\n    chars.forEach((char, index) => {\n      const span = document.createElement('span');\n      span.className = 'now-widget-text';\n      span.textContent = char;\n      span.style.cssText = `\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        font-size: clamp(5px, 1.5vw, ${this.currentSize / 8}px);\n        font-weight: bold;\n        color: ${this.color};\n        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n        transform: translate(-50%, -50%) rotate(${(360 / chars.length) * index}deg) translateY(-${this.currentSize / 2 - this.currentSize / 8}px);\n        transform-origin: center;\n        transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n        opacity: 1;\n      `;\n      container.appendChild(span);\n    });\n  }\n\n  private setupEventListeners(onClick?: () => void) {\n    console.log('Setting up button event listeners'); // Debug log\n\n    if (onClick) {\n      this.button.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        console.log('Button clicked, executing onClick handler'); // Debug log\n        onClick();\n      });\n    }\n\n    // Touch events for mobile\n    this.button.addEventListener('touchstart', () => {\n      this.isHovered = true;\n      this.updateStyles(true);\n    });\n\n    this.button.addEventListener('touchend', () => {\n      this.isHovered = false;\n      this.updateStyles(false);\n    });\n\n    // Mouse events for desktop\n    this.button.addEventListener('mouseenter', () => {\n      this.isHovered = true;\n      this.animationDuration = 30;\n      this.updateStyles(true);\n    });\n\n    this.button.addEventListener('mouseleave', () => {\n      this.isHovered = false;\n      this.animationDuration = 15;\n      this.updateStyles(false);\n    });\n\n    // Mouse proximity effect (desktop only)\n    const isTouchDevice = 'ontouchstart' in window;\n    if (!isTouchDevice) {\n      document.addEventListener('mousemove', (e) => {\n        const rect = this.button.getBoundingClientRect();\n        const buttonCenterX = rect.left + rect.width / 2;\n        const buttonCenterY = rect.top + rect.height / 2;\n\n        const distance = Math.sqrt(\n          Math.pow(e.clientX - buttonCenterX, 2) + Math.pow(e.clientY - buttonCenterY, 2)\n        );\n\n        const proximityThreshold = this.currentSize * 2;\n\n        if (distance < proximityThreshold && !this.isHovered) {\n          const speedFactor = 1 - distance / proximityThreshold;\n          const newDuration = 15 - 7.5 * speedFactor;\n          if (Math.abs(this.animationDuration - newDuration) > 0.1) {\n            this.animationDuration = newDuration;\n            this.textContainer.style.animationDuration = `${this.animationDuration}s`;\n          }\n        } else if (!this.isHovered) {\n          if (Math.abs(this.animationDuration - 15) > 0.1) {\n            this.animationDuration = 15;\n            this.textContainer.style.animationDuration = '15s';\n          }\n        }\n      });\n    }\n  }\n\n  private setupResizeObserver(): void {\n    this.resizeObserver = new ResizeObserver(() => {\n      const newSize = this.calculateSize();\n      if (newSize !== this.currentSize) {\n        this.currentSize = newSize;\n        this.updateButtonStyles();\n        this.updateTextElements(this.textContainer);\n      }\n    });\n\n    this.resizeObserver.observe(document.body);\n  }\n\n  private setupVisibilityObserver(): void {\n    const sentinel = document.createElement('div');\n    sentinel.style.position = 'absolute';\n    sentinel.style.top = '100vh';\n    sentinel.style.width = '1px';\n    sentinel.style.height = '1px';\n    document.body.appendChild(sentinel);\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.button.style.opacity = '1';\n          } else {\n            this.button.style.opacity = '0';\n          }\n        });\n      },\n      { threshold: 0 }\n    );\n\n    observer.observe(sentinel);\n  }\n\n  private updateButtonStyles(): void {\n    const styles = `\n      width: ${this.currentSize}px;\n      height: ${this.currentSize}px;\n    `;\n    this.button.style.cssText = styles;\n  }\n\n  private updateStyles(isHovered: boolean) {\n    if (this.updateStylesDebounce) {\n      clearTimeout(this.updateStylesDebounce);\n    }\n\n    this.updateStylesDebounce = window.setTimeout(() => {\n      this.buttonContent.style.transform = isHovered ? 'scale(1.1)' : 'scale(1)';\n      this.arrowIcon.style.opacity = isHovered ? '1' : '0.9';\n\n      Array.from(this.textContainer.children).forEach((child) => {\n        (child as HTMLElement).style.opacity = isHovered ? '0.8' : '1';\n      });\n\n      this.textContainer.style.animationDuration = `${this.animationDuration}s`;\n    }, 100); // Adjust the delay as needed for smoother transitions\n  }\n}\n\nexport function createNowButton(config: ButtonConfig = {}): HTMLButtonElement {\n  console.log('[NowButton] Creating button with config:', config);\n  \n  if (isButtonInDOM()) {\n    console.log('[NowButton] Button already exists in DOM');\n    const existing = document.getElementById('now-widget-button-container');\n    return existing as HTMLButtonElement;\n  }\n  \n  const elements = createButtonElements();\n  applyButtonConfig(elements, config);\n  \n  console.log('[NowButton] Button created and configured');\n  return elements.container as HTMLButtonElement;\n}","import { ButtonConfig } from '../types/types';\n\ninterface ButtonElements {\n    container: HTMLElement;\n    button: HTMLButtonElement;\n    content: HTMLDivElement;\n    textContainer: HTMLDivElement;\n    arrowIcon: HTMLDivElement;\n}\n\nconst buttonStyles = `\n    :host {\n        display: block;\n        position: relative;\n        z-index: 2147483647;\n    }\n\n    .now-widget-button {\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        width: var(--button-size, 120px);\n        height: var(--button-size, 120px);\n        border-radius: 50%;\n        background: var(--button-color, #0066cc);\n        border: none;\n        cursor: pointer;\n        z-index: 2147483647;\n        transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n        opacity: 1;\n        padding: 0;\n        margin: 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        pointer-events: auto;\n    }\n\n    .now-widget-button:hover {\n        transform: scale(1.05);\n        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);\n    }\n\n    .now-widget-button-left {\n        left: 20px;\n        right: auto;\n    }\n\n    .button-content {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: white;\n        font-family: system-ui, -apple-system, sans-serif;\n        font-size: 16px;\n        position: relative;\n        pointer-events: none;\n    }\n\n    .text-container {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        animation: rotate 15s linear infinite;\n        pointer-events: none;\n    }\n\n    .arrow-icon {\n        width: 24px;\n        height: 24px;\n        position: absolute;\n        transition: transform 0.3s ease;\n        pointer-events: none;\n    }\n\n    @keyframes rotate {\n        from { transform: rotate(0deg); }\n        to { transform: rotate(360deg); }\n    }\n`;\n\nexport function createButtonElements(): ButtonElements {\n    console.log('[ButtonUtils] Creating button elements...');\n    \n    const container = document.createElement('div');\n    container.id = 'now-widget-button-container';\n    \n    const shadowRoot = container.attachShadow({ mode: 'open' });\n    \n    // Add styles\n    const style = document.createElement('style');\n    style.textContent = buttonStyles;\n    shadowRoot.appendChild(style);\n    \n    // Create button\n    const button = document.createElement('button');\n    button.className = 'now-widget-button';\n    button.setAttribute('aria-label', 'Show Now Status');\n    \n    // Create content\n    const content = document.createElement('div');\n    content.className = 'button-content';\n    \n    // Create text\n    const textContainer = document.createElement('div');\n    textContainer.className = 'text-container';\n    textContainer.textContent = 'NOW';\n    \n    // Create arrow\n    const arrowIcon = document.createElement('div');\n    arrowIcon.className = 'arrow-icon';\n    arrowIcon.innerHTML = `\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M5 12H19M19 12L12 5M19 12L12 19\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n    `;\n    \n    // Assemble\n    content.appendChild(textContainer);\n    content.appendChild(arrowIcon);\n    button.appendChild(content);\n    shadowRoot.appendChild(button);\n    \n    console.log('[ButtonUtils] Button elements created:', {\n        container,\n        button,\n        content,\n        textContainer,\n        arrowIcon\n    });\n    \n    return { container, button, content, textContainer, arrowIcon };\n}\n\nexport function applyButtonConfig(elements: ButtonElements, config: ButtonConfig): void {\n    console.log('[ButtonUtils] Applying button configuration:', config);\n    \n    const { container, button } = elements;\n    \n    if (config.size) {\n        container.style.setProperty('--button-size', `${config.size}px`);\n    }\n    \n    if (config.color) {\n        container.style.setProperty('--button-color', config.color);\n    }\n    \n    if (config.position === 'left') {\n        button.classList.add('now-widget-button-left');\n    }\n    \n    console.log('[ButtonUtils] Button configuration applied');\n}\n\nexport function isButtonInDOM(): boolean {\n    const container = document.getElementById('now-widget-button-container');\n    const button = container?.shadowRoot?.querySelector('.now-widget-button');\n    \n    console.log('[ButtonUtils] Button presence check:', {\n        container: !!container,\n        button: !!button,\n        shadowRoot: !!container?.shadowRoot\n    });\n    \n    return !!(container && button);\n}\n","export function formatTimeAgo(date: Date): string {\n    const now = new Date();\n    const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n    \n    const intervals = {\n        year: 31536000,\n        month: 2592000,\n        week: 604800,\n        day: 86400,\n        hour: 3600,\n        minute: 60,\n        second: 1\n    } as const;\n    \n    for (const [unit, seconds] of Object.entries(intervals)) {\n        const interval = Math.floor(diffInSeconds / seconds);\n        \n        if (interval >= 1) {\n            return interval === 1 ? `1 ${unit} ago` : `${interval} ${unit}s ago`;\n        }\n    }\n    \n    return 'just now';\n}\n\nexport const getTimeAgo = (date: Date): string => {\n  const now = new Date();\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n\n  const intervals = {\n    year: 31536000,\n    month: 2592000,\n    week: 604800,\n    day: 86400,\n    hour: 3600,\n    minute: 60,\n    second: 1\n  };\n\n  for (const [unit, seconds] of Object.entries(intervals)) {\n    const interval = Math.floor(diffInSeconds / seconds);\n    \n    if (interval >= 1) {\n      return interval === 1 ? `1 ${unit} ago` : `${interval} ${unit}s ago`;\n    }\n  }\n\n  return 'just now';\n};","interface EnvironmentConfig {\n    API_BASE: string;\n    IS_BROWSER: boolean;\n    IS_DEVELOPMENT: boolean;\n}\n\n// Check if we're in a browser environment\nconst isBrowser = typeof window !== 'undefined' && !!window.document;\n\n// Get environment variables safely\nconst getEnvVar = (key: keyof ImportMetaEnv): string | undefined => {\n    // In browser environment\n    if (isBrowser) {\n        // Try to get from window.__ENV__ if it exists\n        const envFromWindow = (window as any).__ENV__?.[key];\n        if (envFromWindow) return envFromWindow;\n\n        // Fallback to Vite's injected env vars\n        const envFromVite = import.meta.env[key];\n        if (envFromVite) return envFromVite;\n    }\n    return undefined;\n};\n\n/**\n * Get the appropriate API base URL based on environment\n */\nconst getApiBaseUrl = (): string => {\n    // Check for explicitly set API URL first\n    const configuredApiBase = getEnvVar('API_BASE');\n    if (configuredApiBase) {\n        return configuredApiBase;\n    }\n\n    // Check if we're in development mode\n    const isDev = getEnvVar('NODE_ENV') === 'development' || \n                 (isBrowser && window.location.hostname === 'localhost');\n\n    // Use development URL if in development mode\n    if (isDev) {\n        return 'http://localhost:3000';\n    }\n\n    // Default to production URL\n    return 'https://nownownow.io';\n};\n\nconst getEnvironment = (): EnvironmentConfig => ({\n    API_BASE: getApiBaseUrl(),\n    IS_BROWSER: isBrowser,\n    IS_DEVELOPMENT: getEnvVar('NODE_ENV') === 'development' || \n                   (isBrowser && window.location.hostname === 'localhost')\n});\n\nexport const environment = getEnvironment();\n\n// API endpoints\nexport const API_ENDPOINTS = {\n    ORG_INFO: `${environment.API_BASE}/api/users/{orgId}`,\n    ORG_POSTS: `${environment.API_BASE}/api/users/{orgId}/posts`,\n    UPDATE_STATUS: `${environment.API_BASE}/api/status`\n} as const;\n\n// Log API base in development for debugging\nif (environment.IS_DEVELOPMENT) {\n    console.log('API Base URL:', environment.API_BASE);\n}\n","export const securityConfig = {\n    cors: {\n        allowedOrigins: ['*'] as readonly string[],\n        allowedMethods: ['GET', 'POST', 'OPTIONS'] as const,\n        allowedHeaders: [\n            'Content-Type',\n            'Authorization',\n            'X-Client-Version',\n            'X-Environment'\n        ] as const,\n        exposedHeaders: [] as const,\n        credentials: true,\n        maxAge: 86400 // 24 hours\n    },\n    headers: {\n        'Strict-Transport-Security': 'max-age=31536000; includeSubDomains',\n        'X-Content-Type-Options': 'nosniff',\n        'X-Frame-Options': 'DENY',\n        'X-XSS-Protection': '1; mode=block',\n        'Referrer-Policy': 'strict-origin-when-cross-origin',\n        'Content-Security-Policy': [\n            \"default-src 'self'\",\n            \"script-src 'self' 'unsafe-inline' 'unsafe-eval'\",\n            \"style-src 'self' 'unsafe-inline'\",\n            \"img-src 'self' data: https:\",\n            \"connect-src 'self' https:\",\n            \"font-src 'self'\",\n            \"object-src 'none'\",\n            \"media-src 'none'\",\n            \"frame-src 'none'\"\n        ].join('; ')\n    }\n} as const;\n\nexport function getSecurityHeaders(): Record<string, string> {\n    return securityConfig.headers;\n}\n\nexport function getCorsHeaders(origin: string): Record<string, string> {\n    const isAllowedOrigin = origin === '*' || securityConfig.cors.allowedOrigins.includes(origin);\n\n    if (!isAllowedOrigin) {\n        return {};\n    }\n\n    return {\n        'Access-Control-Allow-Origin': origin,\n        'Access-Control-Allow-Methods': securityConfig.cors.allowedMethods.join(', '),\n        'Access-Control-Allow-Headers': securityConfig.cors.allowedHeaders.join(', '),\n        'Access-Control-Expose-Headers': securityConfig.cors.exposedHeaders.join(', '),\n        'Access-Control-Allow-Credentials': securityConfig.cors.credentials.toString(),\n        'Access-Control-Max-Age': securityConfig.cors.maxAge.toString()\n    };\n}\n\nexport function validateOrigin(origin: string): boolean {\n    if (origin === '*') {\n        return true;\n    }\n    return securityConfig.cors.allowedOrigins.includes(origin);\n}\n\nexport function sanitizeInput(input: string): string {\n    return input\n        .replace(/[<>]/g, '') // Remove < and > to prevent HTML injection\n        .replace(/['\"]/g, '') // Remove quotes to prevent script injection\n        .trim();\n}\n","import { environment, API_ENDPOINTS } from '../config/environment';\nimport { User, Post, OrgInfo, UserPost } from '../types/types';\nimport { getSecurityHeaders, sanitizeInput } from '../config/security';\n\ninterface ApiResponse<T> {\n    success: boolean;\n    data?: T;\n    error?: string;\n}\n\ninterface UserResponse {\n    user: User;\n}\n\ninterface PostsResponse {\n    posts: Post[];\n}\n\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY = 1000;\n\nasync function wait(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function makeApiRequest<T>(\n    endpoint: string,\n    options: RequestInit,\n    retries: number = MAX_RETRIES\n): Promise<ApiResponse<T>> {\n    try {\n        if (environment.IS_DEVELOPMENT) {\n            console.log(`API Request: ${endpoint}`, options);\n        }\n\n        const securityHeaders = getSecurityHeaders();\n        const response = await fetch(endpoint, {\n            ...options,\n            headers: {\n                ...securityHeaders,\n                ...options.headers,\n                'Accept': 'application/json',\n                'X-Client-Version': '1.0.0',\n                'X-Environment': environment.IS_DEVELOPMENT ? 'development' : 'production'\n            }\n        });\n\n        if (!response.ok) {\n            if (response.status === 429 && retries > 0) {\n                await wait(RETRY_DELAY);\n                return makeApiRequest(endpoint, options, retries - 1);\n            }\n\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        \n        if (environment.IS_DEVELOPMENT) {\n            console.log(`API Response: ${endpoint}`, data);\n        }\n\n        return {\n            success: true,\n            data\n        };\n    } catch (error) {\n        if (retries > 0) {\n            await wait(RETRY_DELAY);\n            return makeApiRequest(endpoint, options, retries - 1);\n        }\n\n        console.error('API request failed:', error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error occurred'\n        };\n    }\n}\n\nexport async function fetchOrgInfo(token: string): Promise<OrgInfo> {\n    if (!environment.IS_BROWSER) {\n        throw new Error('API calls are not supported in non-browser environments');\n    }\n\n    const response = await makeApiRequest<UserResponse>(\n        API_ENDPOINTS.ORG_INFO.replace('{orgId}', 'me'),\n        {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        }\n    );\n\n    if (response.success && response.data) {\n        const { user } = response.data;\n        return {\n            id: user.id,\n            name: user.name,\n            email: user.email,\n            emailVerified: user.emailVerified,\n            avatar: user.avatar,\n            status: user.status,\n            displayName: user.displayName,\n            bio: user.bio,\n            followers: user.followers\n        };\n    }\n\n    throw new Error(response.error || 'Failed to fetch user info');\n}\n\nexport async function fetchUserPosts(token: string): Promise<UserPost[]> {\n    if (!environment.IS_BROWSER) {\n        throw new Error('API calls are not supported in non-browser environments');\n    }\n\n    const response = await makeApiRequest<PostsResponse>(\n        API_ENDPOINTS.ORG_POSTS.replace('{orgId}', 'me'),\n        {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        }\n    );\n\n    if (response.success && response.data) {\n        return response.data.posts;\n    }\n\n    throw new Error(response.error || 'Failed to fetch user posts');\n}\n\nexport async function updateStatus(token: string, status: string): Promise<void> {\n    if (!environment.IS_BROWSER) {\n        throw new Error('API calls are not supported in non-browser environments');\n    }\n\n    const sanitizedStatus = sanitizeInput(status);\n    \n    const response = await makeApiRequest<{ status: string }>(API_ENDPOINTS.UPDATE_STATUS, {\n        method: 'POST',\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ status: sanitizedStatus })\n    });\n\n    if (!response.success) {\n        throw new Error(response.error || 'Failed to update status');\n    }\n}","import { Post, User } from '../types/types';\nimport { formatTimeAgo } from '../utils/dateUtils';\nimport { fetchUserPosts } from '../api/auth';\n\ninterface PanelConfig {\n  posts: Post[];\n  user: User | null;\n  onLoadMore?: () => void;\n  orgId: string;\n  token: string;\n}\n\nfunction createErrorState(title: string, message: string, type: 'error' | 'empty' = 'error'): HTMLElement {\n  const container = document.createElement('div');\n  container.className = 'now-widget-error-state';\n  \n  const icon = document.createElement('div');\n  icon.className = 'now-widget-error-icon';\n  \n  const iconSvg = type === 'error' \n      ? '<svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line></svg>'\n      : '<svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M8 14s1.5 2 4 2 4-2 4-2\"></path><line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line><line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line></svg>';\n  \n  icon.innerHTML = iconSvg;\n  \n  const titleEl = document.createElement('h3');\n  titleEl.className = 'now-widget-error-title';\n  titleEl.textContent = title;\n  \n  const text = document.createElement('p');\n  text.className = 'now-widget-error-message';\n  text.textContent = message;\n  \n  container.appendChild(icon);\n  container.appendChild(titleEl);\n  container.appendChild(text);\n  \n  return container;\n}\n\nconst createCommentsList = (comments: any[]): HTMLElement => {\n  const container = document.createElement('div');\n  container.classList.add('now-widget-comments');\n  \n  comments.forEach(comment => {\n    const commentEl = document.createElement('div');\n    commentEl.classList.add('now-widget-comment');\n    \n    const commentHeader = document.createElement('div');\n    commentHeader.classList.add('now-widget-comment-header');\n    \n    const avatar = document.createElement('img');\n    avatar.src = comment.user.image;\n    avatar.alt = comment.user.name;\n    avatar.classList.add('now-widget-comment-avatar');\n    \n    const userName = document.createElement('span');\n    userName.classList.add('now-widget-comment-username');\n    userName.textContent = comment.user.name;\n    \n    const timeAgo = document.createElement('span');\n    timeAgo.classList.add('now-widget-comment-time');\n    timeAgo.textContent = formatTimeAgo(new Date(comment.createdAt));\n    \n    commentHeader.appendChild(avatar);\n    commentHeader.appendChild(userName);\n    commentHeader.appendChild(timeAgo);\n    \n    const content = document.createElement('p');\n    content.classList.add('now-widget-comment-content');\n    content.textContent = comment.content;\n    \n    commentEl.appendChild(commentHeader);\n    commentEl.appendChild(content);\n    container.appendChild(commentEl);\n  });\n  \n  return container;\n};\n\nconst createPostElement = (post: Post): HTMLElement => {\n  const postEl = document.createElement('div');\n  postEl.classList.add('now-widget-post');\n\n  const postTime = document.createElement('p');\n  postTime.classList.add('now-widget-post-time');\n  const timeAgo = formatTimeAgo(new Date(post.createdAt));\n  postTime.textContent = timeAgo;\n\n  const postContent = document.createElement('p');\n  postContent.classList.add('now-widget-post-content');\n  postContent.textContent = post.content;\n\n  const postStats = document.createElement('div');\n  postStats.classList.add('now-widget-post-stats');\n\n  const likes = document.createElement('span');\n  likes.classList.add('now-widget-post-stat');\n  likes.innerHTML = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n    <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"></path>\n  </svg> ${post._count?.likes || 0}`;\n\n  const comments = document.createElement('span');\n  comments.classList.add('now-widget-post-stat');\n  comments.innerHTML = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n    <path d=\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"></path>\n  </svg> ${post._count?.comments || 0}`;\n\n  // Add click handler for comments\n  if (post.comments?.length) {\n    const commentsContainer = document.createElement('div');\n    commentsContainer.classList.add('now-widget-comments-container');\n    commentsContainer.style.display = 'none';\n    \n    const commentsList = createCommentsList(post.comments);\n    commentsContainer.appendChild(commentsList);\n    \n    comments.addEventListener('click', () => {\n      const isVisible = commentsContainer.style.display === 'block';\n      commentsContainer.style.display = isVisible ? 'none' : 'block';\n      comments.classList.toggle('active');\n    });\n    \n    postEl.appendChild(commentsContainer);\n  }\n\n  postStats.appendChild(likes);\n  postStats.appendChild(comments);\n\n  postEl.appendChild(postTime);\n  postEl.appendChild(postContent);\n  postEl.appendChild(postStats);\n\n  if (post.attachments && post.attachments.length > 0) {\n    const firstAttachment = post.attachments[0];\n    if (firstAttachment.type === 'image') {\n      const postImage = document.createElement('div');\n      postImage.classList.add('now-widget-post-image');\n      postImage.style.backgroundImage = `url(${firstAttachment.url})`;\n      postEl.appendChild(postImage);\n    }\n  }\n\n  return postEl;\n};\n\nexport function createNowPanel(config: PanelConfig): HTMLElement {\n  const { posts, user } = config;\n\n  const panel = document.createElement('div');\n  panel.className = 'now-widget-panel';\n  panel.setAttribute('now-data-position', document.body.getAttribute('data-widget-position') || 'right');\n  \n  // Create backdrop\n  const backdrop = document.createElement('div');\n  backdrop.className = 'now-widget-backdrop';\n  backdrop.addEventListener('click', () => {\n    panel.dispatchEvent(new CustomEvent('close'));\n  });\n  \n  // Create header\n  const header = document.createElement('div');\n  header.className = 'panel-header';\n  header.innerHTML = `\n    <div class=\"header-content\">\n      <h2 id=\"panel-title\">Latest Updates</h2>\n      <button class=\"close-button\" aria-label=\"Close panel\">×</button>\n    </div>\n  `;\n  \n  // Create content container\n  const content = document.createElement('div');\n  content.className = 'panel-content';\n  \n  // Add styles\n  const styles = document.createElement('style');\n  styles.textContent = `\n    .panel-header {\n      padding: 1rem;\n      border-bottom: 1px solid var(--now-border-color, rgba(255, 255, 255, 0.1));\n      background: var(--now-bg-color);\n    }\n    \n    .header-content {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    \n    #panel-title {\n      margin: 0;\n      font-size: 1.2rem;\n      font-weight: 600;\n      color: var(--now-text-color);\n    }\n    \n    .close-button {\n      background: none;\n      border: none;\n      color: var(--now-text-color);\n      font-size: 1.5rem;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n      opacity: 0.7;\n      transition: opacity 200ms ease;\n    }\n    \n    .close-button:hover {\n      opacity: 1;\n    }\n    \n    .panel-content {\n      height: calc(100vh - 4rem);\n      overflow-y: auto;\n      padding: 1rem;\n    }\n    \n    .panel-content::-webkit-scrollbar {\n      width: 8px;\n    }\n    \n    .panel-content::-webkit-scrollbar-track {\n      background: transparent;\n    }\n    \n    .panel-content::-webkit-scrollbar-thumb {\n      background: var(--now-border-color, rgba(255, 255, 255, 0.1));\n      border-radius: 4px;\n    }\n    \n    .now-widget-error-state {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      padding: 2rem;\n      text-align: center;\n      color: var(--now-text-color);\n    }\n    \n    .now-widget-error-icon {\n      margin-bottom: 1rem;\n      opacity: 0.7;\n    }\n    \n    .now-widget-error-title {\n      margin: 0 0 0.5rem;\n      font-size: 1.1rem;\n    }\n    \n    .now-widget-error-message {\n      margin: 0;\n      opacity: 0.7;\n      font-size: 0.9rem;\n    }\n    \n    @media (max-width: 768px) {\n      .panel-content {\n        height: calc(100vh - 3rem);\n      }\n    }\n  `;\n  \n  panel.appendChild(styles);\n  panel.appendChild(backdrop);\n  panel.appendChild(header);\n  panel.appendChild(content);\n  \n  // Add close button handler\n  const closeButton = header.querySelector('.close-button');\n  if (closeButton) {\n    closeButton.addEventListener('click', () => {\n      panel.dispatchEvent(new CustomEvent('close'));\n    });\n  }\n  \n  // If no user found, show error state\n  if (!user) {\n    const errorContent = createErrorState(\n      'User Not Found',\n      'We couldn\\'t find this user in our system. The user ID might be incorrect or the account might have been removed.',\n      'error'\n    );\n    content.appendChild(errorContent);\n    return panel;\n  }\n\n  // If user exists but has no posts\n  if (posts.length === 0) {\n    const emptyContent = createErrorState(\n      'No Posts Yet',\n      'This user hasn\\'t shared any updates yet.',\n      'empty'\n    );\n    content.appendChild(emptyContent);\n    return panel;\n  }\n\n  // Header with user info (fixed)\n  const userInfo = document.createElement('div');\n  userInfo.classList.add('now-widget-org-info');\n\n  // Avatar and user details container\n  const userContainer = document.createElement('div');\n  userContainer.classList.add('now-widget-user-container');\n\n  const userAvatar = document.createElement('img');\n  userAvatar.className = 'now-widget-user-avatar';\n  userAvatar.src = user.avatar || '';\n  userAvatar.alt = user.name;\n\n  const userDetails = document.createElement('div');\n  userDetails.classList.add('now-widget-user-details');\n\n  const userName = document.createElement('h2');\n  userName.classList.add('now-widget-user-name');\n  userName.textContent = user.displayName || user.name || 'User';\n\n  const userRole = document.createElement('p');\n  userRole.classList.add('now-widget-user-role');\n  userRole.textContent = user.bio || '';\n\n  const userStats = document.createElement('p');\n  userStats.classList.add('now-widget-user-stats');\n  userStats.textContent = `${user.followers || 0} followers`;\n\n  userDetails.appendChild(userName);\n  userDetails.appendChild(userRole);\n  userDetails.appendChild(userStats);\n\n  userContainer.appendChild(userAvatar);\n  userContainer.appendChild(userDetails);\n  userInfo.appendChild(userContainer);\n  content.appendChild(userInfo);\n\n  // Posts container\n  const postsContainer = document.createElement('div');\n  postsContainer.classList.add('now-widget-posts');\n\n  posts.forEach(post => {\n    const postEl = createPostElement(post);\n    postsContainer.appendChild(postEl);\n  });\n\n  content.appendChild(postsContainer);\n\n  // Add infinite scroll\n  let isLoading = false;\n  let currentPage = 1;\n  let hasError = false;\n\n  const loadMoreContent = async (): Promise<void> => {\n    isLoading = true;\n    hasError = false;\n    \n    try {\n      const response = await fetchUserPosts(config.orgId);\n      if (!response || !Array.isArray(response)) {\n        throw new Error('Invalid response format');\n      }\n\n      const posts = response.map(post => ({\n        id: post.id,\n        content: post.content,\n        timestamp: post.timestamp,\n        createdAt: post.timestamp,\n        attachments: post.attachments || [],\n        comments: post.comments || [],\n        user: post.user || {\n          id: '',\n          name: '',\n          email: '',\n          emailVerified: false,\n          avatar: '',\n          status: '',\n          followers: 0\n        },\n        _count: {\n          likes: 0,\n          comments: (post.comments || []).length\n        }\n      }));\n\n      posts.forEach(post => {\n        const postEl = createPostElement(post);\n        postsContainer.appendChild(postEl);\n      });\n      currentPage++;\n    } catch (error) {\n      hasError = true;\n      const errorEl = createErrorState(\n        'Error Loading Posts',\n        error instanceof Error ? error.message : 'An unknown error occurred',\n        'error'\n      );\n      content.appendChild(errorEl);\n    } finally {\n      isLoading = false;\n    }\n  };\n\n  content.addEventListener('scroll', async () => {\n    if (isLoading || hasError) return;\n    \n    const { scrollTop, scrollHeight, clientHeight } = content;\n    if (scrollTop + clientHeight >= scrollHeight - 100) {\n      await loadMoreContent();\n    }\n  });\n\n  return panel;\n}","import { widgetStore } from '../state/state';\nimport { injectStyles } from '../utils/nowStyleUtils';\nimport { safeCreateContainer, safeUpdateStyle } from '../utils/domUtils';\nimport { WidgetConfig } from '../types/config';\nimport { User, OrgInfo, Post, UserPost } from '../types/types';\nimport { eventManager } from '../utils/eventManager';\nimport { DOMMonitor, createDOMMonitor } from '../utils/domMonitor';\nimport { createNowButton } from './NowButton';\nimport { createNowPanel } from './NowPanelContent';\nimport { fetchOrgInfo, fetchUserPosts } from '../api/auth';\nimport { environment } from '../config/environment';\n\n// Widget state encapsulation\ninterface WidgetState {\n    currentPanel: HTMLElement | null;\n    domMonitor: DOMMonitor | null;\n    isInitializing: boolean;\n    cleanupFunctions: Array<() => void>;\n}\n\nconst widgetState: WidgetState = {\n    currentPanel: null,\n    domMonitor: null,\n    isInitializing: false,\n    cleanupFunctions: []\n};\n\nconst convertOrgInfoToUser = (info: OrgInfo): User => ({\n    id: info.id,\n    name: info.name,\n    email: info.email ?? '',\n    emailVerified: info.emailVerified ?? false,\n    avatar: info.avatar,\n    status: info.status,\n    displayName: info.displayName,\n    bio: info.bio,\n    followers: info.followers ?? 0\n});\n\nconst convertUserPostToPost = (userPost: UserPost): Post => ({\n    id: userPost.id,\n    content: userPost.content,\n    user: userPost.user ? convertOrgInfoToUser(userPost.user) : {\n        id: '',\n        name: '',\n        email: '',\n        emailVerified: false,\n        avatar: '',\n        status: '',\n        followers: 0\n    },\n    createdAt: userPost.timestamp,\n    timestamp: userPost.timestamp,\n    attachments: userPost.attachments ?? [],\n    comments: userPost.comments ?? [],\n    _count: {\n        likes: 0,\n        comments: userPost.comments?.length ?? 0\n    }\n});\n\nexport async function initializeNowWidget(config: WidgetConfig): Promise<void> {\n    if (!environment.IS_BROWSER) {\n        console.log('Widget initialization skipped: non-browser environment');\n        return;\n    }\n\n    if (widgetState.isInitializing) {\n        console.log('Widget initialization already in progress');\n        return;\n    }\n\n    try {\n        widgetState.isInitializing = true;\n        await cleanupExistingWidget();\n\n        const widgetContainer = await createWidgetContainer(config);\n        widgetStore.initializeWidgetRoot(widgetContainer);\n\n        // Create and configure button\n        const button = createNowButton({\n            size: config.buttonSize,\n            color: config.buttonColor,\n            position: config.position,\n            theme: config.theme\n        });\n\n        // Append button to container's shadow root\n        console.log('[NowWidget] Appending button to container shadow root');\n        if (widgetContainer.shadowRoot) {\n            widgetContainer.shadowRoot.appendChild(button);\n        } else {\n            console.error('[NowWidget] Container shadow root not found');\n            widgetContainer.appendChild(button);\n        }\n        \n        setupFadeEffect(button);\n\n        // DOM Monitor setup\n        widgetState.domMonitor = createDOMMonitor(widgetContainer, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: ['class', 'style']\n        });\n\n        // Event Listeners\n        const handleScroll = (): void => {\n            handleUrlChange(button);\n        };\n\n        const handleResize = (): void => {\n            handleUrlChange(button);\n        };\n\n        const handlePopState = (): void => {\n            handleUrlChange(button);\n        };\n\n        const handleClickOutside = (event: MouseEvent): void => {\n            const target = event.target as HTMLElement;\n            if (!button.contains(target) && widgetState.currentPanel && !widgetState.currentPanel.contains(target)) {\n                removePanel();\n            }\n        };\n\n        const handleKeyDown = (event: KeyboardEvent): void => {\n            if (event.key === 'Escape') {\n                removePanel();\n            }\n        };\n\n        // Add event listeners\n        button.addEventListener('click', () => openPanel(config, widgetContainer));\n        window.addEventListener('popstate', handlePopState);\n        eventManager.addListener(window, 'scroll', handleScroll);\n        eventManager.addListener(window, 'resize', handleResize);\n        eventManager.addListener(document, 'click', handleClickOutside);\n        eventManager.addListener(document, 'keydown', handleKeyDown);\n\n        // Initial setup\n        document.body.appendChild(widgetContainer);\n        handleScroll();\n\n        // Cleanup on unload\n        window.addEventListener('unload', () => {\n            eventManager.cleanup();\n            if (widgetState.domMonitor) {\n                widgetState.domMonitor.disconnect();\n            }\n            widgetContainer.remove();\n        });\n\n        console.log('[NowWidget] Initialization complete, checking DOM:', {\n            container: document.getElementById('now-widget-root'),\n            containerShadowRoot: document.getElementById('now-widget-root')?.shadowRoot,\n            button: document.getElementById('now-widget-button-container')\n        });\n\n    } catch (error) {\n        console.error('Error initializing widget:', error);\n        if (widgetState.domMonitor) {\n            widgetState.domMonitor.disconnect();\n        }\n        widgetStore.handleError(error instanceof Error ? error.message : 'Unknown error');\n    } finally {\n        widgetState.isInitializing = false;\n    }\n}\n\nasync function openPanel(config: WidgetConfig, widgetContainer: HTMLElement): Promise<void> {\n    console.log('[NowWidget] Opening panel...');\n    if (widgetState.currentPanel) {\n        console.log('[NowWidget] Panel exists, removing...');\n        await removePanel();\n    } else {\n        console.log('[NowWidget] Loading and showing panel...');\n        await loadAndShowPanel(config, widgetContainer);\n    }\n}\n\nasync function loadAndShowPanel(config: WidgetConfig, widgetContainer: HTMLElement): Promise<void> {\n    try {\n        console.log('[NowWidget] Loading panel data...');\n        widgetStore.setLoading(true);\n        await removePanel();\n\n        const [userInfo, posts] = await Promise.all([\n            fetchOrgInfo(config.token),\n            fetchUserPosts(config.token)\n        ]);\n\n        console.log('[NowWidget] Data loaded:', { userInfo, postsCount: posts.length });\n\n        const user = convertOrgInfoToUser(userInfo);\n        widgetStore.setUser(user);\n        const convertedPosts = posts.map(convertUserPostToPost);\n        widgetStore.setPosts(convertedPosts);\n\n        console.log('[NowWidget] Creating panel...');\n        widgetState.currentPanel = createNowPanel({\n            user,\n            posts: convertedPosts,\n            orgId: user.id,\n            token: config.token\n        });\n\n        if (widgetState.currentPanel && widgetContainer.shadowRoot) {\n            console.log('[NowWidget] Appending panel to shadow root...');\n            \n            // Add panel to shadow root\n            widgetContainer.shadowRoot.appendChild(widgetState.currentPanel);\n            \n            // Add panel styles\n            const style = document.createElement('style');\n            style.textContent = `\n                .now-widget-panel {\n                    position: fixed;\n                    top: 0;\n                    right: 0;\n                    width: 400px;\n                    height: 100vh;\n                    background: var(--now-bg-color, #ffffff);\n                    box-shadow: -2px 0 8px rgba(0, 0, 0, 0.1);\n                    z-index: var(--z-index-panel, 10000);\n                    transform: translateX(100%);\n                    transition: transform 0.3s ease-in-out;\n                }\n                \n                .now-widget-panel[now-data-position=\"left\"] {\n                    left: 0;\n                    right: auto;\n                    transform: translateX(-100%);\n                }\n                \n                .now-widget-panel.visible {\n                    transform: translateX(0);\n                }\n                \n                .now-widget-backdrop {\n                    position: fixed;\n                    top: 0;\n                    left: 0;\n                    width: 100vw;\n                    height: 100vh;\n                    background: rgba(0, 0, 0, 0.5);\n                    z-index: var(--z-index-overlay, 9999);\n                    opacity: 0;\n                    transition: opacity 0.3s ease-in-out;\n                }\n                \n                .now-widget-backdrop.visible {\n                    opacity: 1;\n                }\n            `;\n            widgetContainer.shadowRoot.appendChild(style);\n            \n            // Show panel with animation\n            requestAnimationFrame(() => {\n                if (widgetState.currentPanel) {\n                    widgetState.currentPanel.classList.add('visible');\n                    const backdrop = widgetState.currentPanel.querySelector('.now-widget-backdrop');\n                    if (backdrop) {\n                        backdrop.classList.add('visible');\n                    }\n                }\n            });\n            \n            // Setup close handler\n            const closeButton = widgetState.currentPanel.querySelector('.close-button');\n            if (closeButton) {\n                closeButton.addEventListener('click', () => removePanel());\n            }\n            \n            console.log('[NowWidget] Panel initialized and visible');\n        } else {\n            console.error('[NowWidget] Cannot append panel: container or shadow root missing');\n        }\n    } catch (error) {\n        console.error('[NowWidget] Error loading panel:', error);\n        widgetStore.handleError(error instanceof Error ? error.message : 'Failed to load panel');\n    } finally {\n        widgetStore.setLoading(false);\n    }\n}\n\nasync function removePanel(): Promise<void> {\n    console.log('[NowWidget] Removing panel...');\n    if (widgetState.currentPanel) {\n        // Animate out\n        widgetState.currentPanel.classList.remove('visible');\n        const backdrop = widgetState.currentPanel.querySelector('.now-widget-backdrop');\n        if (backdrop) {\n            backdrop.classList.remove('visible');\n        }\n        \n        // Wait for animation\n        await new Promise(resolve => setTimeout(resolve, 300));\n        \n        // Remove from DOM\n        widgetState.currentPanel.remove();\n        widgetState.currentPanel = null;\n        console.log('[NowWidget] Panel removed');\n    }\n}\n\nfunction handleUrlChange(button: HTMLElement): void {\n    const shouldShow = shouldShowWidget();\n    safeUpdateStyle(button, {\n        display: shouldShow ? 'block' : 'none'\n    });\n}\n\nfunction shouldShowWidget(): boolean {\n    return !isInHeroSection();\n}\n\nfunction isInHeroSection(): boolean {\n    return !!document.querySelector('.hero-section');\n}\n\nasync function cleanupExistingWidget(): Promise<void> {\n    const existingContainer = document.getElementById('now-widget-root');\n    if (existingContainer) {\n        existingContainer.remove();\n    }\n\n    if (widgetState.domMonitor) {\n        widgetState.domMonitor.disconnect();\n    }\n\n    widgetState.cleanupFunctions.forEach(cleanup => cleanup());\n    widgetState.cleanupFunctions = [];\n}\n\nasync function createWidgetContainer(config: WidgetConfig): Promise<HTMLElement> {\n    const container = await safeCreateContainer('now-widget-root');\n    \n    // Add container styles\n    if (container.shadowRoot) {\n        const style = document.createElement('style');\n        style.textContent = `\n            :host {\n                display: block;\n                position: relative;\n                z-index: 2147483647;\n            }\n            \n            #now-widget-root {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 0;\n                height: 0;\n                pointer-events: none;\n                z-index: 2147483647;\n            }\n        `;\n        container.shadowRoot.appendChild(style);\n    }\n    \n    injectStyles(\n        config.theme || 'light',\n        config.position || 'right',\n        {\n            '--now-widget-button-bg': config.buttonColor,\n            '--now-widget-button-size': config.buttonSize ? `${config.buttonSize}px` : undefined,\n            '--z-index-button': '2147483647',\n            '--z-index-panel': '2147483646',\n            '--z-index-overlay': '2147483645'\n        }\n    );\n    \n    return container;\n}\n\nfunction setupFadeEffect(button: HTMLElement): void {\n    safeUpdateStyle(button, {\n        transition: 'opacity 300ms ease-in-out',\n        opacity: shouldShowWidget() && isInHeroSection() ? '1' : '0',\n        display: shouldShowWidget() ? 'block' : 'none'\n    });\n\n    const updateButtonVisibility = () => {\n        if (!shouldShowWidget()) {\n            safeUpdateStyle(button, {\n                display: 'none',\n                opacity: '0',\n                pointerEvents: 'none'\n            });\n            return;\n        }\n\n        const isVisible = isInHeroSection();\n        safeUpdateStyle(button, {\n            display: 'block',\n            opacity: isVisible ? '1' : '0',\n            pointerEvents: isVisible ? 'auto' : 'none'\n        });\n    };\n\n    updateButtonVisibility();\n\n    const scrollCleanup = eventManager.addListener(\n        window,\n        'scroll',\n        () => requestAnimationFrame(updateButtonVisibility),\n        { passive: true }\n    );\n\n    widgetState.cleanupFunctions.push(scrollCleanup);\n}\n\nexport const teardownNowWidget = () => {\n    cleanupExistingWidget();\n};\n","let retryCount = 0;\nconst MAX_RETRIES = 5;\nconst BASE_DELAY = 2000;\nlet isPinging = false;\nlet timeoutId: number | null = null;\nconst DEBOUNCE_DELAY = 500;\nlet debounceTimeout: number | null = null;\n\nexport const pingServer = async () => {\n    if (debounceTimeout) {\n        clearTimeout(debounceTimeout);\n    }\n\n    debounceTimeout = window.setTimeout(async () => {\n        if (isPinging) return;\n        isPinging = true;\n\n        try {\n            const response = await fetch('http://localhost:5173/dist/now-widget.js');\n            if (response.ok) {\n                console.log('Server is reachable');\n                retryCount = 0;\n            }\n        } catch (error) {\n            retryCount++;\n            if (retryCount <= MAX_RETRIES) {\n                const delay = BASE_DELAY * Math.pow(2, retryCount);\n                console.warn(`Ping failed. Retrying in ${delay}ms`);\n                timeoutId = window.setTimeout(pingServer, delay);\n            } else {\n                console.error('Max retry attempts reached. Stopping pings.');\n            }\n        } finally {\n            isPinging = false;\n        }\n    }, DEBOUNCE_DELAY);\n};\n\n// Remove the immediate ping to control initiation externally\n// pingServer();\n\nexport const stopPinging = () => {\n    if (timeoutId !== null) {\n        clearTimeout(timeoutId);\n        timeoutId = null;\n    }\n    isPinging = false;\n};","import { initializeNowWidget, teardownNowWidget } from './components/NowWidget';\nimport './styles/nowWidgetStyles.css';\nimport { getScriptAttributes } from './utils/nowWidgetUtils';\nimport { pingServer } from './utils/pingServer';\n\ninterface NowWidgetConfig {\n    orgId: string;\n    token: string;\n    theme?: 'light' | 'dark';\n    position?: 'left' | 'right';\n    buttonColor?: string;\n    buttonSize?: number;\n}\n\nlet isInitialized = false;\n\n/**\n * Initializes the NowWidget by fetching script attributes and setting up the widget.\n */\nconst init = async (): Promise<void> => {\n    console.log('[NowWidget] Starting initialization...');\n    \n    // Check if widget container already exists\n    const existingContainer = document.getElementById('now-widget-container');\n    console.log('[NowWidget] Existing container:', existingContainer);\n    \n    if (existingContainer) {\n        console.log('[NowWidget] Widget already initialized.');\n        return;\n    }\n\n    // Get script attributes\n    const attributes = getScriptAttributes();\n    console.log('[NowWidget] Retrieved attributes:', attributes);\n    \n    if (!attributes) {\n        console.error('[NowWidget] No valid attributes found. Widget initialization failed.');\n        return;\n    }\n    \n    const { orgId, token, theme, position, buttonColor } = attributes;\n    \n    // Validate theme and position\n    const validatedTheme = theme === 'dark' || theme === 'light' ? theme : 'light';\n    const validatedPosition = position === 'left' || position === 'right' ? position : 'right';\n\n    console.log('[NowWidget] Initializing with config:', {\n        orgId,\n        theme: validatedTheme,\n        position: validatedPosition,\n        buttonColor\n    });\n\n    // Initialize the widget with the fetched configuration\n    await initialize({\n        orgId,\n        token,\n        theme: validatedTheme,\n        position: validatedPosition,\n        buttonColor\n    });\n\n    // Check if widget elements are present\n    const widgetButton = document.querySelector('#now-widget-button-container');\n    const widgetPanel = document.querySelector('#now-widget-panel');\n    \n    console.log('[NowWidget] Elements after initialization:', {\n        button: widgetButton,\n        panel: widgetPanel\n    });\n\n    // Start pinging the server\n    pingServer();\n};\n\n// Initialize the widget when the DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    console.log('[NowWidget] DOM Content Loaded, initializing widget...');\n    init();\n});\n\n// Also try to initialize on window load as a fallback\nwindow.addEventListener('load', () => {\n    console.log('[NowWidget] Window loaded, checking initialization...');\n    if (!document.getElementById('now-widget-container')) {\n        init();\n    }\n});\n\nexport function initialize(config: NowWidgetConfig): void {\n    if (isInitialized) {\n        console.warn('NowWidget is already initialized');\n        return;\n    }\n\n    if (!config.orgId || !config.token) {\n        throw new Error('orgId and token are required');\n    }\n\n    initializeNowWidget(config);\n    isInitialized = true;\n}\n\nexport function teardown(): void {\n    if (!isInitialized) {\n        console.warn('NowWidget is not initialized');\n        return;\n    }\n\n    teardownNowWidget();\n    isInitialized = false;\n}\n\nexport default {\n    initialize,\n    teardown\n};"],"names":["WidgetStoreImpl","constructor","__publicField","this","loading","user","posts","initialized","rootElement","state","element","parentNode","removeChild","error","handleError","updateUI","loadingIndicator","querySelector","classList","toggle","panel","userInfo","userAvatar","document","createElement","className","src","avatar","alt","name","userDetails","innerHTML","displayName","bio","appendChild","renderOrgInfo","length","content","forEach","post","postEl","renderPostsInPanel","message","console","widgetStore","store","getState","initializeWidgetRoot","resetState","setLoading","setPosts","setUser","getError","clearError","createWidgetStore","applyContainerStyles","container","theme","position","themeVariables","add","remove","style","cssVars","Object","entries","filter","_","value","map","key","join","textContent","existingStyles","_a","shadowRoot","querySelectorAll","el","setAttribute","_b","log","id","variables","safeUpdateStyle","styleUpdates","requestAnimationFrame","assign","registry","WeakMap","removeListener","target","type","handler","options","items","get","removeEventListener","item","delete","size","removeAllListeners","eventManager","addListener","has","set","Set","registryItem","addEventListener","cleanup","targets","Array","from","getListenerCount","DOMMonitor","detachCallbacks","Map","observer","setupObserver","MutationObserver","mutations","handleMutations","contains","onDetach","call","body","onReattach","attributeMutations","mutation","onAttributeChange","startObserving","isObserving","observe","childList","subtree","attributes","attributeFilter","stopObserving","disconnect","updateContainer","newContainer","destroy","callback","clear","removedNodes","node","createNowButton","config","getElementById","button","isButtonInDOM","elements","attachShadow","mode","textContainer","arrowIcon","createButtonElements","setProperty","color","applyButtonConfig","formatTimeAgo","date","now","Date","diffInSeconds","Math","floor","getTime","intervals","year","month","week","day","hour","minute","second","unit","seconds","interval","isBrowser","window","getEnvVar","envFromWindow","__ENV__","envFromVite","__vite_import_meta_env__","environment","API_BASE","configuredApiBase","location","hostname","getApiBaseUrl","IS_BROWSER","IS_DEVELOPMENT","API_ENDPOINTS","ORG_INFO","ORG_POSTS","UPDATE_STATUS","securityConfig","cors","allowedOrigins","allowedMethods","allowedHeaders","exposedHeaders","credentials","maxAge","headers","async","wait","ms","Promise","resolve","setTimeout","makeApiRequest","endpoint","retries","securityHeaders","response","fetch","Accept","ok","status","Error","data","json","success","fetchOrgInfo","token","replace","method","Authorization","email","emailVerified","followers","fetchUserPosts","createErrorState","title","icon","iconSvg","titleEl","text","createPostElement","postTime","timeAgo","createdAt","postContent","postStats","likes","_count","comments","_c","commentsContainer","display","commentsList","comment","commentEl","commentHeader","image","userName","createCommentsList","isVisible","attachments","firstAttachment","postImage","backgroundImage","url","createNowPanel","getAttribute","backdrop","dispatchEvent","CustomEvent","header","styles","closeButton","errorContent","emptyContent","userContainer","userRole","userStats","postsContainer","isLoading","hasError","scrollTop","scrollHeight","clientHeight","orgId","isArray","timestamp","errorEl","loadMoreContent","widgetState","currentPanel","domMonitor","isInitializing","cleanupFunctions","convertOrgInfoToUser","info","convertUserPostToPost","userPost","initializeNowWidget","cleanupExistingWidget","widgetContainer","queueMicrotask","rootContainer","buttonContainer","injectStyles","buttonColor","buttonSize","createWidgetContainer","transition","opacity","shouldShowWidget","isInHeroSection","updateButtonVisibility","pointerEvents","scrollCleanup","passive","push","setupFadeEffect","createDOMMonitor","handleScroll","handleUrlChange","handleResize","handlePopState","handleClickOutside","event","removePanel","handleKeyDown","all","postsCount","convertedPosts","loadAndShowPanel","openPanel","containerShadowRoot","existingContainer","retryCount","isPinging","debounceTimeout","pingServer","clearTimeout","delay","pow","warn","isInitialized","init","scripts","getElementsByTagName","currentScript","i","script","getScriptAttributes","validatedTheme","validatedPosition","initialize","widgetButton","widgetPanel","teardown","index"],"mappings":";uFAwBA,MAAMA,EAAN,WAAAC,GACiCC,EAAAC,KAAA,QAAA,CACzBC,SAAS,EACTC,KAAM,KACNC,MAAO,GACPC,aAAa,EACbC,YAAa,OAGcN,EAAAC,KAAA,QAAA,MAE/BD,EAAAC,KAAA,YAAW,KAAO,IAAKA,KAAKM,UAE5BP,EAAAC,KAAA,wBAAwBO,IAChB,GAAAP,KAAKM,MAAMD,YACP,IACIL,KAAKM,MAAMD,YAAYG,YACvBR,KAAKM,MAAMD,YAAYG,WAAWC,YAAYT,KAAKM,MAAMD,mBAExDK,GACAV,KAAAW,YAAY,oCAAsCD,EAAK,CAGpEV,KAAKM,MAAMD,YAAcE,EACzBP,KAAKM,MAAMF,aAAc,CAAA,IAG7BL,EAAAC,KAAA,cAAa,KACTA,KAAKM,MAAQ,CACTL,SAAS,EACTC,KAAM,KACNC,MAAO,GACPC,aAAa,EACbC,YAAa,KACjB,IAGJN,EAAAC,KAAA,cAAcC,IACLD,KAAKM,MAAMF,cAChBJ,KAAKM,MAAML,QAAUA,EACrBD,KAAKY,WAAS,IAGlBb,EAAAC,KAAA,YAAYG,IACHH,KAAKM,MAAMF,cAChBJ,KAAKM,MAAMH,MAAQA,EACnBH,KAAKY,WAAS,IAGlBb,EAAAC,KAAA,WAAWE,IACFF,KAAKM,MAAMF,cAChBJ,KAAKM,MAAMJ,KAAOA,EAClBF,KAAKY,WAAS,IAGlBb,EAAAC,KAAA,YAAW,KACP,IAAKA,KAAKM,MAAMD,cAAgBL,KAAKM,MAAMF,YAAa,OAGxD,MAAMS,EAAmBb,KAAKM,MAAMD,YAAYS,cAAc,sBAC1DD,GACAA,EAAiBE,UAAUC,OAAO,UAAWhB,KAAKM,MAAML,SAIxDD,KAAKM,MAAMJ,MCuGO,EAACA,EAAmBe,KACxC,MAAAC,EAAWD,EAAMH,cAAc,yBACrC,GAAII,GAAYhB,EAAM,CACZ,MAAAiB,EAAaC,SAASC,cAAc,OAC1CF,EAAWG,UAAY,oBACZH,EAAAI,IAAMrB,EAAKsB,QAAU,GAChCL,EAAWM,IAAMvB,EAAKwB,KAEhB,MAAAC,EAAcP,SAASC,cAAc,OAC3CM,EAAYL,UAAY,0BACxBK,EAAYC,UAAY,kDACe1B,EAAK2B,aAAe3B,EAAKwB,yDAC3BxB,EAAK4B,KAAO,mBAGjDZ,EAASU,UAAY,GACrBV,EAASa,YAAYZ,GACrBD,EAASa,YAAYJ,EAAW,GDvH5BK,CAAehC,KAAKM,MAAMJ,KAAMF,KAAKM,MAAMD,aAI3CL,KAAKM,MAAMH,MAAM8B,OAAS,GC4HJ,EAAC9B,EAAec,KACxC,MAAAiB,EAAUjB,EAAMH,cAAc,uBAChCoB,IACAA,EAAQN,UAAY,sBACdzB,EAAAgC,SAAgBC,IACZ,MAAAC,EAASjB,SAASC,cAAc,OACtCgB,EAAOf,UAAY,kBACZe,EAAAT,UAAY,MAAMQ,EAAKF,cAC9BA,EAAQH,YAAYM,EAAM,IAC7B,EDpIGC,CAAmBtC,KAAKM,MAAMH,MAAOH,KAAKM,MAAMD,YAAW,IAInEN,EAAAC,KAAA,eAAeuC,IACXvC,KAAKU,MAAQ6B,EACLC,QAAA9B,MAAM,gBAAiB6B,EAAO,IAG1CxC,EAAAC,KAAA,YAAW,IACAA,KAAKU,QAGhBX,EAAAC,KAAA,cAAa,KACTA,KAAKU,MAAQ,IAAA,GACjB,EAGJ,MAgBa+B,EAhBa,MAChB,MAAAC,EAAQ,IAAI7C,EACX,MAAA,CACH8C,SAAUD,EAAMC,SAChBC,qBAAsBF,EAAME,qBAC5BC,WAAYH,EAAMG,WAClBC,WAAYJ,EAAMI,WAClBC,SAAUL,EAAMK,SAChBC,QAASN,EAAMM,QACfpC,SAAU8B,EAAM9B,SAChBD,YAAa+B,EAAM/B,YACnBsC,SAAUP,EAAMO,SAChBC,WAAYR,EAAMQ,WACtB,EAGuBC,GEtE3B,SAASC,EACLC,EACAC,EACAC,EACAC,WAGAH,EAAUtC,UAAUC,OAAO,wBAAmC,SAAVsC,GAGnC,SAAbC,GACUF,EAAAtC,UAAU0C,IAAI,mBACdJ,EAAAtC,UAAU2C,OAAO,sBAEjBL,EAAAtC,UAAU0C,IAAI,oBACdJ,EAAAtC,UAAU2C,OAAO,oBAIzB,MAAAC,EAAQvC,SAASC,cAAc,SAC/BuC,EAAUC,OAAOC,QAAQN,GAC1BO,QAAO,EAAEC,EAAGC,UAAqB,IAAVA,IACvBC,KAAI,EAAEC,EAAKF,KAAW,GAAGE,MAAQF,OACjCG,KAAK,MAEVT,EAAMU,YAAc,kCAEVT,qBAKV,MAAMU,EAAiB,OAAAC,EAAAlB,EAAUmB,iBAAV,EAAAD,EAAsBE,iBAAiB,gCAC9D,MAAAH,GAAAA,EAAgBnC,SAAQuC,GAAMA,EAAGhB,WAG3BC,EAAAgB,aAAa,wBAAyB,QAClC,OAAAC,EAAAvB,EAAAmB,eAAYzC,YAAY4B,GAElCnB,QAAQqC,IAAI,4CAA6C,CACrDC,GAAIzB,EAAUyB,GACdxB,QACAC,WACAwB,UAAWvB,GAEnB,CCPgB,SAAAwB,EACZzE,EACA0E,GAEAC,uBAAsB,KACXrB,OAAAsB,OAAO5E,EAAQoD,MAAOsB,EAAY,GAEjD,CC5FM,MAEAG,EAF2C,IAAIC,QAkCrD,SAASC,EACLC,EACAC,EACAC,EACAC,GAEM,MAAAC,EAAQP,EAASQ,IAAIL,GACtBI,IAGEJ,EAAAM,oBAAoBL,EAAMC,EAA0BC,GAGrDC,EAAAxD,SAAS2D,IAEPA,EAAKN,OAASA,GACdM,EAAKL,UAAYA,GACjBK,EAAKJ,UAAYA,GAEjBC,EAAMI,OAAOD,EAAI,IAKN,IAAfH,EAAMK,MACNZ,EAASW,OAAOR,GAExB,CAKA,SAASU,EAAmBV,GAClB,MAAAI,EAAQP,EAASQ,IAAIL,GACtBI,IAECA,EAAAxD,SAAS2D,IACJP,EAAAM,oBACHC,EAAKN,KACLM,EAAKL,QACLK,EAAKJ,QACT,IAGJN,EAASW,OAAOR,GACpB,CA4BO,MAAMW,EAAe,CACxBC,YArGJ,SACIZ,EACAC,EACAC,EACAC,SAGKN,EAASgB,IAAIb,IACdH,EAASiB,IAAId,EAAY,IAAAe,KAG7B,MAAMC,EAAe,CACjBf,OACAC,UACAC,WAOJ,OAJA,OAAAnB,EAAAa,EAASQ,IAAIL,KAAbhB,EAAsBd,IAAI8C,GACnBhB,EAAAiB,iBAAiBhB,EAAMC,EAA0BC,GAGjD,IAAMJ,EAAeC,EAAQC,EAAMC,EAASC,EACvD,EAgFIJ,iBACAW,qBACAQ,QA3BJ,WAEU,MAAAC,MAAcJ,IAGpB,IAAA,MAAWf,KAAUoB,MAAMC,KAAKxF,SAASqD,iBAAiB,MAClDW,EAASgB,IAAIb,IACbmB,EAAQjD,IAAI8B,GAKpBmB,EAAQvE,QAAQ8D,EACpB,EAeIY,iBAVJ,SAA0BtB,SACtB,OAAO,OAAAhB,EAASa,EAAAQ,IAAIL,aAASS,OAAQ,CACzC,GCpGO,MAAMc,EAOT,WAAAhH,CAAYuD,EAAwBqC,EAA6B,IANzD3F,EAAAC,KAAA,YACAD,EAAAC,KAAA,aACAD,EAAAC,KAAA,WACcD,EAAAC,KAAA,eAAA,GACdD,EAAAC,KAAA,mBAGJA,KAAKqD,UAAYA,EACjBrD,KAAK0F,QAAUA,EACV1F,KAAA+G,oBAAsBC,IAC3BhH,KAAKiH,SAAW,KAChBjH,KAAKkH,eAAc,CAGf,aAAAA,GACJlH,KAAKiH,SAAW,IAAIE,kBAAkBC,YAClCpH,KAAKqH,gBAAgBD,GAGhBhG,SAASkG,SAAStH,KAAKqD,aACxBb,QAAQqC,IAAI,sCACZ,OAAAD,GAAAL,EAAAvE,KAAK0F,SAAQ6B,WAAb3C,EAAA4C,KAAAjD,GAGAW,uBAAsB,aACb9D,SAASkG,SAAStH,KAAKqD,aACfjC,SAAAqG,KAAK1F,YAAY/B,KAAKqD,WAC/Bb,QAAQqC,IAAI,sCACZ,OAAAD,GAAAL,EAAAvE,KAAK0F,SAAQgC,aAAb9C,EAAA4C,KAAAjD,GAA0B,KAMtC,MAAMoD,EAAqBP,EAAUrD,WAEX,eAAlB6D,EAASpC,MACToC,EAASrC,SAAWvF,KAAKqD,YAG7BsE,EAAmB1F,OAAS,GAAKjC,KAAK0F,QAAQmC,mBACzC7H,KAAA0F,QAAQmC,kBAAkBF,EAAkB,GAExD,CAME,cAAAG,IACC9H,KAAK+H,aAAgB/H,KAAKiH,WAEzBjH,KAAAiH,SAASe,QAAQ5G,SAASqG,KAAM,CACjCQ,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,gBAAiB,CAAC,QAAS,QAAS,QAGxCpI,KAAK+H,aAAc,EACnBvF,QAAQqC,IAAI,iCAA+B,CAMxC,aAAAwD,GACErI,KAAK+H,aAAgB/H,KAAKiH,WAE/BjH,KAAKiH,SAASqB,aACdtI,KAAK+H,aAAc,EACnBvF,QAAQqC,IAAI,iCAA+B,CAMxC,eAAA0D,CAAgBC,GACnBxI,KAAKqD,UAAYmF,EAGbxI,KAAK+H,cACL/H,KAAKqI,gBACLrI,KAAK8H,iBACT,CAMG,OAAAW,GACHzI,KAAKqI,gBACLrI,KAAKiH,SAAW,IAAA,CAMb,OAAAe,CAAQzC,EAAcG,GACpB1F,KAAKiH,UACLjH,KAAAiH,SAASe,QAAQzC,EAAQG,EAAO,CAMlC,QAAA6B,CAAShH,EAAemI,GACtB1I,KAAA+G,gBAAgBV,IAAI9F,EAASmI,EAAQ,CAMvC,UAAAJ,GACEtI,KAAKiH,WACVjH,KAAKiH,SAASqB,aACdtI,KAAK+G,gBAAgB4B,QAAM,CAGvB,eAAAtB,CAAgBD,GACpB,IAAA,MAAWQ,KAAYR,EACnB,GAAsB,cAAlBQ,EAASpC,MAAwBoC,EAASgB,aAAa3G,OAAS,EACrD,IAAA,MAAA4G,KAAQjB,EAASgB,aAAc,CACtC,MAAMF,EAAW1I,KAAK+G,gBAAgBnB,IAAIiD,GACtCH,IACSA,IACJ1I,KAAA+G,gBAAgBhB,OAAO8C,GAChC,CAGZ,EC4LQ,SAAAC,EAAgBC,EAAuB,IAGrD,GAFQvG,QAAAqC,IAAI,2CAA4CkE,GChLnD,iBACG,MAAA1F,EAAYjC,SAAS4H,eAAe,+BACpCC,EAAS,OAAA1E,EAAA,MAAAlB,OAAA,EAAAA,EAAWmB,iBAAX,EAAAD,EAAuBzD,cAAc,sBAQ7C,OANP0B,QAAQqC,IAAI,uCAAwC,CAChDxB,YAAaA,EACb4F,SAAUA,EACVzE,cAAyB,MAAXnB,OAAW,EAAAA,EAAAmB,iBAGnBnB,IAAa4F,EAC3B,CDuKMC,GAAiB,CACnB1G,QAAQqC,IAAI,4CAEL,OADUzD,SAAS4H,eAAe,8BAClC,CAGT,MAAMG,ECjQD,WACH3G,QAAQqC,IAAI,6CAEN,MAAAxB,EAAYjC,SAASC,cAAc,OACzCgC,EAAUyB,GAAK,8BAEf,MAAMN,EAAanB,EAAU+F,aAAa,CAAEC,KAAM,SAG5C1F,EAAQvC,SAASC,cAAc,SACrCsC,EAAMU,YAvFW,w0DAwFjBG,EAAWzC,YAAY4B,GAGjB,MAAAsF,EAAS7H,SAASC,cAAc,UACtC4H,EAAO3H,UAAY,oBACZ2H,EAAAtE,aAAa,aAAc,mBAG5B,MAAAzC,EAAUd,SAASC,cAAc,OACvCa,EAAQZ,UAAY,iBAGd,MAAAgI,EAAgBlI,SAASC,cAAc,OAC7CiI,EAAchI,UAAY,iBAC1BgI,EAAcjF,YAAc,MAGtB,MAAAkF,EAAYnI,SAASC,cAAc,OAsBzC,OArBAkI,EAAUjI,UAAY,aACtBiI,EAAU3H,UAAY,0QAOtBM,EAAQH,YAAYuH,GACpBpH,EAAQH,YAAYwH,GACpBN,EAAOlH,YAAYG,GACnBsC,EAAWzC,YAAYkH,GAEvBzG,QAAQqC,IAAI,yCAA0C,CAClDxB,YACA4F,SACA/G,UACAoH,gBACAC,cAGG,CAAElG,YAAW4F,SAAQ/G,UAASoH,gBAAeC,YACxD,CD8MmBC,GAIjB,OChNc,SAAkBL,EAA0BJ,GAChDvG,QAAAqC,IAAI,+CAAgDkE,GAEtD,MAAA1F,UAAEA,EAAW4F,OAAAA,GAAWE,EAE1BJ,EAAO/C,MACP3C,EAAUM,MAAM8F,YAAY,gBAAiB,GAAGV,EAAO/C,UAGvD+C,EAAOW,OACPrG,EAAUM,MAAM8F,YAAY,iBAAkBV,EAAOW,OAGjC,SAApBX,EAAOxF,UACA0F,EAAAlI,UAAU0C,IAAI,0BAGzBjB,QAAQqC,IAAI,6CAChB,CD2LE8E,CAAkBR,EAAUJ,GAE5BvG,QAAQqC,IAAI,6CACLsE,EAAS9F,SAClB,CE7VO,SAASuG,EAAcC,GACpB,MAAAC,MAAUC,KACVC,EAAgBC,KAAKC,OAAOJ,EAAIK,UAAYN,EAAKM,WAAa,KAE9DC,EAAY,CACdC,KAAM,QACNC,MAAO,OACPC,KAAM,OACNC,IAAK,MACLC,KAAM,KACNC,OAAQ,GACRC,OAAQ,GAGZ,IAAA,MAAYC,EAAMC,KAAYhH,OAAOC,QAAQsG,GAAY,CACrD,MAAMU,EAAWb,KAAKC,MAAMF,EAAgBa,GAE5C,GAAIC,GAAY,EACL,OAAa,IAAbA,EAAiB,KAAKF,QAAa,GAAGE,KAAYF,QAC7D,CAGG,MAAA,UACX,gEChBMG,EAA8B,oBAAXC,UAA4BA,OAAO5J,SAGtD6J,EAAa9G,UAEf,GAAI4G,EAAW,CAEL,MAAAG,EAAiB,OAAA3G,EAAeyG,OAAAG,cAAU,EAAA5G,EAAAJ,GAChD,GAAI+G,EAAsB,OAAAA,EAGpB,MAAAE,EAAcC,EAAgBlH,GACpC,GAAIiH,EAAoB,OAAAA,CAAA,CAErB,EAiCEE,EAPoC,CAC7CC,SArBkB,MAEZ,MAAAC,EAAoBP,EAAU,YACpC,GAAIO,EACO,OAAAA,EAQX,MAJwC,gBAA1BP,EAAU,aACVF,GAA0C,cAA7BC,OAAOS,SAASC,SAIhC,wBAIJ,sBAAA,EAIGC,GACVC,WAAYb,EACZc,eAA0C,gBAA1BZ,EAAU,aACVF,GAA0C,cAA7BC,OAAOS,SAASC,UAMpCI,EAAgB,CACzBC,UAAW,GAAGT,EAAYC,8BAC1BS,WAAY,GAAGV,EAAYC,oCAC3BU,cAAe,GAAGX,EAAYC,uBAI9BD,EAAYO,gBACJrJ,QAAAqC,IAAI,gBAAiByG,EAAYC,UCjEtC,MAAMW,EAAiB,CAC1BC,KAAM,CACFC,eAAgB,CAAC,KACjBC,eAAgB,CAAC,MAAO,OAAQ,WAChCC,eAAgB,CACZ,eACA,gBACA,mBACA,iBAEJC,eAAgB,GAChBC,aAAa,EACbC,OAAQ,OAEZC,QAAS,CACL,4BAA6B,sCAC7B,yBAA0B,UAC1B,kBAAmB,OACnB,mBAAoB,gBACpB,kBAAmB,kCACnB,0BAA2B,CACvB,qBACA,kDACA,mCACA,8BACA,4BACA,kBACA,oBACA,mBACA,oBACFtI,KAAK,QCTfuI,eAAeC,EAAKC,GAChB,OAAO,IAAIC,SAAQC,GAAWC,WAAWD,EAASF,IACtD,CAEAF,eAAeM,EACXC,EACAxH,EACAyH,EAVgB,GAYZ,IACI7B,EAAYO,gBACZrJ,QAAQqC,IAAI,gBAAgBqI,IAAYxH,GAG5C,MAAM0H,EDAHlB,EAAeQ,QCCZW,QAAiBC,MAAMJ,EAAU,IAChCxH,EACHgH,QAAS,IACFU,KACA1H,EAAQgH,QACXa,OAAU,mBACV,mBAAoB,QACpB,gBAAiBjC,EAAYO,eAAiB,cAAgB,gBAIlE,IAACwB,EAASG,GAAI,CACd,GAAwB,MAApBH,EAASI,QAAkBN,EAAU,EAErC,aADMP,EA9BF,KA+BGK,EAAeC,EAAUxH,EAASyH,EAAU,GAGvD,MAAM,IAAIO,MAAM,uBAAuBL,EAASI,SAAQ,CAGtD,MAAAE,QAAaN,EAASO,OAMrB,OAJHtC,EAAYO,gBACZrJ,QAAQqC,IAAI,iBAAiBqI,IAAYS,GAGtC,CACHE,SAAS,EACTF,cAECjN,GACL,OAAIyM,EAAU,SACJP,EAjDE,KAkDDK,EAAeC,EAAUxH,EAASyH,EAAU,KAG/C3K,QAAA9B,MAAM,sBAAuBA,GAC9B,CACHmN,SAAS,EACTnN,MAAOA,aAAiBgN,MAAQhN,EAAM6B,QAAU,0BACpD,CAER,CAEAoK,eAAsBmB,EAAcC,GAC5B,IAACzC,EAAYM,WACP,MAAA,IAAI8B,MAAM,2DAGpB,MAAML,QAAiBJ,EACnBnB,EAAcC,UAAUiC,QAAQ,WAAY,MAC5C,CACIC,OAAQ,MACRvB,QAAS,CACLwB,cAAiB,UAAUH,OAKnC,GAAAV,EAASQ,SAAWR,EAASM,KAAM,CAC7B,MAAAzN,KAAEA,GAASmN,EAASM,KACnB,MAAA,CACH7I,GAAI5E,EAAK4E,GACTpD,KAAMxB,EAAKwB,KACXyM,MAAOjO,EAAKiO,MACZC,cAAelO,EAAKkO,cACpB5M,OAAQtB,EAAKsB,OACbiM,OAAQvN,EAAKuN,OACb5L,YAAa3B,EAAK2B,YAClBC,IAAK5B,EAAK4B,IACVuM,UAAWnO,EAAKmO,UACpB,CAGJ,MAAM,IAAIX,MAAML,EAAS3M,OAAS,4BACtC,CAEAiM,eAAsB2B,EAAeP,GAC7B,IAACzC,EAAYM,WACP,MAAA,IAAI8B,MAAM,2DAGpB,MAAML,QAAiBJ,EACnBnB,EAAcE,WAAWgC,QAAQ,WAAY,MAC7C,CACIC,OAAQ,MACRvB,QAAS,CACLwB,cAAiB,UAAUH,OAKnC,GAAAV,EAASQ,SAAWR,EAASM,KAC7B,OAAON,EAASM,KAAKxN,MAGzB,MAAM,IAAIuN,MAAML,EAAS3M,OAAS,6BACtC,CCzHA,SAAS6N,EAAiBC,EAAejM,EAAiBiD,EAA0B,SAC5E,MAAAnC,EAAYjC,SAASC,cAAc,OACzCgC,EAAU/B,UAAY,yBAEhB,MAAAmN,EAAOrN,SAASC,cAAc,OACpCoN,EAAKnN,UAAY,wBAEX,MAAAoN,EAAmB,UAATlJ,EACV,+NACA,sQAENiJ,EAAK7M,UAAY8M,EAEX,MAAAC,EAAUvN,SAASC,cAAc,MACvCsN,EAAQrN,UAAY,yBACpBqN,EAAQtK,YAAcmK,EAEhB,MAAAI,EAAOxN,SAASC,cAAc,KAQ7B,OAPPuN,EAAKtN,UAAY,2BACjBsN,EAAKvK,YAAc9B,EAEnBc,EAAUtB,YAAY0M,GACtBpL,EAAUtB,YAAY4M,GACtBtL,EAAUtB,YAAY6M,GAEfvL,CACT,CAEM,MAwCAwL,EAAqBzM,cACnB,MAAAC,EAASjB,SAASC,cAAc,OAC/BgB,EAAAtB,UAAU0C,IAAI,mBAEf,MAAAqL,EAAW1N,SAASC,cAAc,KAC/ByN,EAAA/N,UAAU0C,IAAI,wBACvB,MAAMsL,EAAUnF,EAAc,IAAIG,KAAK3H,EAAK4M,YAC5CF,EAASzK,YAAc0K,EAEjB,MAAAE,EAAc7N,SAASC,cAAc,KAC/B4N,EAAAlO,UAAU0C,IAAI,2BAC1BwL,EAAY5K,YAAcjC,EAAKF,QAEzB,MAAAgN,EAAY9N,SAASC,cAAc,OAC/B6N,EAAAnO,UAAU0C,IAAI,yBAElB,MAAA0L,EAAQ/N,SAASC,cAAc,QAC/B8N,EAAApO,UAAU0C,IAAI,wBACpB0L,EAAMvN,UAAY,6PAET,OAAA2C,EAAKnC,EAAAgN,aAAQ,EAAA7K,EAAA4K,QAAS,IAEzB,MAAAE,EAAWjO,SAASC,cAAc,QAOpC,GANKgO,EAAAtO,UAAU0C,IAAI,wBACvB4L,EAASzN,UAAY,kUAEZ,OAAAgD,EAAKxC,EAAAgN,aAAQ,EAAAxK,EAAAyK,WAAY,IAG9B,OAAAC,EAAAlN,EAAKiN,eAAL,EAAAC,EAAerN,OAAQ,CACnB,MAAAsN,EAAoBnO,SAASC,cAAc,OAC/BkO,EAAAxO,UAAU0C,IAAI,iCAChC8L,EAAkB5L,MAAM6L,QAAU,OAE5B,MAAAC,EA1EiB,CAACJ,IACpB,MAAAhM,EAAYjC,SAASC,cAAc,OAoClC,OAnCGgC,EAAAtC,UAAU0C,IAAI,uBAEf4L,EAAAlN,SAAmBuN,IACpB,MAAAC,EAAYvO,SAASC,cAAc,OAC/BsO,EAAA5O,UAAU0C,IAAI,sBAElB,MAAAmM,EAAgBxO,SAASC,cAAc,OAC/BuO,EAAA7O,UAAU0C,IAAI,6BAEtB,MAAAjC,EAASJ,SAASC,cAAc,OAC/BG,EAAAD,IAAMmO,EAAQxP,KAAK2P,MACnBrO,EAAAC,IAAMiO,EAAQxP,KAAKwB,KACnBF,EAAAT,UAAU0C,IAAI,6BAEf,MAAAqM,EAAW1O,SAASC,cAAc,QAC/ByO,EAAA/O,UAAU0C,IAAI,+BACdqM,EAAAzL,YAAcqL,EAAQxP,KAAKwB,KAE9B,MAAAqN,EAAU3N,SAASC,cAAc,QAC/B0N,EAAAhO,UAAU0C,IAAI,2BACtBsL,EAAQ1K,YAAcuF,EAAc,IAAIG,KAAK2F,EAAQV,YAErDY,EAAc7N,YAAYP,GAC1BoO,EAAc7N,YAAY+N,GAC1BF,EAAc7N,YAAYgN,GAEpB,MAAA7M,EAAUd,SAASC,cAAc,KAC/Ba,EAAAnB,UAAU0C,IAAI,8BACtBvB,EAAQmC,YAAcqL,EAAQxN,QAE9ByN,EAAU5N,YAAY6N,GACtBD,EAAU5N,YAAYG,GACtBmB,EAAUtB,YAAY4N,EAAS,IAG1BtM,CAAA,EAqCgB0M,CAAmB3N,EAAKiN,UAC7CE,EAAkBxN,YAAY0N,GAErBJ,EAAA7I,iBAAiB,SAAS,KAC3B,MAAAwJ,EAAgD,UAApCT,EAAkB5L,MAAM6L,QACxBD,EAAA5L,MAAM6L,QAAUQ,EAAY,OAAS,QAC9CX,EAAAtO,UAAUC,OAAO,SAAQ,IAGpCqB,EAAON,YAAYwN,EAAiB,CAUtC,GAPAL,EAAUnN,YAAYoN,GACtBD,EAAUnN,YAAYsN,GAEtBhN,EAAON,YAAY+M,GACnBzM,EAAON,YAAYkN,GACnB5M,EAAON,YAAYmN,GAEf9M,EAAK6N,aAAe7N,EAAK6N,YAAYhO,OAAS,EAAG,CAC7C,MAAAiO,EAAkB9N,EAAK6N,YAAY,GACrC,GAAyB,UAAzBC,EAAgB1K,KAAkB,CAC9B,MAAA2K,EAAY/O,SAASC,cAAc,OAC/B8O,EAAApP,UAAU0C,IAAI,yBACxB0M,EAAUxM,MAAMyM,gBAAkB,OAAOF,EAAgBG,OACzDhO,EAAON,YAAYoO,EAAS,CAC9B,CAGK,OAAA9N,CAAA,EAGF,SAASiO,EAAevH,GACvB,MAAA5I,MAAEA,EAAOD,KAAAA,GAAS6I,EAElB9H,EAAQG,SAASC,cAAc,OACrCJ,EAAMK,UAAY,mBAClBL,EAAM0D,aAAa,gBAAiBvD,SAASqG,KAAK8I,aAAa,yBAA2B,SAGpF,MAAAC,EAAWpP,SAASC,cAAc,OACxCmP,EAASlP,UAAY,sBACZkP,EAAAhK,iBAAiB,SAAS,KACjCvF,EAAMwP,cAAc,IAAIC,YAAY,SAAQ,IAIxC,MAAAC,EAASvP,SAASC,cAAc,OACtCsP,EAAOrP,UAAY,eACnBqP,EAAO/O,UAAY,6KAQb,MAAAM,EAAUd,SAASC,cAAc,OACvCa,EAAQZ,UAAY,gBAGd,MAAAsP,EAASxP,SAASC,cAAc,SACtCuP,EAAOvM,YAAc,m1DAwFrBpD,EAAMc,YAAY6O,GAClB3P,EAAMc,YAAYyO,GAClBvP,EAAMc,YAAY4O,GAClB1P,EAAMc,YAAYG,GAGZ,MAAA2O,EAAcF,EAAO7P,cAAc,iBAQzC,GAPI+P,GACUA,EAAArK,iBAAiB,SAAS,KACpCvF,EAAMwP,cAAc,IAAIC,YAAY,SAAQ,KAK3CxQ,EAAM,CACT,MAAM4Q,EAAevC,EACnB,iBACA,mHACA,SAGK,OADPrM,EAAQH,YAAY+O,GACb7P,CAAA,CAIL,GAAiB,IAAjBd,EAAM8B,OAAc,CACtB,MAAM8O,EAAexC,EACnB,eACA,2CACA,SAGK,OADPrM,EAAQH,YAAYgP,GACb9P,CAAA,CAIH,MAAAC,EAAWE,SAASC,cAAc,OAC/BH,EAAAH,UAAU0C,IAAI,wBAGjB,MAAAuN,EAAgB5P,SAASC,cAAc,OAC/B2P,EAAAjQ,UAAU0C,IAAI,6BAEtB,MAAAtC,EAAaC,SAASC,cAAc,OAC1CF,EAAWG,UAAY,yBACZH,EAAAI,IAAMrB,EAAKsB,QAAU,GAChCL,EAAWM,IAAMvB,EAAKwB,KAEhB,MAAAC,EAAcP,SAASC,cAAc,OAC/BM,EAAAZ,UAAU0C,IAAI,2BAEpB,MAAAqM,EAAW1O,SAASC,cAAc,MAC/ByO,EAAA/O,UAAU0C,IAAI,wBACvBqM,EAASzL,YAAcnE,EAAK2B,aAAe3B,EAAKwB,MAAQ,OAElD,MAAAuP,EAAW7P,SAASC,cAAc,KAC/B4P,EAAAlQ,UAAU0C,IAAI,wBACdwN,EAAA5M,YAAcnE,EAAK4B,KAAO,GAE7B,MAAAoP,EAAY9P,SAASC,cAAc,KAC/B6P,EAAAnQ,UAAU0C,IAAI,yBACxByN,EAAU7M,YAAc,GAAGnE,EAAKmO,WAAa,cAE7C1M,EAAYI,YAAY+N,GACxBnO,EAAYI,YAAYkP,GACxBtP,EAAYI,YAAYmP,GAExBF,EAAcjP,YAAYZ,GAC1B6P,EAAcjP,YAAYJ,GAC1BT,EAASa,YAAYiP,GACrB9O,EAAQH,YAAYb,GAGd,MAAAiQ,EAAiB/P,SAASC,cAAc,OAC/B8P,EAAApQ,UAAU0C,IAAI,oBAEvBtD,EAAAgC,SAAgBC,IACd,MAAAC,EAASwM,EAAkBzM,GACjC+O,EAAepP,YAAYM,EAAM,IAGnCH,EAAQH,YAAYoP,GAGpB,IAAIC,GAAY,EAEZC,GAAW,EA6DR,OATCnP,EAAAsE,iBAAiB,UAAUmG,UACjC,GAAIyE,GAAaC,EAAU,OAE3B,MAAMC,UAAEA,EAAAC,aAAWA,EAAcC,aAAAA,GAAiBtP,EAC9CoP,EAAYE,GAAgBD,EAAe,UAtDzB5E,WACVyE,GAAA,EACDC,GAAA,EAEP,IACF,MAAMhE,QAAiBiB,EAAevF,EAAO0I,QAC7C,IAAKpE,IAAa1G,MAAM+K,QAAQrE,GACxB,MAAA,IAAIK,MAAM,2BAGJL,EAASnJ,KAAa9B,IAAA,CAClC0C,GAAI1C,EAAK0C,GACT5C,QAASE,EAAKF,QACdyP,UAAWvP,EAAKuP,UAChB3C,UAAW5M,EAAKuP,UAChB1B,YAAa7N,EAAK6N,aAAe,GACjCZ,SAAUjN,EAAKiN,UAAY,GAC3BnP,KAAMkC,EAAKlC,MAAQ,CACjB4E,GAAI,GACJpD,KAAM,GACNyM,MAAO,GACPC,eAAe,EACf5M,OAAQ,GACRiM,OAAQ,GACRY,UAAW,GAEbe,OAAQ,CACND,MAAO,EACPE,UAAWjN,EAAKiN,UAAY,IAAIpN,YAI9BE,SAAgBC,IACd,MAAAC,EAASwM,EAAkBzM,GACjC+O,EAAepP,YAAYM,EAAM,UAG5B3B,GACI2Q,GAAA,EACX,MAAMO,EAAUrD,EACd,sBACA7N,aAAiBgN,MAAQhN,EAAM6B,QAAU,4BACzC,SAEFL,EAAQH,YAAY6P,EAAO,CAC3B,QACYR,GAAA,CAAA,GASNS,EAAgB,IAInB5Q,CACT,CCxYA,MAAM6Q,EAA2B,CAC7BC,aAAc,KACdC,WAAY,KACZC,gBAAgB,EAChBC,iBAAkB,IAGhBC,EAAyBC,IAA0B,CACrDtN,GAAIsN,EAAKtN,GACTpD,KAAM0Q,EAAK1Q,KACXyM,MAAOiE,EAAKjE,OAAS,GACrBC,cAAegE,EAAKhE,gBAAiB,EACrC5M,OAAQ4Q,EAAK5Q,OACbiM,OAAQ2E,EAAK3E,OACb5L,YAAauQ,EAAKvQ,YAClBC,IAAKsQ,EAAKtQ,IACVuM,UAAW+D,EAAK/D,WAAa,IAG3BgE,EAAyBC,UAA8B,MAAA,CACzDxN,GAAIwN,EAASxN,GACb5C,QAASoQ,EAASpQ,QAClBhC,KAAMoS,EAASpS,KAAOiS,EAAsBG,EAASpS,MAAQ,CACzD4E,GAAI,GACJpD,KAAM,GACNyM,MAAO,GACPC,eAAe,EACf5M,OAAQ,GACRiM,OAAQ,GACRY,UAAW,GAEfW,UAAWsD,EAASX,UACpBA,UAAWW,EAASX,UACpB1B,YAAaqC,EAASrC,aAAe,GACrCZ,SAAUiD,EAASjD,UAAY,GAC/BD,OAAQ,CACJD,MAAO,EACPE,UAAU,OAAA9K,EAAA+N,EAASjD,eAAT,EAAA9K,EAAmBtC,SAAU,GAE/C,EAEA0K,eAAsB4F,EAAoBxJ,SAClC,GAACuC,EAAYM,WAKjB,GAAIkG,EAAYG,eACZzP,QAAQqC,IAAI,kDAIZ,IACAiN,EAAYG,gBAAiB,QACvBO,IAEA,MAAAC,QAmQd9F,eAAqC5D,GAC3B,MAAA1F,QV5Q0ByB,EU4QY,kBV3QrC,IAAIgI,SAASC,IAChB7H,uBAAsB,KAClB,IAAI7B,EAAYjC,SAASN,cAAc,IAAIgE,KAEtCzB,EAeD0J,EAAQ1J,IAdIA,EAAAjC,SAASC,cAAc,OACnCgC,EAAUyB,GAAKA,EAGVzB,EAAUmB,YACXnB,EAAU+F,aAAa,CAAEC,KAAM,SAInCqJ,gBAAe,KACFtR,SAAAqG,KAAK1F,YAAYsB,GAC1B0J,EAAQ1J,EAAS,IAGJ,GAExB,KAtBF,IAA6ByB,EU+QhC,GAAIzB,EAAUmB,WAAY,CAChB,MAAAb,EAAQvC,SAASC,cAAc,SACrCsC,EAAMU,YAAc,mbAiBVhB,EAAAmB,WAAWzC,YAAY4B,EAAK,CAenC,OX9UJ,SACHL,EACAC,EACAC,EAAiC,CAAA,GAG3B,MAAAmP,EAAgBvR,SAAS4H,eAAe,0BAC1C2J,WAAenO,cACfhC,QAAQqC,IAAI,kDACSzB,EAAAuP,EAAerP,EAAOC,EAAUC,IAInD,MAAAoP,EAAkBxR,SAAS4H,eAAe,sCAC5C4J,WAAiBpO,cACjBhC,QAAQqC,IAAI,oDACSzB,EAAAwP,EAAiBtP,EAAOC,EAAUC,GAE/D,CWgTIqP,CACI9J,EAAOzF,OAAS,QAChByF,EAAOxF,UAAY,QACnB,CACI,yBAA0BwF,EAAO+J,YACjC,2BAA4B/J,EAAOgK,WAAa,GAAGhK,EAAOgK,oBAAiB,EAC3E,mBAAoB,aACpB,kBAAmB,aACnB,oBAAqB,eAItB1P,CACX,CA1SsC2P,CAAsBjK,GACpDtG,EAAYG,qBAAqB6P,GAGjC,MAAMxJ,EAASH,EAAgB,CAC3B9C,KAAM+C,EAAOgK,WACbrJ,MAAOX,EAAO+J,YACdvP,SAAUwF,EAAOxF,SACjBD,MAAOyF,EAAOzF,QAIlBd,QAAQqC,IAAI,yDACR4N,EAAgBjO,WACAiO,EAAAjO,WAAWzC,YAAYkH,IAEvCzG,QAAQ9B,MAAM,+CACd+R,EAAgB1Q,YAAYkH,IA2RxC,SAAyBA,GACrBjE,EAAgBiE,EAAQ,CACpBgK,WAAY,4BACZC,QAASC,KAAsBC,IAAoB,IAAM,IACzD5D,QAAS2D,IAAqB,QAAU,SAG5C,MAAME,EAAyB,KACvB,IAACF,IAMD,YALAnO,EAAgBiE,EAAQ,CACpBuG,QAAS,OACT0D,QAAS,IACTI,cAAe,SAKvB,MAAMtD,EAAYoD,IAClBpO,EAAgBiE,EAAQ,CACpBuG,QAAS,QACT0D,QAASlD,EAAY,IAAM,IAC3BsD,cAAetD,EAAY,OAAS,QACvC,EAGkBqD,IAEvB,MAAME,EAAgBrN,EAAaC,YAC/B6E,OACA,UACA,IAAM9F,sBAAsBmO,IAC5B,CAAEG,SAAS,IAGH1B,EAAAI,iBAAiBuB,KAAKF,EACtC,CA3TQG,CAAgBzK,GAGJ6I,EAAAE,WRuDb,SAA0B3O,EAAwBqC,EAA6B,IAC3E,OAAA,IAAIoB,EAAWzD,EAAWqC,EACrC,CQzDiCiO,CAAiBlB,EAAiB,CACvDxK,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,gBAAiB,CAAC,QAAS,WAI/B,MAAMwL,EAAe,KACjBC,EAAgB5K,EAAM,EAGpB6K,EAAe,KACjBD,EAAgB5K,EAAM,EAGpB8K,EAAiB,KACnBF,EAAgB5K,EAAM,EAGpB+K,EAAsBC,IACxB,MAAM1O,EAAS0O,EAAM1O,OAChB0D,EAAO3B,SAAS/B,KAAWuM,EAAYC,cAAiBD,EAAYC,aAAazK,SAAS/B,IAC/E2O,GAAA,EAIdC,EAAiBF,IACD,WAAdA,EAAM9P,KACM+P,GAAA,EAKpBjL,EAAOzC,iBAAiB,SAAS,IAqC1BmG,eAAU5D,EAAsB0J,GAC3CjQ,QAAQqC,IAAI,gCACRiN,EAAYC,cACZvP,QAAQqC,IAAI,+CACNqP,MAEN1R,QAAQqC,IAAI,kDAKL8H,eAAiB5D,EAAsB0J,GAC9C,IACAjQ,QAAQqC,IAAI,qCACZpC,EAAYK,YAAW,SACjBoR,IAEN,MAAOhT,EAAUf,SAAe2M,QAAQsH,IAAI,CACxCtG,EAAc/E,EAAOgF,OACrBO,EAAevF,EAAOgF,SAG1BvL,QAAQqC,IAAI,2BAA4B,CAAE3D,WAAUmT,WAAYlU,EAAM8B,SAEhE,MAAA/B,EAAOiS,EAAsBjR,GACnCuB,EAAYO,QAAQ9C,GACd,MAAAoU,EAAiBnU,EAAM+D,IAAImO,GAW7B,GAVJ5P,EAAYM,SAASuR,GAErB9R,QAAQqC,IAAI,iCACZiN,EAAYC,aAAezB,EAAe,CACtCpQ,OACAC,MAAOmU,EACP7C,OAAQvR,EAAK4E,GACbiJ,MAAOhF,EAAOgF,QAGd+D,EAAYC,cAAgBU,EAAgBjO,WAAY,CACxDhC,QAAQqC,IAAI,iDAGI4N,EAAAjO,WAAWzC,YAAY+P,EAAYC,cAG7C,MAAApO,EAAQvC,SAASC,cAAc,SACrCsC,EAAMU,YAAc,u6CAwCJoO,EAAAjO,WAAWzC,YAAY4B,GAGvCuB,uBAAsB,KAClB,GAAI4M,EAAYC,aAAc,CACdD,EAAAC,aAAahR,UAAU0C,IAAI,WACvC,MAAM+M,EAAWsB,EAAYC,aAAajR,cAAc,wBACpD0P,GACSA,EAAAzP,UAAU0C,IAAI,UAC3B,KAKR,MAAMoN,EAAciB,EAAYC,aAAajR,cAAc,iBACvD+P,GACAA,EAAYrK,iBAAiB,SAAS,IAAM0N,MAGhD1R,QAAQqC,IAAI,4CAA2C,MAEvDrC,QAAQ9B,MAAM,2EAEbA,GACG8B,QAAA9B,MAAM,mCAAoCA,GAClD+B,EAAY9B,YAAYD,aAAiBgN,MAAQhN,EAAM6B,QAAU,uBAAsB,CACzF,QACEE,EAAYK,YAAW,EAAK,CAEpC,CA3GcyR,CAAiBxL,EAAQ0J,GAEvC,CA9C+C+B,CAAUzL,EAAQ0J,KAClDzH,OAAAxE,iBAAiB,WAAYuN,GACvB7N,EAAAC,YAAY6E,OAAQ,SAAU4I,GAC9B1N,EAAAC,YAAY6E,OAAQ,SAAU8I,GAC9B5N,EAAAC,YAAY/E,SAAU,QAAS4S,GAC/B9N,EAAAC,YAAY/E,SAAU,UAAW+S,GAGrC/S,SAAAqG,KAAK1F,YAAY0Q,GACbmB,IAGN5I,OAAAxE,iBAAiB,UAAU,KAC9BN,EAAaO,UACTqL,EAAYE,YACZF,EAAYE,WAAW1J,aAE3BmK,EAAgB/O,QAAO,IAG3BlB,QAAQqC,IAAI,qDAAsD,CAC9DxB,UAAWjC,SAAS4H,eAAe,mBACnCyL,oBAAqB,OAAAlQ,EAAAnD,SAAS4H,eAAe,yBAAoB,EAAAzE,EAAAC,WACjEyE,OAAQ7H,SAAS4H,eAAe,uCAG/BtI,GACG8B,QAAA9B,MAAM,6BAA8BA,GACxCoR,EAAYE,YACZF,EAAYE,WAAW1J,aAE3B7F,EAAY9B,YAAYD,aAAiBgN,MAAQhN,EAAM6B,QAAU,gBAAe,CAClF,QACEuP,EAAYG,gBAAiB,CAAA,MAvG7BzP,QAAQqC,IAAI,yDAyGpB,CAsHA8H,eAAeuH,IAEX,GADA1R,QAAQqC,IAAI,iCACRiN,EAAYC,aAAc,CAEdD,EAAAC,aAAahR,UAAU2C,OAAO,WAC1C,MAAM8M,EAAWsB,EAAYC,aAAajR,cAAc,wBACpD0P,GACSA,EAAAzP,UAAU2C,OAAO,iBAIxB,IAAIoJ,SAAQC,GAAWC,WAAWD,EAAS,OAGjD+E,EAAYC,aAAarO,SACzBoO,EAAYC,aAAe,KAC3BvP,QAAQqC,IAAI,4BAA2B,CAE/C,CAEA,SAASgP,EAAgB5K,GAErBjE,EAAgBiE,EAAQ,CACpBuG,QAFe2D,IAEO,QAAU,QAExC,CAEA,SAASA,IACL,OAAQC,GACZ,CAEA,SAASA,IACL,QAAShS,SAASN,cAAc,gBACpC,CAEA6L,eAAe6F,IACL,MAAAkC,EAAoBtT,SAAS4H,eAAe,mBAC9C0L,GACAA,EAAkBhR,SAGlBoO,EAAYE,YACZF,EAAYE,WAAW1J,aAG3BwJ,EAAYI,iBAAiB/P,SAAmBsE,GAAAA,MAChDqL,EAAYI,iBAAmB,EACnC,CC7UA,IAAIyC,EAAa,EAGjB,IAAIC,GAAY,EAGhB,IAAIC,EAAiC,KAE9B,MAAMC,EAAanI,UAClBkI,GACAE,aAAaF,GAGCA,EAAA7J,OAAOgC,YAAWL,UAChC,IAAIiI,EAAJ,CACYA,GAAA,EAER,WACuBtH,MAAM,6CAChBE,KACThL,QAAQqC,IAAI,uBACC8P,EAAA,SAEZjU,GAEL,GADAiU,IACIA,GAxBI,EAwBuB,CAC3B,MAAMK,EAxBH,IAwBwB/K,KAAKgL,IAAI,EAAGN,GAC/BnS,QAAA0S,KAAK,4BAA4BF,OACtBhK,OAAAgC,WAAW8H,EAAYE,EAAK,MAE/CxS,QAAQ9B,MAAM,8CAClB,CACF,QACckU,GAAA,CAAA,CAnBD,CAmBC,GA5BD,IA8BF,ECrBrB,IAAIO,GAAgB,EAKpB,MAAMC,EAAOzI,UACTnK,QAAQqC,IAAI,0CAGN,MAAA6P,EAAoBtT,SAAS4H,eAAe,wBAGlD,GAFQxG,QAAAqC,IAAI,kCAAmC6P,GAE3CA,EAEA,YADAlS,QAAQqC,IAAI,2CAKhB,MAAMsD,Ed1ByB,MAOzB,MAAAkN,EAAUjU,SAASkU,qBAAqB,UAC9C,IAAIC,EAA0C,KAE9C,IAAA,IAASC,EAAI,EAAGA,EAAIH,EAAQpT,OAAQuT,IAAK,CAC/B,MAAAC,EAASJ,EAAQG,GACvB,GAAIC,EAAOlF,aAAa,iBAAmBkF,EAAOlF,aAAa,cAAe,CAC1DgF,EAAAE,EAChB,KAAA,CACJ,CAGJ,IAAKF,EAEM,OADP/S,QAAQ9B,MAAM,mDACP,KAGL,MAAA+Q,EAAS8D,EAAchF,aAAa,gBACpCxC,EAAQwH,EAAchF,aAAa,cACnCjN,EAAQiS,EAAchF,aAAa,cACnChN,EAAWgS,EAAchF,aAAa,iBACtCuC,EAAcyC,EAAchF,aAAa,qBAU3C,OARJ/N,QAAQqC,IAAI,+BAAgC,CACxC4M,SACA1D,QACAzK,QACAC,WACAuP,gBAGCrB,GAAW1D,EAKT,CACH0D,SACA1D,QACAzK,MAAOA,QAAS,EAChBC,SAAUA,QAAY,EACtBuP,YAAaA,QAAe,IAT5BtQ,QAAQ9B,MAAM,4DACP,KASX,EctBmBgV,GAGnB,GAFQlT,QAAAqC,IAAI,oCAAqCsD,IAE5CA,EAED,YADA3F,QAAQ9B,MAAM,wEAIlB,MAAM+Q,OAAEA,EAAQ1D,MAAAA,EAAAzK,MAAOA,EAAOC,SAAAA,EAAAuP,YAAUA,GAAgB3K,EAGlDwN,EAA2B,SAAVrS,GAA8B,UAAVA,EAAoBA,EAAQ,QACjEsS,EAAiC,SAAbrS,GAAoC,UAAbA,EAAuBA,EAAW,QAEnFf,QAAQqC,IAAI,wCAAyC,CACjD4M,SACAnO,MAAOqS,EACPpS,SAAUqS,EACV9C,sBAIE+C,EAAW,CACbpE,SACA1D,QACAzK,MAAOqS,EACPpS,SAAUqS,EACV9C,gBAIE,MAAAgD,EAAe1U,SAASN,cAAc,gCACtCiV,EAAc3U,SAASN,cAAc,qBAE3C0B,QAAQqC,IAAI,6CAA8C,CACtDoE,OAAQ6M,EACR7U,MAAO8U,IAIAjB,GAAA,EAiBR,SAASe,EAAW9M,GACvB,GAAIoM,EACA3S,QAAQ0S,KAAK,wCADjB,CAKA,IAAKnM,EAAO0I,SAAW1I,EAAOgF,MACpB,MAAA,IAAIL,MAAM,iCAGpB6E,EAAoBxJ,GACJoM,GAAA,CARZ,CASR,CAEO,SAASa,IACPb,GFsTiB3C,IEhTN2C,GAAA,GALZ3S,QAAQ0S,KAAK,+BAMrB,CAnCS9T,SAAAoF,iBAAiB,oBAAoB,KAC1ChE,QAAQqC,IAAI,0DACPuQ,GAAA,IAIFpK,OAAAxE,iBAAiB,QAAQ,KAC5BhE,QAAQqC,IAAI,yDACPzD,SAAS4H,eAAe,yBACpBoM,GAAA,IA4BE,MAAAa,EAAA,CACXJ,aACAG"}

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/tree-maker/20250123152619990-tree.md
File type: .md
```markdown
. 📂 now-widget
├── 📄 README.md
└── 📂 demo-site/
│  ├── 📄 about.html
│  ├── 📄 blog.html
│  ├── 📄 contact.html
│  └── 📂 data/
│    ├── 📄 comments.json
│    ├── 📄 posts.json
│    ├── 📄 users.json
│  ├── 📄 index.html
│  ├── 📄 package-lock.json
│  ├── 📄 package.json
│  └── 📂 public/
│    ├── 📄 index.html
│    ├── 📄 styles.css
│  └── 📂 server/
│    ├── 📄 api.ts
│    ├── 📄 index.ts
│    ├── 📄 mockData.ts
│    ├── 📄 types.ts
│  ├── 📄 services.html
│  ├── 📄 styles.css
│  ├── 📄 tsconfig.json
│  ├── 📄 vite.config.ts
├── 📄 package-lock.json
├── 📄 package.json
├── 📄 placeholder-user.png
└── 📂 public/
└── 📂 src/
│  └── 📂 api/
│    ├── 📄 auth.ts
│  └── 📂 components/
│    ├── 📄 NowButton.ts
│    ├── 📄 NowPanelContent.ts
│    ├── 📄 NowPanelPost.ts
│    ├── 📄 NowWidget.ts
│    ├── 📄 now-widget.code-workspace
│  └── 📂 core/
│    ├── 📄 EventEmitter.ts
│    ├── 📄 WidgetCore.ts
│    ├── 📄 WidgetStore.ts
│  ├── 📄 favicon.ico
│  ├── 📄 global.d.ts
│  ├── 📄 index.html
│  ├── 📄 index.ts
│  └── 📂 lib/
│  └── 📂 services/
│    ├── 📄 ApiService.ts
│  └── 📂 state/
│    ├── 📄 state.ts
│  └── 📂 styles/
│    ├── 📄 nowWidgetStyles.css
│  └── 📂 test/
│    ├── 📄 auth.test.ts
│    ├── 📄 nowWidget.test.ts
│  └── 📂 types/
│    ├── 📄 css.d.ts
│    ├── 📄 theme.ts
│    ├── 📄 types.ts
│  └── 📂 utils/
│    ├── 📄 dateUtils.ts
│    ├── 📄 nowAnimation.ts
│    ├── 📄 nowCache.ts
│    ├── 📄 nowEventsUtils.ts
│    ├── 📄 nowStyleUtils.ts
│    ├── 📄 nowWidgetUtils.ts
│    ├── 📄 pingServer.ts
├── 📄 tsconfig.json
├── 📄 vite.config.ts
└── 📄 watch-build.js
```

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/scripts/dev-server.js
File type: .js
const express = require('express');
const cors = require('cors');
const path = require('path');

const app = express();
const port = process.env.PORT || 5173;

// Enable CORS for all routes
app.use(cors({
    origin: '*',
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
    allowedHeaders: ['X-Requested-With', 'content-type', 'Authorization'],
    credentials: true
}));

// Serve static files from dist directory
app.use('/dist', express.static(path.join(__dirname, '../dist'), {
    setHeaders: (res) => {
        res.set('Access-Control-Allow-Origin', '*');
        res.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');
        res.set('Access-Control-Allow-Headers', 'X-Requested-With, content-type, Authorization');
        res.set('Access-Control-Allow-Credentials', 'true');
    }
}));

app.listen(port, () => {
    console.log(`Development server running at http://localhost:${port}`);
});


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/ORIG_HEAD
File type: 
3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/config
File type: 
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
	ignorecase = true
	precomposeunicode = true
[remote "origin"]
	url = git@github.com:marcusbey/now-widget.git
	fetch = +refs/heads/*:refs/remotes/origin/*


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/HEAD
File type: 
ref: refs/heads/main


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/description
File type: 
Unnamed repository; edit this file 'description' to name the repository.


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/packed-refs
File type: 
# pack-refs with: peeled fully-peeled sorted 
bfff6665d06ba4480f966a9bbd149d60623d3373 refs/heads/main


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/COMMIT_EDITMSG
File type: 
fix: improve button visibility and z-index handling

- Set maximum safe z-index (2147483647) for button and container
- Fix shadow DOM style scoping and event handling
- Add proper pointer-events handling
- Improve panel animations and transitions
- Add detailed logging for debugging
- Fix button click handler and panel initialization


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/FETCH_HEAD
File type: 
1924f789208eabf7d81a139b918ab52bdbade856	not-for-merge	branch 'main' of github.com:marcusbey/now-widget


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/objects/info/packs
File type: 
P pack-aa43414cfc788653785ac4e35d12bef2a73cefd9.pack



--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/info/exclude
File type: 
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/info/refs
File type: 
bfff6665d06ba4480f966a9bbd149d60623d3373	refs/heads/main


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/logs/HEAD
File type: 
0000000000000000000000000000000000000000 bfff6665d06ba4480f966a9bbd149d60623d3373 Romain BOBOE <rboboe@gmail.com> 1727915100 -0400	commit (initial): Adding base files
bfff6665d06ba4480f966a9bbd149d60623d3373 bfff6665d06ba4480f966a9bbd149d60623d3373 Romain BOBOE <rboboe@gmail.com> 1727915132 -0400	reset: moving to HEAD~0
bfff6665d06ba4480f966a9bbd149d60623d3373 bfff6665d06ba4480f966a9bbd149d60623d3373 Romain BOBOE <rboboe@gmail.com> 1727915167 -0400	reset: moving to HEAD@{1}
bfff6665d06ba4480f966a9bbd149d60623d3373 bfff6665d06ba4480f966a9bbd149d60623d3373 Romain BOBOE <rboboe@gmail.com> 1727915182 -0400	reset: moving to HEAD@{2}
bfff6665d06ba4480f966a9bbd149d60623d3373 c5f4b4a48baf47a86359714bcef4990b6c280970 Romain BOBOE <rboboe@gmail.com> 1727915268 -0400	commit: Adding base config files
c5f4b4a48baf47a86359714bcef4990b6c280970 1d2404f5e0bb34e26cf34196166e790b6ea9ebcd Romain BOBOE <rboboe@gmail.com> 1727915359 -0400	commit: remove node modules
1d2404f5e0bb34e26cf34196166e790b6ea9ebcd 8b5862d3ba435c40cfe168b72eda2a1af12df3a4 Romain BOBOE <rboboe@gmail.com> 1727955739 -0400	commit: First complete files implementattion
8b5862d3ba435c40cfe168b72eda2a1af12df3a4 89fc12228186df702ba73d54f75c39ab13b885c5 Romain BOBOE <rboboe@gmail.com> 1727961794 -0400	commit: secong layer of filre refacto
89fc12228186df702ba73d54f75c39ab13b885c5 8ab34ef5822e3430320409222b2ff489549f94da Romain BOBOE <rboboe@gmail.com> 1728033580 -0400	commit: Fixing now build issue
8ab34ef5822e3430320409222b2ff489549f94da 14643ee698debd2b51c7ebcd4db60596220ae0c0 Romain BOBOE <rboboe@gmail.com> 1728066357 -0400	commit: Additional files for the build
14643ee698debd2b51c7ebcd4db60596220ae0c0 8967fc96eeb20d05188ddaa10cdc66b9b20e07d8 Romain BOBOE <rboboe@gmail.com> 1728299095 -0400	commit: First pack to dispay widget onthe page
8967fc96eeb20d05188ddaa10cdc66b9b20e07d8 52689ed69f09a2c9923973fa88931200aa9fe2a3 Romain BOBOE <rboboe@gmail.com> 1728300161 -0400	commit: Fixing nowwidget routes
52689ed69f09a2c9923973fa88931200aa9fe2a3 1be00a99b232ff0e565747f9a6b3e330ec80aaf9 Romain BOBOE <rboboe@gmail.com> 1728332994 -0400	commit: Adding functions to handle display
1be00a99b232ff0e565747f9a6b3e330ec80aaf9 094872780bb3a74190bea6c9bad765e1f335c3c7 Romain BOBOE <rboboe@gmail.com> 1728334592 -0400	commit: Display user informations
094872780bb3a74190bea6c9bad765e1f335c3c7 094872780bb3a74190bea6c9bad765e1f335c3c7 Romain BOBOE <rboboe@gmail.com> 1728334614 -0400	checkout: moving from main to widget-display
094872780bb3a74190bea6c9bad765e1f335c3c7 094872780bb3a74190bea6c9bad765e1f335c3c7 Romain BOBOE <rboboe@gmail.com> 1728345030 -0400	reset: moving to HEAD
094872780bb3a74190bea6c9bad765e1f335c3c7 094872780bb3a74190bea6c9bad765e1f335c3c7 Romain BOBOE <rboboe@gmail.com> 1728345033 -0400	checkout: moving from widget-display to main
094872780bb3a74190bea6c9bad765e1f335c3c7 094872780bb3a74190bea6c9bad765e1f335c3c7 Romain BOBOE <rboboe@gmail.com> 1728345059 -0400	checkout: moving from main to widget-display
094872780bb3a74190bea6c9bad765e1f335c3c7 70695427baf2ffc4b769a6a7c0c33ffb014c90fa Romain BOBOE <rboboe@gmail.com> 1728345138 -0400	commit: adding position parameter
70695427baf2ffc4b769a6a7c0c33ffb014c90fa e57f417cf3b253ceb6236b68b5541db66916988e Romain BOBOE <rboboe@gmail.com> 1728345625 -0400	commit: fixing panel position
e57f417cf3b253ceb6236b68b5541db66916988e 094872780bb3a74190bea6c9bad765e1f335c3c7 Romain BOBOE <rboboe@gmail.com> 1728345658 -0400	checkout: moving from widget-display to main
094872780bb3a74190bea6c9bad765e1f335c3c7 e57f417cf3b253ceb6236b68b5541db66916988e Romain BOBOE <rboboe@gmail.com> 1728345665 -0400	merge widget-display: Fast-forward
e57f417cf3b253ceb6236b68b5541db66916988e 8c43d8a42ece817bfbf59fbf2d8b6964e1f0118b Romain BOBOE <rboboe@gmail.com> 1728346642 -0400	commit: test file updated
8c43d8a42ece817bfbf59fbf2d8b6964e1f0118b e57f417cf3b253ceb6236b68b5541db66916988e Romain BOBOE <rboboe@gmail.com> 1728346654 -0400	checkout: moving from main to widget-display
e57f417cf3b253ceb6236b68b5541db66916988e 8c43d8a42ece817bfbf59fbf2d8b6964e1f0118b Romain BOBOE <rboboe@gmail.com> 1728346671 -0400	merge main: Fast-forward
8c43d8a42ece817bfbf59fbf2d8b6964e1f0118b 7b772fbb8aefa65843c4a211883601968157dca1 Romain BOBOE <rboboe@gmail.com> 1728349382 -0400	commit: remove env file
7b772fbb8aefa65843c4a211883601968157dca1 8c43d8a42ece817bfbf59fbf2d8b6964e1f0118b Romain BOBOE <rboboe@gmail.com> 1728349387 -0400	checkout: moving from widget-display to main
8c43d8a42ece817bfbf59fbf2d8b6964e1f0118b 7b772fbb8aefa65843c4a211883601968157dca1 Romain BOBOE <rboboe@gmail.com> 1728349395 -0400	merge widget-display: Fast-forward
7b772fbb8aefa65843c4a211883601968157dca1 7b772fbb8aefa65843c4a211883601968157dca1 Romain BOBOE <rboboe@gmail.com> 1728349697 -0400	checkout: moving from main to widget-display
7b772fbb8aefa65843c4a211883601968157dca1 753ab02d72e3bc7b965ca9c126b1120301ace872 Romain BOBOE <rboboe@gmail.com> 1728355708 -0400	commit: Moving buttong outside of container
753ab02d72e3bc7b965ca9c126b1120301ace872 7b61ee26f7d9e80e9aeef26922a1497faf6696b2 Romain BOBOE <rboboe@gmail.com> 1730942713 -0500	commit: Styling button and widget
7b61ee26f7d9e80e9aeef26922a1497faf6696b2 7b772fbb8aefa65843c4a211883601968157dca1 Romain BOBOE <rboboe@gmail.com> 1730942733 -0500	checkout: moving from widget-display to main
7b772fbb8aefa65843c4a211883601968157dca1 7b61ee26f7d9e80e9aeef26922a1497faf6696b2 Romain BOBOE <rboboe@gmail.com> 1730942742 -0500	merge widget-display: Fast-forward
7b61ee26f7d9e80e9aeef26922a1497faf6696b2 c02b791bfcd4a6cebb80c8f487511572e17d6c7e Romain BOBOE <rboboe@gmail.com> 1730945000 -0500	commit: Adding element to switch to vite
c02b791bfcd4a6cebb80c8f487511572e17d6c7e fd3416e3a89149c7fc05f1a4d68865eeaf084b71 Romain BOBOE <rboboe@gmail.com> 1730945317 -0500	commit: Update packages
fd3416e3a89149c7fc05f1a4d68865eeaf084b71 bff81bdd16b1b6f7037bb68d4744210d8026dac5 Romain BOBOE <rboboe@gmail.com> 1730968695 -0500	commit: Config for vite
bff81bdd16b1b6f7037bb68d4744210d8026dac5 afb7717c4260b398f3606e573c2c3b3d9c6b695a Romain BOBOE <rboboe@gmail.com> 1730969491 -0500	commit: change to vite config to push one file
afb7717c4260b398f3606e573c2c3b3d9c6b695a 1489447e89fdbbedd9ca6a7e559c256e4a91eace Romain BOBOE <rboboe@gmail.com> 1730970657 -0500	commit: New update for settings
1489447e89fdbbedd9ca6a7e559c256e4a91eace 20970748609031534b15e983f06c089dd78d3522 Romain BOBOE <rboboe@gmail.com> 1730971494 -0500	commit: New update for settings
20970748609031534b15e983f06c089dd78d3522 565aa5ab9de48329f16cdb75f0f00b27ba0aff46 Romain BOBOE <rboboe@gmail.com> 1730973922 -0500	commit: Additional style setting
565aa5ab9de48329f16cdb75f0f00b27ba0aff46 565aa5ab9de48329f16cdb75f0f00b27ba0aff46 Romain BOBOE <rboboe@gmail.com> 1730973970 -0500	checkout: moving from main to 001-now-panel-opening
565aa5ab9de48329f16cdb75f0f00b27ba0aff46 056e8b94def36db0254056444a185869768eda68 Romain BOBOE <rboboe@gmail.com> 1730975965 -0500	commit: Adding index file for testing
056e8b94def36db0254056444a185869768eda68 565aa5ab9de48329f16cdb75f0f00b27ba0aff46 Romain BOBOE <rboboe@gmail.com> 1730975970 -0500	checkout: moving from 001-now-panel-opening to main
565aa5ab9de48329f16cdb75f0f00b27ba0aff46 056e8b94def36db0254056444a185869768eda68 Romain BOBOE <rboboe@gmail.com> 1730975993 -0500	merge 001-now-panel-opening: Fast-forward
056e8b94def36db0254056444a185869768eda68 056e8b94def36db0254056444a185869768eda68 Romain BOBOE <rboboe@gmail.com> 1730976002 -0500	checkout: moving from main to 001-now-panel-opening
056e8b94def36db0254056444a185869768eda68 88fd4603f255887601130b67b282ae1f5bd94c82 Romain BOBOE <rboboe@gmail.com> 1731019737 -0500	commit: Integrating utils files
88fd4603f255887601130b67b282ae1f5bd94c82 62e1e01b767a2a65f25c58854cb7caa2c3d2cb92 Romain BOBOE <rboboe@gmail.com> 1731020497 -0500	commit: Update state and styles
62e1e01b767a2a65f25c58854cb7caa2c3d2cb92 f075f750bb28dc31150b7361eb86db24d28556f9 Romain BOBOE <rboboe@gmail.com> 1731028341 -0500	commit: Adding component elements
f075f750bb28dc31150b7361eb86db24d28556f9 95a65cde33ce07e925af3475189271cfc712bae1 Romain BOBOE <rboboe@gmail.com> 1731052156 -0500	commit: Adding configuration to display button
95a65cde33ce07e925af3475189271cfc712bae1 056e8b94def36db0254056444a185869768eda68 Romain BOBOE <rboboe@gmail.com> 1731052161 -0500	checkout: moving from 001-now-panel-opening to main
056e8b94def36db0254056444a185869768eda68 95a65cde33ce07e925af3475189271cfc712bae1 Romain BOBOE <rboboe@gmail.com> 1731052175 -0500	checkout: moving from main to 001-now-panel-opening
95a65cde33ce07e925af3475189271cfc712bae1 e05347b37e39037984ebcbe559d7ad3a9f9d8209 Romain BOBOE <rboboe@gmail.com> 1731052189 -0500	commit: Adding demo site
e05347b37e39037984ebcbe559d7ad3a9f9d8209 056e8b94def36db0254056444a185869768eda68 Romain BOBOE <rboboe@gmail.com> 1731052196 -0500	checkout: moving from 001-now-panel-opening to main
056e8b94def36db0254056444a185869768eda68 e05347b37e39037984ebcbe559d7ad3a9f9d8209 Romain BOBOE <rboboe@gmail.com> 1731052202 -0500	merge 001-now-panel-opening: Fast-forward
e05347b37e39037984ebcbe559d7ad3a9f9d8209 41743e06ad2f6cb9fbbf9f1476536782f2384fe6 Romain BOBOE <rboboe@gmail.com> 1731054416 -0500	commit: Base for using composer
41743e06ad2f6cb9fbbf9f1476536782f2384fe6 6eea0f830c588f8e7bbec5de11001691f6e1482b Romain BOBOE <rboboe@gmail.com> 1731081540 -0500	commit: Configuring a watch
6eea0f830c588f8e7bbec5de11001691f6e1482b 6eea0f830c588f8e7bbec5de11001691f6e1482b Romain BOBOE <rboboe@gmail.com> 1731081565 -0500	checkout: moving from main to 001-cleaning-code
6eea0f830c588f8e7bbec5de11001691f6e1482b 9402856eec5f2f26143b13e6a13c4271be558007 Romain BOBOE <rboboe@gmail.com> 1731200141 -0500	commit: Adding readme file and update logic
9402856eec5f2f26143b13e6a13c4271be558007 6eea0f830c588f8e7bbec5de11001691f6e1482b Romain BOBOE <rboboe@gmail.com> 1731200148 -0500	checkout: moving from 001-cleaning-code to main
6eea0f830c588f8e7bbec5de11001691f6e1482b 9402856eec5f2f26143b13e6a13c4271be558007 Romain BOBOE <rboboe@gmail.com> 1731200158 -0500	merge 001-cleaning-code: Fast-forward
9402856eec5f2f26143b13e6a13c4271be558007 9402856eec5f2f26143b13e6a13c4271be558007 Romain BOBOE <rboboe@gmail.com> 1731200172 -0500	checkout: moving from main to 001-cleaning-code
9402856eec5f2f26143b13e6a13c4271be558007 9402856eec5f2f26143b13e6a13c4271be558007 Romain BOBOE <rboboe@gmail.com> 1731200215 -0500	checkout: moving from 001-cleaning-code to main
9402856eec5f2f26143b13e6a13c4271be558007 9402856eec5f2f26143b13e6a13c4271be558007 Romain BOBOE <rboboe@gmail.com> 1731200234 -0500	checkout: moving from main to 001-cleaning-code
9402856eec5f2f26143b13e6a13c4271be558007 07a84bc34763c93fc1a1acc50e1d072b29996468 Romain BOBOE <rboboe@gmail.com> 1731202699 -0500	commit: Changes for the button display
07a84bc34763c93fc1a1acc50e1d072b29996468 07a84bc34763c93fc1a1acc50e1d072b29996468 Romain BOBOE <rboboe@gmail.com> 1731202717 -0500	checkout: moving from 001-cleaning-code to 001-a-button-display
07a84bc34763c93fc1a1acc50e1d072b29996468 07a84bc34763c93fc1a1acc50e1d072b29996468 Romain BOBOE <rboboe@gmail.com> 1731204312 -0500	reset: moving to HEAD
07a84bc34763c93fc1a1acc50e1d072b29996468 07a84bc34763c93fc1a1acc50e1d072b29996468 Romain BOBOE <rboboe@gmail.com> 1731204336 -0500	checkout: moving from 001-a-button-display to 001-cleaning-code
07a84bc34763c93fc1a1acc50e1d072b29996468 07a84bc34763c93fc1a1acc50e1d072b29996468 Romain BOBOE <rboboe@gmail.com> 1731204359 -0500	checkout: moving from 001-cleaning-code to 001-a-button-display
07a84bc34763c93fc1a1acc50e1d072b29996468 52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 Romain BOBOE <rboboe@gmail.com> 1731215781 -0500	commit: Fixing style and additional properties
52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 9402856eec5f2f26143b13e6a13c4271be558007 Romain BOBOE <rboboe@gmail.com> 1731215797 -0500	checkout: moving from 001-a-button-display to main
9402856eec5f2f26143b13e6a13c4271be558007 07a84bc34763c93fc1a1acc50e1d072b29996468 Romain BOBOE <rboboe@gmail.com> 1731215819 -0500	checkout: moving from main to 001-cleaning-code
07a84bc34763c93fc1a1acc50e1d072b29996468 52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 Romain BOBOE <rboboe@gmail.com> 1731215841 -0500	merge 001-a-button-display: Fast-forward
52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 9402856eec5f2f26143b13e6a13c4271be558007 Romain BOBOE <rboboe@gmail.com> 1731215855 -0500	checkout: moving from 001-cleaning-code to main
9402856eec5f2f26143b13e6a13c4271be558007 52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 Romain BOBOE <rboboe@gmail.com> 1731215863 -0500	merge 001-cleaning-code: Fast-forward
52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 Romain BOBOE <rboboe@gmail.com> 1731218793 -0500	checkout: moving from main to 001-cleaning-code
52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 5727d9d358562df7afb29dc34431a6a0362c41c2 Romain BOBOE <rboboe@gmail.com> 1731225695 -0500	commit: Opening and button fixed
5727d9d358562df7afb29dc34431a6a0362c41c2 ca1015d8f83c6e0a977a711b598ef7ef62a47077 Romain BOBOE <rboboe@gmail.com> 1731226383 -0500	commit: button style
ca1015d8f83c6e0a977a711b598ef7ef62a47077 1a6f6ea940659b4d5b5a19d888bbd81089f8fd9c Romain BOBOE <rboboe@gmail.com> 1731257570 -0500	commit: Adding element to check the requests and styling
1a6f6ea940659b4d5b5a19d888bbd81089f8fd9c 3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1 Romain BOBOE <rboboe@gmail.com> 1731266907 -0500	commit: Arrangement for the widget tot display then them and change style
3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1 52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 Romain BOBOE <rboboe@gmail.com> 1731266917 -0500	checkout: moving from 001-cleaning-code to main
52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1 Romain BOBOE <rboboe@gmail.com> 1731266926 -0500	merge 001-cleaning-code: Fast-forward
3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1 3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1 Romain BOBOE <rboboe@gmail.com> 1731266932 -0500	checkout: moving from main to 001-cleaning-code
3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1 a3edfde3ec96e39ef1e169383df1072e64238210 Romain BOBOE <rboboe@gmail.com> 1731268879 -0500	commit: Adding post component and stats for the bio
a3edfde3ec96e39ef1e169383df1072e64238210 2b4a50aa49146e589c2d842f0aab9666d8aa8723 Romain BOBOE <rboboe@gmail.com> 1731271638 -0500	commit: Adding comment section
2b4a50aa49146e589c2d842f0aab9666d8aa8723 3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1 Romain BOBOE <rboboe@gmail.com> 1731271643 -0500	checkout: moving from 001-cleaning-code to main
3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1 2b4a50aa49146e589c2d842f0aab9666d8aa8723 Romain BOBOE <rboboe@gmail.com> 1731271653 -0500	merge 001-cleaning-code: Fast-forward
2b4a50aa49146e589c2d842f0aab9666d8aa8723 87da0076a2ceb7073aa59e7b298e7d109d64bf36 Romain BOBOE <rboboe@gmail.com> 1731774789 -0500	commit: Last update
87da0076a2ceb7073aa59e7b298e7d109d64bf36 50263c986e1bddb67fcf8f5cb77207aae905c0ed Romain BOBOE <rboboe@gmail.com> 1732132894 -0500	commit: Addding demosite to the repo
50263c986e1bddb67fcf8f5cb77207aae905c0ed 1924f789208eabf7d81a139b918ab52bdbade856 Romain BOBOE <rboboe@gmail.com> 1732248452 -0500	commit: Changin now button speed
1924f789208eabf7d81a139b918ab52bdbade856 361b927a3f1835d33e3f5342731b9c78c55a9f2f Romain BOBOE <rboboe@gmail.com> 1737949726 -0500	commit: feat: update widget components and demo site integration
361b927a3f1835d33e3f5342731b9c78c55a9f2f 0344044b35c94968912bdc14dc0e6cf9328f0047 Romain BOBOE <rboboe@gmail.com> 1737949991 -0500	commit: feat: implement Shadow DOM for style encapsulation
0344044b35c94968912bdc14dc0e6cf9328f0047 6386715cd698cc7ad6938419f1a16d128976e326 Romain BOBOE <rboboe@gmail.com> 1737951169 -0500	commit: refactor: implement state encapsulation
6386715cd698cc7ad6938419f1a16d128976e326 51ea62298b43a424adc82bd223d7866d8cee5213 Romain BOBOE <rboboe@gmail.com> 1737951296 -0500	commit: feat: implement safe DOM manipulation
51ea62298b43a424adc82bd223d7866d8cee5213 80308c335c72357627cc44ff5b581548f820362c Romain BOBOE <rboboe@gmail.com> 1737951732 -0500	commit: feat: add configurable z-index strategy
80308c335c72357627cc44ff5b581548f820362c b627f4b6833d269da9dcf533f62b5d659ee06597 Romain BOBOE <rboboe@gmail.com> 1737953048 -0500	commit: feat: implement robust event management
b627f4b6833d269da9dcf533f62b5d659ee06597 58bf2e961df7da1dd2eabb55db599ba8ccc32c3a Romain BOBOE <rboboe@gmail.com> 1737989195 -0500	commit: feat: improve widget visibility behavior
58bf2e961df7da1dd2eabb55db599ba8ccc32c3a 5dac339ff0cc9923570b3c1b1e1a063e5ad97a38 Romain BOBOE <rboboe@gmail.com> 1737991598 -0500	commit: refactor: prevent CSS namespace collisions
5dac339ff0cc9923570b3c1b1e1a063e5ad97a38 33180e1f05afd18b460d32e6b2fd2818322b02d3 Romain BOBOE <rboboe@gmail.com> 1738004350 -0500	commit: feat: add DOM monitor utility
33180e1f05afd18b460d32e6b2fd2818322b02d3 c9fa4dae10ba354d7aa6d750d0c0e52669ebf9fc Romain BOBOE <rboboe@gmail.com> 1738008160 -0500	commit: fix: resolve TypeScript errors in NowWidget and NowPanelContent components
c9fa4dae10ba354d7aa6d750d0c0e52669ebf9fc 8f519af6798173aeb38b9b7d5e71dd24ba216a82 Romain BOBOE <rboboe@gmail.com> 1738037011 -0500	commit: fix: improve button visibility and z-index handling


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/logs/refs/stash
File type: 
0000000000000000000000000000000000000000 e508193fd472ede52cbd964e71bbb5c5e4c0e126 Romain BOBOE <rboboe@gmail.com> 1731204312 -0500	WIP on 001-a-button-display: 07a84bc Changes for the button display


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/logs/refs/heads/001-now-panel-opening
File type: 
0000000000000000000000000000000000000000 565aa5ab9de48329f16cdb75f0f00b27ba0aff46 Romain BOBOE <rboboe@gmail.com> 1730973970 -0500	branch: Created from HEAD
565aa5ab9de48329f16cdb75f0f00b27ba0aff46 056e8b94def36db0254056444a185869768eda68 Romain BOBOE <rboboe@gmail.com> 1730975965 -0500	commit: Adding index file for testing
056e8b94def36db0254056444a185869768eda68 88fd4603f255887601130b67b282ae1f5bd94c82 Romain BOBOE <rboboe@gmail.com> 1731019737 -0500	commit: Integrating utils files
88fd4603f255887601130b67b282ae1f5bd94c82 62e1e01b767a2a65f25c58854cb7caa2c3d2cb92 Romain BOBOE <rboboe@gmail.com> 1731020497 -0500	commit: Update state and styles
62e1e01b767a2a65f25c58854cb7caa2c3d2cb92 f075f750bb28dc31150b7361eb86db24d28556f9 Romain BOBOE <rboboe@gmail.com> 1731028341 -0500	commit: Adding component elements
f075f750bb28dc31150b7361eb86db24d28556f9 95a65cde33ce07e925af3475189271cfc712bae1 Romain BOBOE <rboboe@gmail.com> 1731052156 -0500	commit: Adding configuration to display button
95a65cde33ce07e925af3475189271cfc712bae1 e05347b37e39037984ebcbe559d7ad3a9f9d8209 Romain BOBOE <rboboe@gmail.com> 1731052189 -0500	commit: Adding demo site


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/logs/refs/heads/001-cleaning-code
File type: 
0000000000000000000000000000000000000000 6eea0f830c588f8e7bbec5de11001691f6e1482b Romain BOBOE <rboboe@gmail.com> 1731081565 -0500	branch: Created from HEAD
6eea0f830c588f8e7bbec5de11001691f6e1482b 9402856eec5f2f26143b13e6a13c4271be558007 Romain BOBOE <rboboe@gmail.com> 1731200141 -0500	commit: Adding readme file and update logic
9402856eec5f2f26143b13e6a13c4271be558007 07a84bc34763c93fc1a1acc50e1d072b29996468 Romain BOBOE <rboboe@gmail.com> 1731202699 -0500	commit: Changes for the button display
07a84bc34763c93fc1a1acc50e1d072b29996468 52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 Romain BOBOE <rboboe@gmail.com> 1731215841 -0500	merge 001-a-button-display: Fast-forward
52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 5727d9d358562df7afb29dc34431a6a0362c41c2 Romain BOBOE <rboboe@gmail.com> 1731225695 -0500	commit: Opening and button fixed
5727d9d358562df7afb29dc34431a6a0362c41c2 ca1015d8f83c6e0a977a711b598ef7ef62a47077 Romain BOBOE <rboboe@gmail.com> 1731226383 -0500	commit: button style
ca1015d8f83c6e0a977a711b598ef7ef62a47077 1a6f6ea940659b4d5b5a19d888bbd81089f8fd9c Romain BOBOE <rboboe@gmail.com> 1731257570 -0500	commit: Adding element to check the requests and styling
1a6f6ea940659b4d5b5a19d888bbd81089f8fd9c 3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1 Romain BOBOE <rboboe@gmail.com> 1731266907 -0500	commit: Arrangement for the widget tot display then them and change style
3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1 a3edfde3ec96e39ef1e169383df1072e64238210 Romain BOBOE <rboboe@gmail.com> 1731268879 -0500	commit: Adding post component and stats for the bio
a3edfde3ec96e39ef1e169383df1072e64238210 2b4a50aa49146e589c2d842f0aab9666d8aa8723 Romain BOBOE <rboboe@gmail.com> 1731271638 -0500	commit: Adding comment section


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/logs/refs/heads/001-a-button-display
File type: 
0000000000000000000000000000000000000000 07a84bc34763c93fc1a1acc50e1d072b29996468 Romain BOBOE <rboboe@gmail.com> 1731202717 -0500	branch: Created from HEAD
07a84bc34763c93fc1a1acc50e1d072b29996468 52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 Romain BOBOE <rboboe@gmail.com> 1731215781 -0500	commit: Fixing style and additional properties


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/logs/refs/heads/widget-display
File type: 
0000000000000000000000000000000000000000 094872780bb3a74190bea6c9bad765e1f335c3c7 Romain BOBOE <rboboe@gmail.com> 1728334614 -0400	branch: Created from HEAD
094872780bb3a74190bea6c9bad765e1f335c3c7 70695427baf2ffc4b769a6a7c0c33ffb014c90fa Romain BOBOE <rboboe@gmail.com> 1728345138 -0400	commit: adding position parameter
70695427baf2ffc4b769a6a7c0c33ffb014c90fa e57f417cf3b253ceb6236b68b5541db66916988e Romain BOBOE <rboboe@gmail.com> 1728345625 -0400	commit: fixing panel position
e57f417cf3b253ceb6236b68b5541db66916988e 8c43d8a42ece817bfbf59fbf2d8b6964e1f0118b Romain BOBOE <rboboe@gmail.com> 1728346671 -0400	merge main: Fast-forward
8c43d8a42ece817bfbf59fbf2d8b6964e1f0118b 7b772fbb8aefa65843c4a211883601968157dca1 Romain BOBOE <rboboe@gmail.com> 1728349382 -0400	commit: remove env file
7b772fbb8aefa65843c4a211883601968157dca1 753ab02d72e3bc7b965ca9c126b1120301ace872 Romain BOBOE <rboboe@gmail.com> 1728355708 -0400	commit: Moving buttong outside of container
753ab02d72e3bc7b965ca9c126b1120301ace872 7b61ee26f7d9e80e9aeef26922a1497faf6696b2 Romain BOBOE <rboboe@gmail.com> 1730942713 -0500	commit: Styling button and widget


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/logs/refs/heads/main
File type: 
0000000000000000000000000000000000000000 bfff6665d06ba4480f966a9bbd149d60623d3373 Romain BOBOE <rboboe@gmail.com> 1727915100 -0400	commit (initial): Adding base files
bfff6665d06ba4480f966a9bbd149d60623d3373 c5f4b4a48baf47a86359714bcef4990b6c280970 Romain BOBOE <rboboe@gmail.com> 1727915268 -0400	commit: Adding base config files
c5f4b4a48baf47a86359714bcef4990b6c280970 1d2404f5e0bb34e26cf34196166e790b6ea9ebcd Romain BOBOE <rboboe@gmail.com> 1727915359 -0400	commit: remove node modules
1d2404f5e0bb34e26cf34196166e790b6ea9ebcd 8b5862d3ba435c40cfe168b72eda2a1af12df3a4 Romain BOBOE <rboboe@gmail.com> 1727955739 -0400	commit: First complete files implementattion
8b5862d3ba435c40cfe168b72eda2a1af12df3a4 89fc12228186df702ba73d54f75c39ab13b885c5 Romain BOBOE <rboboe@gmail.com> 1727961794 -0400	commit: secong layer of filre refacto
89fc12228186df702ba73d54f75c39ab13b885c5 8ab34ef5822e3430320409222b2ff489549f94da Romain BOBOE <rboboe@gmail.com> 1728033580 -0400	commit: Fixing now build issue
8ab34ef5822e3430320409222b2ff489549f94da 14643ee698debd2b51c7ebcd4db60596220ae0c0 Romain BOBOE <rboboe@gmail.com> 1728066357 -0400	commit: Additional files for the build
14643ee698debd2b51c7ebcd4db60596220ae0c0 8967fc96eeb20d05188ddaa10cdc66b9b20e07d8 Romain BOBOE <rboboe@gmail.com> 1728299095 -0400	commit: First pack to dispay widget onthe page
8967fc96eeb20d05188ddaa10cdc66b9b20e07d8 52689ed69f09a2c9923973fa88931200aa9fe2a3 Romain BOBOE <rboboe@gmail.com> 1728300161 -0400	commit: Fixing nowwidget routes
52689ed69f09a2c9923973fa88931200aa9fe2a3 1be00a99b232ff0e565747f9a6b3e330ec80aaf9 Romain BOBOE <rboboe@gmail.com> 1728332994 -0400	commit: Adding functions to handle display
1be00a99b232ff0e565747f9a6b3e330ec80aaf9 094872780bb3a74190bea6c9bad765e1f335c3c7 Romain BOBOE <rboboe@gmail.com> 1728334592 -0400	commit: Display user informations
094872780bb3a74190bea6c9bad765e1f335c3c7 e57f417cf3b253ceb6236b68b5541db66916988e Romain BOBOE <rboboe@gmail.com> 1728345665 -0400	merge widget-display: Fast-forward
e57f417cf3b253ceb6236b68b5541db66916988e 8c43d8a42ece817bfbf59fbf2d8b6964e1f0118b Romain BOBOE <rboboe@gmail.com> 1728346642 -0400	commit: test file updated
8c43d8a42ece817bfbf59fbf2d8b6964e1f0118b 7b772fbb8aefa65843c4a211883601968157dca1 Romain BOBOE <rboboe@gmail.com> 1728349395 -0400	merge widget-display: Fast-forward
7b772fbb8aefa65843c4a211883601968157dca1 7b61ee26f7d9e80e9aeef26922a1497faf6696b2 Romain BOBOE <rboboe@gmail.com> 1730942742 -0500	merge widget-display: Fast-forward
7b61ee26f7d9e80e9aeef26922a1497faf6696b2 c02b791bfcd4a6cebb80c8f487511572e17d6c7e Romain BOBOE <rboboe@gmail.com> 1730945000 -0500	commit: Adding element to switch to vite
c02b791bfcd4a6cebb80c8f487511572e17d6c7e fd3416e3a89149c7fc05f1a4d68865eeaf084b71 Romain BOBOE <rboboe@gmail.com> 1730945317 -0500	commit: Update packages
fd3416e3a89149c7fc05f1a4d68865eeaf084b71 bff81bdd16b1b6f7037bb68d4744210d8026dac5 Romain BOBOE <rboboe@gmail.com> 1730968695 -0500	commit: Config for vite
bff81bdd16b1b6f7037bb68d4744210d8026dac5 afb7717c4260b398f3606e573c2c3b3d9c6b695a Romain BOBOE <rboboe@gmail.com> 1730969491 -0500	commit: change to vite config to push one file
afb7717c4260b398f3606e573c2c3b3d9c6b695a 1489447e89fdbbedd9ca6a7e559c256e4a91eace Romain BOBOE <rboboe@gmail.com> 1730970657 -0500	commit: New update for settings
1489447e89fdbbedd9ca6a7e559c256e4a91eace 20970748609031534b15e983f06c089dd78d3522 Romain BOBOE <rboboe@gmail.com> 1730971494 -0500	commit: New update for settings
20970748609031534b15e983f06c089dd78d3522 565aa5ab9de48329f16cdb75f0f00b27ba0aff46 Romain BOBOE <rboboe@gmail.com> 1730973922 -0500	commit: Additional style setting
565aa5ab9de48329f16cdb75f0f00b27ba0aff46 056e8b94def36db0254056444a185869768eda68 Romain BOBOE <rboboe@gmail.com> 1730975993 -0500	merge 001-now-panel-opening: Fast-forward
056e8b94def36db0254056444a185869768eda68 e05347b37e39037984ebcbe559d7ad3a9f9d8209 Romain BOBOE <rboboe@gmail.com> 1731052202 -0500	merge 001-now-panel-opening: Fast-forward
e05347b37e39037984ebcbe559d7ad3a9f9d8209 41743e06ad2f6cb9fbbf9f1476536782f2384fe6 Romain BOBOE <rboboe@gmail.com> 1731054416 -0500	commit: Base for using composer
41743e06ad2f6cb9fbbf9f1476536782f2384fe6 6eea0f830c588f8e7bbec5de11001691f6e1482b Romain BOBOE <rboboe@gmail.com> 1731081540 -0500	commit: Configuring a watch
6eea0f830c588f8e7bbec5de11001691f6e1482b 9402856eec5f2f26143b13e6a13c4271be558007 Romain BOBOE <rboboe@gmail.com> 1731200158 -0500	merge 001-cleaning-code: Fast-forward
9402856eec5f2f26143b13e6a13c4271be558007 52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 Romain BOBOE <rboboe@gmail.com> 1731215863 -0500	merge 001-cleaning-code: Fast-forward
52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1 Romain BOBOE <rboboe@gmail.com> 1731266926 -0500	merge 001-cleaning-code: Fast-forward
3c4fc11560c5c5d25a65f0e9ee2dcbdc381484b1 2b4a50aa49146e589c2d842f0aab9666d8aa8723 Romain BOBOE <rboboe@gmail.com> 1731271653 -0500	merge 001-cleaning-code: Fast-forward
2b4a50aa49146e589c2d842f0aab9666d8aa8723 87da0076a2ceb7073aa59e7b298e7d109d64bf36 Romain BOBOE <rboboe@gmail.com> 1731774789 -0500	commit: Last update
87da0076a2ceb7073aa59e7b298e7d109d64bf36 50263c986e1bddb67fcf8f5cb77207aae905c0ed Romain BOBOE <rboboe@gmail.com> 1732132894 -0500	commit: Addding demosite to the repo
50263c986e1bddb67fcf8f5cb77207aae905c0ed 1924f789208eabf7d81a139b918ab52bdbade856 Romain BOBOE <rboboe@gmail.com> 1732248452 -0500	commit: Changin now button speed
1924f789208eabf7d81a139b918ab52bdbade856 361b927a3f1835d33e3f5342731b9c78c55a9f2f Romain BOBOE <rboboe@gmail.com> 1737949726 -0500	commit: feat: update widget components and demo site integration
361b927a3f1835d33e3f5342731b9c78c55a9f2f 0344044b35c94968912bdc14dc0e6cf9328f0047 Romain BOBOE <rboboe@gmail.com> 1737949991 -0500	commit: feat: implement Shadow DOM for style encapsulation
0344044b35c94968912bdc14dc0e6cf9328f0047 6386715cd698cc7ad6938419f1a16d128976e326 Romain BOBOE <rboboe@gmail.com> 1737951169 -0500	commit: refactor: implement state encapsulation
6386715cd698cc7ad6938419f1a16d128976e326 51ea62298b43a424adc82bd223d7866d8cee5213 Romain BOBOE <rboboe@gmail.com> 1737951296 -0500	commit: feat: implement safe DOM manipulation
51ea62298b43a424adc82bd223d7866d8cee5213 80308c335c72357627cc44ff5b581548f820362c Romain BOBOE <rboboe@gmail.com> 1737951732 -0500	commit: feat: add configurable z-index strategy
80308c335c72357627cc44ff5b581548f820362c b627f4b6833d269da9dcf533f62b5d659ee06597 Romain BOBOE <rboboe@gmail.com> 1737953048 -0500	commit: feat: implement robust event management
b627f4b6833d269da9dcf533f62b5d659ee06597 58bf2e961df7da1dd2eabb55db599ba8ccc32c3a Romain BOBOE <rboboe@gmail.com> 1737989195 -0500	commit: feat: improve widget visibility behavior
58bf2e961df7da1dd2eabb55db599ba8ccc32c3a 5dac339ff0cc9923570b3c1b1e1a063e5ad97a38 Romain BOBOE <rboboe@gmail.com> 1737991598 -0500	commit: refactor: prevent CSS namespace collisions
5dac339ff0cc9923570b3c1b1e1a063e5ad97a38 33180e1f05afd18b460d32e6b2fd2818322b02d3 Romain BOBOE <rboboe@gmail.com> 1738004350 -0500	commit: feat: add DOM monitor utility
33180e1f05afd18b460d32e6b2fd2818322b02d3 c9fa4dae10ba354d7aa6d750d0c0e52669ebf9fc Romain BOBOE <rboboe@gmail.com> 1738008160 -0500	commit: fix: resolve TypeScript errors in NowWidget and NowPanelContent components
c9fa4dae10ba354d7aa6d750d0c0e52669ebf9fc 8f519af6798173aeb38b9b7d5e71dd24ba216a82 Romain BOBOE <rboboe@gmail.com> 1738037011 -0500	commit: fix: improve button visibility and z-index handling


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/logs/refs/remotes/origin/main
File type: 
0000000000000000000000000000000000000000 c5f4b4a48baf47a86359714bcef4990b6c280970 Romain BOBOE <rboboe@gmail.com> 1727915317 -0400	update by push
c5f4b4a48baf47a86359714bcef4990b6c280970 1d2404f5e0bb34e26cf34196166e790b6ea9ebcd Romain BOBOE <rboboe@gmail.com> 1727915367 -0400	update by push
1d2404f5e0bb34e26cf34196166e790b6ea9ebcd 89fc12228186df702ba73d54f75c39ab13b885c5 Romain BOBOE <rboboe@gmail.com> 1727961901 -0400	update by push
89fc12228186df702ba73d54f75c39ab13b885c5 8967fc96eeb20d05188ddaa10cdc66b9b20e07d8 Romain BOBOE <rboboe@gmail.com> 1728299099 -0400	update by push
8967fc96eeb20d05188ddaa10cdc66b9b20e07d8 e57f417cf3b253ceb6236b68b5541db66916988e Romain BOBOE <rboboe@gmail.com> 1728345675 -0400	update by push
e57f417cf3b253ceb6236b68b5541db66916988e 7b772fbb8aefa65843c4a211883601968157dca1 Romain BOBOE <rboboe@gmail.com> 1728349402 -0400	update by push
7b772fbb8aefa65843c4a211883601968157dca1 7b61ee26f7d9e80e9aeef26922a1497faf6696b2 Romain BOBOE <rboboe@gmail.com> 1730943125 -0500	update by push
7b61ee26f7d9e80e9aeef26922a1497faf6696b2 fd3416e3a89149c7fc05f1a4d68865eeaf084b71 Romain BOBOE <rboboe@gmail.com> 1730945321 -0500	update by push
fd3416e3a89149c7fc05f1a4d68865eeaf084b71 bff81bdd16b1b6f7037bb68d4744210d8026dac5 Romain BOBOE <rboboe@gmail.com> 1730968701 -0500	update by push
bff81bdd16b1b6f7037bb68d4744210d8026dac5 afb7717c4260b398f3606e573c2c3b3d9c6b695a Romain BOBOE <rboboe@gmail.com> 1730969497 -0500	update by push
afb7717c4260b398f3606e573c2c3b3d9c6b695a 1489447e89fdbbedd9ca6a7e559c256e4a91eace Romain BOBOE <rboboe@gmail.com> 1730970662 -0500	update by push
1489447e89fdbbedd9ca6a7e559c256e4a91eace 20970748609031534b15e983f06c089dd78d3522 Romain BOBOE <rboboe@gmail.com> 1730971498 -0500	update by push
20970748609031534b15e983f06c089dd78d3522 565aa5ab9de48329f16cdb75f0f00b27ba0aff46 Romain BOBOE <rboboe@gmail.com> 1730973926 -0500	update by push
565aa5ab9de48329f16cdb75f0f00b27ba0aff46 056e8b94def36db0254056444a185869768eda68 Romain BOBOE <rboboe@gmail.com> 1730975997 -0500	update by push
056e8b94def36db0254056444a185869768eda68 e05347b37e39037984ebcbe559d7ad3a9f9d8209 Romain BOBOE <rboboe@gmail.com> 1731052210 -0500	update by push
e05347b37e39037984ebcbe559d7ad3a9f9d8209 9402856eec5f2f26143b13e6a13c4271be558007 Romain BOBOE <rboboe@gmail.com> 1731200225 -0500	update by push
9402856eec5f2f26143b13e6a13c4271be558007 52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 Romain BOBOE <rboboe@gmail.com> 1731215881 -0500	update by push
52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6 2b4a50aa49146e589c2d842f0aab9666d8aa8723 Romain BOBOE <rboboe@gmail.com> 1731271669 -0500	update by push
2b4a50aa49146e589c2d842f0aab9666d8aa8723 87da0076a2ceb7073aa59e7b298e7d109d64bf36 Romain BOBOE <rboboe@gmail.com> 1731774796 -0500	update by push
87da0076a2ceb7073aa59e7b298e7d109d64bf36 50263c986e1bddb67fcf8f5cb77207aae905c0ed Romain BOBOE <rboboe@gmail.com> 1732132902 -0500	update by push
50263c986e1bddb67fcf8f5cb77207aae905c0ed 1924f789208eabf7d81a139b918ab52bdbade856 Romain BOBOE <rboboe@gmail.com> 1732248463 -0500	update by push


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/commit-msg.sample
File type: .sample
#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/pre-rebase.sample
File type: .sample
#!/bin/sh
#
# Copyright (c) 2006, 2008 Junio C Hamano
#
# The "pre-rebase" hook is run just before "git rebase" starts doing
# its job, and can prevent the command from running by exiting with
# non-zero status.
#
# The hook is called with the following parameters:
#
# $1 -- the upstream the series was forked from.
# $2 -- the branch being rebased (or empty when rebasing the current branch).
#
# This sample shows how to prevent topic branches that are already
# merged to 'next' branch from getting rebased, because allowing it
# would result in rebasing already published history.

publish=next
basebranch="$1"
if test "$#" = 2
then
	topic="refs/heads/$2"
else
	topic=`git symbolic-ref HEAD` ||
	exit 0 ;# we do not interrupt rebasing detached HEAD
fi

case "$topic" in
refs/heads/??/*)
	;;
*)
	exit 0 ;# we do not interrupt others.
	;;
esac

# Now we are dealing with a topic branch being rebased
# on top of master.  Is it OK to rebase it?

# Does the topic really exist?
git show-ref -q "$topic" || {
	echo >&2 "No such branch $topic"
	exit 1
}

# Is topic fully merged to master?
not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
if test -z "$not_in_master"
then
	echo >&2 "$topic is fully merged to master; better remove it."
	exit 1 ;# we could allow it, but there is no point.
fi

# Is topic ever merged to next?  If so you should not be rebasing it.
only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
only_next_2=`git rev-list ^master           ${publish} | sort`
if test "$only_next_1" = "$only_next_2"
then
	not_in_topic=`git rev-list "^$topic" master`
	if test -z "$not_in_topic"
	then
		echo >&2 "$topic is already up to date with master"
		exit 1 ;# we could allow it, but there is no point.
	else
		exit 0
	fi
else
	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
	/usr/bin/perl -e '
		my $topic = $ARGV[0];
		my $msg = "* $topic has commits already merged to public branch:\n";
		my (%not_in_next) = map {
			/^([0-9a-f]+) /;
			($1 => 1);
		} split(/\n/, $ARGV[1]);
		for my $elem (map {
				/^([0-9a-f]+) (.*)$/;
				[$1 => $2];
			} split(/\n/, $ARGV[2])) {
			if (!exists $not_in_next{$elem->[0]}) {
				if ($msg) {
					print STDERR $msg;
					undef $msg;
				}
				print STDERR " $elem->[1]\n";
			}
		}
	' "$topic" "$not_in_next" "$not_in_master"
	exit 1
fi

<<\DOC_END

This sample hook safeguards topic branches that have been
published from being rewound.

The workflow assumed here is:

 * Once a topic branch forks from "master", "master" is never
   merged into it again (either directly or indirectly).

 * Once a topic branch is fully cooked and merged into "master",
   it is deleted.  If you need to build on top of it to correct
   earlier mistakes, a new topic branch is created by forking at
   the tip of the "master".  This is not strictly necessary, but
   it makes it easier to keep your history simple.

 * Whenever you need to test or publish your changes to topic
   branches, merge them into "next" branch.

The script, being an example, hardcodes the publish branch name
to be "next", but it is trivial to make it configurable via
$GIT_DIR/config mechanism.

With this workflow, you would want to know:

(1) ... if a topic branch has ever been merged to "next".  Young
    topic branches can have stupid mistakes you would rather
    clean up before publishing, and things that have not been
    merged into other branches can be easily rebased without
    affecting other people.  But once it is published, you would
    not want to rewind it.

(2) ... if a topic branch has been fully merged to "master".
    Then you can delete it.  More importantly, you should not
    build on top of it -- other people may already want to
    change things related to the topic as patches against your
    "master", so if you need further changes, it is better to
    fork the topic (perhaps with the same name) afresh from the
    tip of "master".

Let's look at this example:

		   o---o---o---o---o---o---o---o---o---o "next"
		  /       /           /           /
		 /   a---a---b A     /           /
		/   /               /           /
	       /   /   c---c---c---c B         /
	      /   /   /             \         /
	     /   /   /   b---b C     \       /
	    /   /   /   /             \     /
    ---o---o---o---o---o---o---o---o---o---o---o "master"


A, B and C are topic branches.

 * A has one fix since it was merged up to "next".

 * B has finished.  It has been fully merged up to "master" and "next",
   and is ready to be deleted.

 * C has not merged to "next" at all.

We would want to allow C to be rebased, refuse A, and encourage
B to be deleted.

To compute (1):

	git rev-list ^master ^topic next
	git rev-list ^master        next

	if these match, topic has not merged in next at all.

To compute (2):

	git rev-list master..topic

	if this is empty, it is fully merged to "master".

DOC_END


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/sendemail-validate.sample
File type: .sample
#!/bin/sh

# An example hook script to validate a patch (and/or patch series) before
# sending it via email.
#
# The hook should exit with non-zero status after issuing an appropriate
# message if it wants to prevent the email(s) from being sent.
#
# To enable this hook, rename this file to "sendemail-validate".
#
# By default, it will only check that the patch(es) can be applied on top of
# the default upstream branch without conflicts in a secondary worktree. After
# validation (successful or not) of the last patch of a series, the worktree
# will be deleted.
#
# The following config variables can be set to change the default remote and
# remote ref that are used to apply the patches against:
#
#   sendemail.validateRemote (default: origin)
#   sendemail.validateRemoteRef (default: HEAD)
#
# Replace the TODO placeholders with appropriate checks according to your
# needs.

validate_cover_letter () {
	file="$1"
	# TODO: Replace with appropriate checks (e.g. spell checking).
	true
}

validate_patch () {
	file="$1"
	# Ensure that the patch applies without conflicts.
	git am -3 "$file" || return
	# TODO: Replace with appropriate checks for this patch
	# (e.g. checkpatch.pl).
	true
}

validate_series () {
	# TODO: Replace with appropriate checks for the whole series
	# (e.g. quick build, coding style checks, etc.).
	true
}

# main -------------------------------------------------------------------------

if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
then
	remote=$(git config --default origin --get sendemail.validateRemote) &&
	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
	git config --replace-all sendemail.validateWorktree "$worktree"
else
	worktree=$(git config --get sendemail.validateWorktree)
fi || {
	echo "sendemail-validate: error: failed to prepare worktree" >&2
	exit 1
}

unset GIT_DIR GIT_WORK_TREE
cd "$worktree" &&

if grep -q "^diff --git " "$1"
then
	validate_patch "$1"
else
	validate_cover_letter "$1"
fi &&

if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
then
	git config --unset-all sendemail.validateWorktree &&
	trap 'git worktree remove -ff "$worktree"' EXIT &&
	validate_series
fi


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/pre-commit.sample
File type: .sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff-index --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/applypatch-msg.sample
File type: .sample
#!/bin/sh
#
# An example hook script to check the commit log message taken by
# applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.  The hook is
# allowed to edit the commit message file.
#
# To enable this hook, rename this file to "applypatch-msg".

. git-sh-setup
commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
:


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/fsmonitor-watchman.sample
File type: .sample
#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	my $last_update_line = "";
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
		$last_update_line = qq[\n"since": $last_update_token,];
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {$last_update_line
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/pre-receive.sample
File type: .sample
#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/prepare-commit-msg.sample
File type: .sample
#!/bin/sh
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

# This hook includes three examples. The first one removes the
# "# Please enter the commit message..." help message.
#
# The second includes the output of "git diff --name-status -r"
# into the message, just before the "git status" output.  It is
# commented because it doesn't cope with --amend or with squashed
# commits.
#
# The third example adds a Signed-off-by line to the message, that can
# still be edited.  This is rarely a good idea.

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"

# case "$COMMIT_SOURCE,$SHA1" in
#  ,|template,)
#    /usr/bin/perl -i.bak -pe '
#       print "\n" . `git diff --cached --name-status -r`
# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
#  *) ;;
# esac

# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
# if test -z "$COMMIT_SOURCE"
# then
#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
# fi


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/post-update.sample
File type: .sample
#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/pre-merge-commit.sample
File type: .sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git merge" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message to
# stderr if it wants to stop the merge commit.
#
# To enable this hook, rename this file to "pre-merge-commit".

. git-sh-setup
test -x "$GIT_DIR/hooks/pre-commit" &&
        exec "$GIT_DIR/hooks/pre-commit"
:


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/pre-applypatch.sample
File type: .sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed
# by applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-applypatch".

. git-sh-setup
precommit="$(git rev-parse --git-path hooks/pre-commit)"
test -x "$precommit" && exec "$precommit" ${1+"$@"}
:


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/pre-push.sample
File type: .sample
#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/update.sample
File type: .sample
#!/bin/sh
#
# An example hook script to block unannotated tags from entering.
# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
#
# To enable this hook, rename this file to "update".
#
# Config
# ------
# hooks.allowunannotated
#   This boolean sets whether unannotated tags will be allowed into the
#   repository.  By default they won't be.
# hooks.allowdeletetag
#   This boolean sets whether deleting tags will be allowed in the
#   repository.  By default they won't be.
# hooks.allowmodifytag
#   This boolean sets whether a tag may be modified after creation. By default
#   it won't be.
# hooks.allowdeletebranch
#   This boolean sets whether deleting branches will be allowed in the
#   repository.  By default they won't be.
# hooks.denycreatebranch
#   This boolean sets whether remotely creating branches will be denied
#   in the repository.  By default this is allowed.
#

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Config
allowunannotated=$(git config --type=bool hooks.allowunannotated)
allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
allowmodifytag=$(git config --type=bool hooks.allowmodifytag)

# check for no description
projectdesc=$(sed -e '1q' "$GIT_DIR/description")
case "$projectdesc" in
"Unnamed repository"* | "")
	echo "*** Project description file hasn't been set" >&2
	exit 1
	;;
esac

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/tags/*,commit)
		# un-annotated tag
		short_refname=${refname##refs/tags/}
		if [ "$allowunannotated" != "true" ]; then
			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
			exit 1
		fi
		;;
	refs/tags/*,delete)
		# delete tag
		if [ "$allowdeletetag" != "true" ]; then
			echo "*** Deleting a tag is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/tags/*,tag)
		# annotated tag
		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
		then
			echo "*** Tag '$refname' already exists." >&2
			echo "*** Modifying a tag is not allowed in this repository." >&2
			exit 1
		fi
		;;
	refs/heads/*,commit)
		# branch
		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
			echo "*** Creating a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/heads/*,delete)
		# delete branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/remotes/*,commit)
		# tracking branch
		;;
	refs/remotes/*,delete)
		# delete tracking branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

# --- Finished
exit 0


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/hooks/push-to-checkout.sample
File type: .sample
#!/bin/sh

# An example hook script to update a checked-out tree on a git push.
#
# This hook is invoked by git-receive-pack(1) when it reacts to git
# push and updates reference(s) in its repository, and when the push
# tries to update the branch that is currently checked out and the
# receive.denyCurrentBranch configuration variable is set to
# updateInstead.
#
# By default, such a push is refused if the working tree and the index
# of the remote repository has any difference from the currently
# checked out commit; when both the working tree and the index match
# the current commit, they are updated to match the newly pushed tip
# of the branch. This hook is to be used to override the default
# behaviour; however the code below reimplements the default behaviour
# as a starting point for convenient modification.
#
# The hook receives the commit with which the tip of the current
# branch is going to be updated:
commit=$1

# It can exit with a non-zero status to refuse the push (when it does
# so, it must not modify the index or the working tree).
die () {
	echo >&2 "$*"
	exit 1
}

# Or it can make any necessary changes to the working tree and to the
# index to bring them to the desired state when the tip of the current
# branch is updated to the new commit, and exit with a zero status.
#
# For example, the hook can simply run git read-tree -u -m HEAD "$1"
# in order to emulate git fetch that is run in the reverse direction
# with git push, as the two-tree form of git read-tree -u -m is
# essentially the same as git switch or git checkout that switches
# branches while keeping the local changes in the working tree that do
# not interfere with the difference between the branches.

# The below is a more-or-less exact translation to shell of the C code
# for the default behaviour for git's push-to-checkout hook defined in
# the push_to_deploy() function in builtin/receive-pack.c.
#
# Note that the hook will be executed from the repository directory,
# not from the working tree, so if you want to perform operations on
# the working tree, you will have to adapt your code accordingly, e.g.
# by adding "cd .." or using relative paths.

if ! git update-index -q --ignore-submodules --refresh
then
	die "Up-to-date check failed"
fi

if ! git diff-files --quiet --ignore-submodules --
then
	die "Working directory has unstaged changes"
fi

# This is a rough translation of:
#
#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
if git cat-file -e HEAD 2>/dev/null
then
	head=HEAD
else
	head=$(git hash-object -t tree --stdin </dev/null)
fi

if ! git diff-index --quiet --cached --ignore-submodules $head --
then
	die "Working directory has staged changes"
fi

if ! git read-tree -u -m "$commit"
then
	die "Could not update working tree to new HEAD"
fi


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/refs/stash
File type: 
e508193fd472ede52cbd964e71bbb5c5e4c0e126


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/refs/heads/001-now-panel-opening
File type: 
e05347b37e39037984ebcbe559d7ad3a9f9d8209


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/refs/heads/001-cleaning-code
File type: 
2b4a50aa49146e589c2d842f0aab9666d8aa8723


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/refs/heads/001-a-button-display
File type: 
52bd1d0ca8e2dddad70ef7cbf3afbf8a9357e3b6


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/refs/heads/widget-display
File type: 
7b61ee26f7d9e80e9aeef26922a1497faf6696b2


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/refs/heads/main
File type: 
8f519af6798173aeb38b9b7d5e71dd24ba216a82


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/.git/refs/remotes/origin/main
File type: 
1924f789208eabf7d81a139b918ab52bdbade856


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/index.html
File type: .html
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Widget Test</title>
    <style>
      body {
        background-color: #ece7e7;
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
      }
      h1,
      h2 {
        text-align: center;
      }
      h1 {
        font-size: 24px;
        margin-top: 20px;
      }
      section {
        padding: 40px 20px;
        margin: 0;
        height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
      .hero {
        background-color: #007bff;
        color: white;
      }
      .features {
        background-color: #f8f9fa;
      }
      .testimonials {
        background-color: #e9ecef;
      }
      .cta {
        background-color: #28a745;
        color: white;
      }
    </style>
  </head>
  <body>
    <h1>Testing NowNowNow Widget</h1>

    <section class="hero">
      <h2>Welcome to Our Landing Page</h2>
      <p>Experience the power of our amazing product!</p>
    </section>

    <section class="features">
      <h2>Key Features</h2>
      <ul>
        <li>Innovative Design</li>
        <li>User-Friendly Interface</li>
        <li>Powerful Performance</li>
      </ul>
    </section>

    <section class="testimonials">
      <h2>What Our Customers Say</h2>
      <blockquote>"This product changed my life!" - Jane Doe</blockquote>
      <blockquote>
        "I can't imagine working without it." - John Smith
      </blockquote>
    </section>

    <section class="cta">
      <h2>Ready to Get Started?</h2>
      <button>Sign Up Now</button>
    </section>

    <script>
      console.log("Before widget script");
    </script>
    <script
      defer
      src="http://localhost:5173/dist/now-widget.js"
      now-data-org-id="ErOeaXjKcLJ"
      now-data-token="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJFck9lYVhqS2NMSiIsImlhdCI6MTczMDkxNDk3MSwiZXhwIjoxNzMzNTA2OTcxfQ.TGsyZ2qb731tTjy8jdgRwC3ghDXDyWfhrYnL7gTi6sk"
      now-data-theme="dark"
      now-data-position="left"
      now-data-button-color="white"
    ></script>
  </body>
</html>


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/global.d.ts
File type: .ts
declare module '*.css' {
    const content: string;
    export default content;
}

declare module '*.css?inline' {
    const content: string;
    export default content;
}

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/index.ts
File type: .ts
import { initializeNowWidget, teardownNowWidget } from './components/NowWidget';
import './styles/nowWidgetStyles.css';
import { getScriptAttributes } from './utils/nowWidgetUtils';
import { pingServer } from './utils/pingServer';

interface NowWidgetConfig {
    orgId: string;
    token: string;
    theme?: 'light' | 'dark';
    position?: 'left' | 'right';
    buttonColor?: string;
    buttonSize?: number;
}

let isInitialized = false;

/**
 * Initializes the NowWidget by fetching script attributes and setting up the widget.
 */
const init = async (): Promise<void> => {
    console.log('[NowWidget] Starting initialization...');
    
    // Check if widget container already exists
    const existingContainer = document.getElementById('now-widget-container');
    console.log('[NowWidget] Existing container:', existingContainer);
    
    if (existingContainer) {
        console.log('[NowWidget] Widget already initialized.');
        return;
    }

    // Get script attributes
    const attributes = getScriptAttributes();
    console.log('[NowWidget] Retrieved attributes:', attributes);
    
    if (!attributes) {
        console.error('[NowWidget] No valid attributes found. Widget initialization failed.');
        return;
    }
    
    const { orgId, token, theme, position, buttonColor } = attributes;
    
    // Validate theme and position
    const validatedTheme = theme === 'dark' || theme === 'light' ? theme : 'light';
    const validatedPosition = position === 'left' || position === 'right' ? position : 'right';

    console.log('[NowWidget] Initializing with config:', {
        orgId,
        theme: validatedTheme,
        position: validatedPosition,
        buttonColor
    });

    // Initialize the widget with the fetched configuration
    await initialize({
        orgId,
        token,
        theme: validatedTheme,
        position: validatedPosition,
        buttonColor
    });

    // Check if widget elements are present
    const widgetButton = document.querySelector('#now-widget-button-container');
    const widgetPanel = document.querySelector('#now-widget-panel');
    
    console.log('[NowWidget] Elements after initialization:', {
        button: widgetButton,
        panel: widgetPanel
    });

    // Start pinging the server
    pingServer();
};

// Initialize the widget when the DOM is fully loaded
document.addEventListener('DOMContentLoaded', () => {
    console.log('[NowWidget] DOM Content Loaded, initializing widget...');
    init();
});

// Also try to initialize on window load as a fallback
window.addEventListener('load', () => {
    console.log('[NowWidget] Window loaded, checking initialization...');
    if (!document.getElementById('now-widget-container')) {
        init();
    }
});

export function initialize(config: NowWidgetConfig): void {
    if (isInitialized) {
        console.warn('NowWidget is already initialized');
        return;
    }

    if (!config.orgId || !config.token) {
        throw new Error('orgId and token are required');
    }

    initializeNowWidget(config);
    isInitialized = true;
}

export function teardown(): void {
    if (!isInitialized) {
        console.warn('NowWidget is not initialized');
        return;
    }

    teardownNowWidget();
    isInitialized = false;
}

export default {
    initialize,
    teardown
};

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/types/env.d.ts
File type: .ts
/// <reference types="vite/client" />

interface ImportMetaEnv {
    readonly NODE_ENV: string;
    readonly API_BASE?: string;
}

interface ImportMeta {
    readonly env: ImportMetaEnv;
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/types/types.ts
File type: .ts
export interface User {
    id: string;
    name: string;
    email: string;
    emailVerified: boolean;
    avatar: string;
    status: string;
    displayName?: string;
    bio?: string;
    followers: number;
}

export interface OrgInfo {
    id: string;
    name: string;
    email: string;
    emailVerified: boolean;
    avatar: string;
    status: string;
    displayName?: string;
    bio?: string;
    followers: number;
}

export interface Post {
    id: string;
    content: string;
    user: OrgInfo;
    createdAt: string;
    timestamp: string;
    attachments: Attachment[];
    comments: Comment[];
    _count: {
        likes: number;
        comments: number;
    };
}

export interface UserPost {
    id: string;
    content: string;
    user: OrgInfo;
    timestamp: string;
    attachments: Attachment[];
    comments: Comment[];
    _count?: {
        likes: number;
        comments: number;
    };
}

export interface Attachment {
    id: string;
    type: string;
    url: string;
}

export interface Comment {
    id: string;
    content: string;
    user: OrgInfo;
    createdAt: string;
    post?: Post;
}

export interface ButtonConfig {
    position?: 'left' | 'right';
    theme?: 'light' | 'dark';
    size?: number;
    color?: string;
}

export interface ScriptAttributes {
    token?: string;
    position?: string;
    theme?: string;
    buttonColor?: string;
}

export interface Like {
    id: string;
    user: OrgInfo;
    post?: Post;
    comment?: Comment;
    createdAt: string;
}

export interface Bookmark {
    id: string;
    user: OrgInfo;
    post: Post;
    createdAt: Date;
}

export interface Notification {
    id: string;
    type: 'like' | 'comment' | 'follow' | 'mention';
    user: OrgInfo;
    post?: Post;
    comment?: Comment;
    isRead: boolean;
    createdAt: string;
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/types/css.d.ts
File type: .ts
declare module '*.css' {
    const content: string;
    export default content;
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/types/theme.ts
File type: .ts
interface ThemeConfig {
    background: string;
    text: string;
    textSecondary: string;
    border: string;
    hover: string;
    postBg: string;
    buttonColor: string;
}

export const THEMES: Record<'light' | 'dark', ThemeConfig> = {
    light: {
        background: '#ffffff',
        text: '#000000',
        textSecondary: '#666666',
        border: '#e0e0e0',
        hover: '#f5f5f5',
        postBg: '#f8f8f8',
        buttonColor: '#000000'
    },
    dark: {
        background: '#1c1c1c',
        text: '#ffffff',
        textSecondary: '#a0a0a0',
        border: '#333333',
        hover: '#2a2a2a',
        postBg: '#242424',
        buttonColor: '#ffffff'
    }
};



--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/types/config.ts
File type: .ts
export interface WidgetConfig {
    orgId: string;
    token: string;
    theme?: 'light' | 'dark';
    position?: 'left' | 'right';
    buttonColor?: string;
    buttonSize?: number;
    zIndex?: {
        button?: number;
        panel?: number;
        overlay?: number;
    };
}

export const DEFAULT_Z_INDICES = {
    button: 2147483647,  // Max valid z-index
    panel: 2147483646,   // One less than button
    overlay: 2147483645  // One less than panel
} as const;

export type ThemeVariables = {
    '--now-widget-button-bg'?: string;
    '--now-widget-button-color'?: string;
    '--now-widget-panel-bg'?: string;
    '--now-widget-text-color'?: string;
    '--now-widget-button-size'?: string;
    '--z-index-button'?: string;
    '--z-index-panel'?: string;
    '--z-index-overlay'?: string;
};


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/core/WidgetCore.ts
File type: .ts
import { EventEmitter } from './EventEmitter';
import { WidgetStore } from './WidgetStore';

export class WidgetCore {
  private store: WidgetStore;
  private events: EventEmitter;

  constructor() {
    this.store = new WidgetStore();
    this.events = new EventEmitter();
  }

  public dispatch(action: string, payload: any): void {
    this.store.dispatch(action, payload);
  }

  public subscribe(event: string, callback: Function): void {
    this.events.on(event, callback);
  }

  public unsubscribe(event: string, callback: Function): void {
    this.events.off(event, callback);
  }
}

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/core/EventEmitter.ts
File type: .ts
export class EventEmitter {
  private events: Map<string, Function[]>;

  constructor() {
    this.events = new Map();
  }

  public on(event: string, callback: Function): void {
    if (!this.events.has(event)) {
      this.events.set(event, []);
    }
    this.events.get(event)?.push(callback);
  }

  public off(event: string, callback: Function): void {
    const callbacks = this.events.get(event);
    if (callbacks) {
      this.events.set(event, callbacks.filter(cb => cb !== callback));
    }
  }

  public emit(event: string, data?: any): void {
    this.events.get(event)?.forEach(callback => callback(data));
  }
}

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/core/WidgetStore.ts
File type: .ts
import { Post, User } from '../types/types';

interface State {
  user: User | null;
  posts: Post[];
  isLoading: boolean;
  error: string | null;
  isPanelOpen: boolean;
}

export class WidgetStore {
  private state: State;
  private listeners: ((state: State) => void)[];

  constructor() {
    this.state = {
      user: null,
      posts: [],
      isLoading: false,
      error: null,
      isPanelOpen: false
    };
    this.listeners = [];
  }

  public getState(): State {
    return { ...this.state };
  }

  public subscribe(listener: (state: State) => void): () => void {
    this.listeners.push(listener);
    return () => {
      this.listeners = this.listeners.filter(l => l !== listener);
    };
  }

  public dispatch(action: string, payload: any): void {
    switch (action) {
      case 'SET_ORG':
        this.state.user = payload;
        break;
      case 'SET_POSTS':
        this.state.posts = payload;
        break;
      case 'SET_LOADING':
        this.state.isLoading = payload;
        break;
      case 'SET_ERROR':
        this.state.error = payload;
        break;
      case 'TOGGLE_PANEL':
        this.state.isPanelOpen = payload;
        break;
    }
    this.notify();
  }

  private notify(): void {
    this.listeners.forEach(listener => listener(this.state));
  }
}

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/test/auth.test.ts
File type: .ts
import { describe, it, expect, vi, beforeEach } from 'vitest';
import { fetchOrgInfo, fetchUserPosts, updateStatus } from '../api/auth';
import { environment } from '../config/environment';

// Mock fetch
global.fetch = vi.fn();

describe('Auth API', () => {
    beforeEach(() => {
        vi.clearAllMocks();
        environment.IS_BROWSER = true;
        environment.IS_DEVELOPMENT = false;
    });

    const mockUser = {
        id: '123',
        name: 'Test User',
        displayName: 'Test',
        bio: 'Test bio',
        image: 'test.jpg',
        email: 'test@test.com',
        emailVerified: true,
        followers: 10,
        avatar: 'avatar.jpg',
        status: 'online'
    };

    const mockPost = {
        id: '456',
        content: 'Test post',
        user: mockUser,
        createdAt: new Date().toISOString(),
        timestamp: new Date().toISOString(),
        _count: {
            likes: 5,
            comments: 3
        }
    };

    describe('fetchOrgInfo', () => {
        it('should fetch user info successfully', async () => {
            (fetch as any).mockResolvedValueOnce({
                ok: true,
                json: () => Promise.resolve({ user: mockUser })
            });

            const result = await fetchOrgInfo('test-token');

            expect(result).toEqual({
                id: mockUser.id,
                name: mockUser.name,
                avatar: mockUser.avatar,
                status: mockUser.status,
                displayName: mockUser.displayName,
                bio: mockUser.bio
            });
        });

        it('should handle fetch error', async () => {
            (fetch as any).mockRejectedValueOnce(new Error('Network error'));

            await expect(fetchOrgInfo('test-token')).rejects.toThrow('Network error');
        });
    });

    describe('fetchUserPosts', () => {
        it('should fetch user posts successfully', async () => {
            (fetch as any).mockResolvedValueOnce({
                ok: true,
                json: () => Promise.resolve({ posts: [mockPost] })
            });

            const result = await fetchUserPosts('test-token');

            expect(result).toEqual([{
                id: mockPost.id,
                content: mockPost.content,
                timestamp: mockPost.timestamp,
                user: mockPost.user,
                attachments: undefined,
                comments: undefined
            }]);
        });

        it('should handle fetch error', async () => {
            (fetch as any).mockRejectedValueOnce(new Error('Network error'));

            await expect(fetchUserPosts('test-token')).rejects.toThrow('Network error');
        });
    });

    describe('updateStatus', () => {
        it('should update status successfully', async () => {
            (fetch as any).mockResolvedValueOnce({
                ok: true,
                json: () => Promise.resolve({ success: true })
            });

            await expect(updateStatus('test-token', 'new status')).resolves.toBeUndefined();
        });

        it('should handle fetch error', async () => {
            (fetch as any).mockRejectedValueOnce(new Error('Network error'));

            await expect(updateStatus('test-token', 'new status')).rejects.toThrow('Network error');
        });
    });

    describe('environment checks', () => {
        it('should throw error when not in browser environment', async () => {
            environment.IS_BROWSER = false;

            await expect(fetchOrgInfo('test-token')).rejects.toThrow('API calls are not supported in non-browser environments');
            await expect(fetchUserPosts('test-token')).rejects.toThrow('API calls are not supported in non-browser environments');
            await expect(updateStatus('test-token', 'new status')).rejects.toThrow('API calls are not supported in non-browser environments');
        });
    });
});

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/test/nowWidget.test.ts
File type: .ts
import { createWidgetContainer, getScriptAttributes, togglePanel } from '../utils/nowWidgetUtils';

describe('Widget Utilities', () => {
    beforeEach(() => {
        document.body.innerHTML = '';
    });

    describe('createWidgetContainer', () => {
        it('should create and append the widget container if it does not exist', () => {
            const container = createWidgetContainer();
            expect(container).toBeDefined();
            expect(container.id).toBe('now-widget-container');
            expect(document.getElementById('now-widget-container')).toBe(container);
        });

        it('should return the existing widget container if it exists', () => {
            const existingContainer = document.createElement('div');
            existingContainer.id = 'now-widget-container';
            document.body.appendChild(existingContainer);

            const container = createWidgetContainer();
            expect(container).toBe(existingContainer);
            expect(document.querySelectorAll('#now-widget-container').length).toBe(1);
        });
    });

    describe('getScriptAttributes', () => {
        it('should return null if script with required attributes is not found', () => {
            const result = getScriptAttributes();
            expect(result).toBeNull();
        });

        it('should return attributes when script tag has required data attributes', () => {
            const script = document.createElement('script');
            script.setAttribute('now-data-org-id', 'testUser');
            script.setAttribute('now-data-token', 'testToken');
            script.setAttribute('now-data-theme', 'dark');
            script.setAttribute('now-data-position', 'left');
            script.setAttribute('now-data-button-color', '#ff0000');
            document.body.appendChild(script);

            const result = getScriptAttributes();
            expect(result).toEqual({
                orgId: 'testUser',
                token: 'testToken',
                theme: 'dark',
                position: 'left',
                buttonColor: '#ff0000',
            });
        });
    });

    describe('togglePanel', () => {
        it('should add the "open" class when isOpen is true', () => {
            const container = document.createElement('div');
            const panel = document.createElement('div');
            const hostContent = document.createElement('div');
            const overlay = document.createElement('div');

            panel.className = 'now-widget-panel';
            hostContent.id = 'now-widget-host-content';
            overlay.className = 'now-widget-overlay';

            container.appendChild(panel);
            document.body.appendChild(hostContent);
            document.body.appendChild(overlay);

            togglePanel(true, container);

            expect(panel.classList.contains('open')).toBe(true);
            expect(hostContent.classList.contains('panel-open')).toBe(true);
            expect(overlay.classList.contains('visible')).toBe(true);
        });

        it('should remove the "open" class when isOpen is false', () => {
            const container = document.createElement('div');
            const panel = document.createElement('div');
            const hostContent = document.createElement('div');
            const overlay = document.createElement('div');

            panel.className = 'now-widget-panel open';
            hostContent.id = 'now-widget-host-content';
            hostContent.className = 'panel-open';
            overlay.className = 'now-widget-overlay visible';

            container.appendChild(panel);
            document.body.appendChild(hostContent);
            document.body.appendChild(overlay);

            togglePanel(false, container);

            expect(panel.classList.contains('open')).toBe(false);
            expect(hostContent.classList.contains('panel-open')).toBe(false);
            expect(overlay.classList.contains('visible')).toBe(false);
        });
    });
});

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/config/environment.ts
File type: .ts
interface EnvironmentConfig {
    API_BASE: string;
    IS_BROWSER: boolean;
    IS_DEVELOPMENT: boolean;
}

// Check if we're in a browser environment
const isBrowser = typeof window !== 'undefined' && !!window.document;

// Get environment variables safely
const getEnvVar = (key: keyof ImportMetaEnv): string | undefined => {
    // In browser environment
    if (isBrowser) {
        // Try to get from window.__ENV__ if it exists
        const envFromWindow = (window as any).__ENV__?.[key];
        if (envFromWindow) return envFromWindow;

        // Fallback to Vite's injected env vars
        const envFromVite = import.meta.env[key];
        if (envFromVite) return envFromVite;
    }
    return undefined;
};

/**
 * Get the appropriate API base URL based on environment
 */
const getApiBaseUrl = (): string => {
    // Check for explicitly set API URL first
    const configuredApiBase = getEnvVar('API_BASE');
    if (configuredApiBase) {
        return configuredApiBase;
    }

    // Check if we're in development mode
    const isDev = getEnvVar('NODE_ENV') === 'development' || 
                 (isBrowser && window.location.hostname === 'localhost');

    // Use development URL if in development mode
    if (isDev) {
        return 'http://localhost:3000';
    }

    // Default to production URL
    return 'https://nownownow.io';
};

const getEnvironment = (): EnvironmentConfig => ({
    API_BASE: getApiBaseUrl(),
    IS_BROWSER: isBrowser,
    IS_DEVELOPMENT: getEnvVar('NODE_ENV') === 'development' || 
                   (isBrowser && window.location.hostname === 'localhost')
});

export const environment = getEnvironment();

// API endpoints
export const API_ENDPOINTS = {
    ORG_INFO: `${environment.API_BASE}/api/users/{orgId}`,
    ORG_POSTS: `${environment.API_BASE}/api/users/{orgId}/posts`,
    UPDATE_STATUS: `${environment.API_BASE}/api/status`
} as const;

// Log API base in development for debugging
if (environment.IS_DEVELOPMENT) {
    console.log('API Base URL:', environment.API_BASE);
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/config/security.ts
File type: .ts
export const securityConfig = {
    cors: {
        allowedOrigins: ['*'] as readonly string[],
        allowedMethods: ['GET', 'POST', 'OPTIONS'] as const,
        allowedHeaders: [
            'Content-Type',
            'Authorization',
            'X-Client-Version',
            'X-Environment'
        ] as const,
        exposedHeaders: [] as const,
        credentials: true,
        maxAge: 86400 // 24 hours
    },
    headers: {
        'Strict-Transport-Security': 'max-age=31536000; includeSubDomains',
        'X-Content-Type-Options': 'nosniff',
        'X-Frame-Options': 'DENY',
        'X-XSS-Protection': '1; mode=block',
        'Referrer-Policy': 'strict-origin-when-cross-origin',
        'Content-Security-Policy': [
            "default-src 'self'",
            "script-src 'self' 'unsafe-inline' 'unsafe-eval'",
            "style-src 'self' 'unsafe-inline'",
            "img-src 'self' data: https:",
            "connect-src 'self' https:",
            "font-src 'self'",
            "object-src 'none'",
            "media-src 'none'",
            "frame-src 'none'"
        ].join('; ')
    }
} as const;

export function getSecurityHeaders(): Record<string, string> {
    return securityConfig.headers;
}

export function getCorsHeaders(origin: string): Record<string, string> {
    const isAllowedOrigin = origin === '*' || securityConfig.cors.allowedOrigins.includes(origin);

    if (!isAllowedOrigin) {
        return {};
    }

    return {
        'Access-Control-Allow-Origin': origin,
        'Access-Control-Allow-Methods': securityConfig.cors.allowedMethods.join(', '),
        'Access-Control-Allow-Headers': securityConfig.cors.allowedHeaders.join(', '),
        'Access-Control-Expose-Headers': securityConfig.cors.exposedHeaders.join(', '),
        'Access-Control-Allow-Credentials': securityConfig.cors.credentials.toString(),
        'Access-Control-Max-Age': securityConfig.cors.maxAge.toString()
    };
}

export function validateOrigin(origin: string): boolean {
    if (origin === '*') {
        return true;
    }
    return securityConfig.cors.allowedOrigins.includes(origin);
}

export function sanitizeInput(input: string): string {
    return input
        .replace(/[<>]/g, '') // Remove < and > to prevent HTML injection
        .replace(/['"]/g, '') // Remove quotes to prevent script injection
        .trim();
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/utils/nowCache.ts
File type: .ts


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/utils/eventManager.ts
File type: .ts
interface EventHandler<K extends keyof HTMLElementEventMap> {
    (event: HTMLElementEventMap[K]): void;
}

interface EventRegistryItem<K extends keyof HTMLElementEventMap> {
    type: K;
    handler: EventHandler<K>;
    options?: boolean | AddEventListenerOptions;
}

type EventRegistry = WeakMap<EventTarget, Set<EventRegistryItem<keyof HTMLElementEventMap>>>;

const createEventRegistry = (): EventRegistry => new WeakMap();

const registry = createEventRegistry();

/**
 * Add an event listener with automatic registration
 */
function addListener<K extends keyof HTMLElementEventMap>(
    target: EventTarget,
    type: K,
    handler: EventHandler<K>,
    options?: boolean | AddEventListenerOptions
): () => void {
    // Initialize set for target if it doesn't exist
    if (!registry.has(target)) {
        registry.set(target, new Set());
    }

    const registryItem = {
        type,
        handler,
        options
    } as EventRegistryItem<keyof HTMLElementEventMap>;

    registry.get(target)?.add(registryItem);
    target.addEventListener(type, handler as EventListener, options);

    // Return cleanup function
    return () => removeListener(target, type, handler, options);
}

/**
 * Remove a specific event listener
 */
function removeListener<K extends keyof HTMLElementEventMap>(
    target: EventTarget,
    type: K,
    handler: EventHandler<K>,
    options?: boolean | AddEventListenerOptions
): void {
    const items = registry.get(target);
    if (!items) return;

    // Remove the actual event listener
    target.removeEventListener(type, handler as EventListener, options);

    // Find and remove the specific listener
    items.forEach((item) => {
        if (
            item.type === type &&
            item.handler === handler &&
            item.options === options
        ) {
            items.delete(item);
        }
    });

    // Clean up empty sets
    if (items.size === 0) {
        registry.delete(target);
    }
}

/**
 * Remove all event listeners for a specific target
 */
function removeAllListeners(target: EventTarget): void {
    const items = registry.get(target);
    if (!items) return;

    items.forEach((item) => {
        target.removeEventListener(
            item.type,
            item.handler as EventListener,
            item.options
        );
    });

    registry.delete(target);
}

/**
 * Remove all registered event listeners
 */
function cleanup(): void {
    // WeakMap doesn't support iteration, so we need to keep track of targets separately
    const targets = new Set<EventTarget>();
    
    // Get all targets from the registry
    for (const target of Array.from(document.querySelectorAll('*'))) {
        if (registry.has(target)) {
            targets.add(target);
        }
    }
    
    // Clean up each target
    targets.forEach(removeAllListeners);
}

/**
 * Get the count of registered listeners for a target (useful for debugging)
 */
function getListenerCount(target: EventTarget): number {
    return registry.get(target)?.size ?? 0;
}

// Export a singleton instance
export const eventManager = {
    addListener,
    removeListener,
    removeAllListeners,
    cleanup,
    getListenerCount
} as const;


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/utils/nowStyleUtils.ts
File type: .ts
/**
 * Applies the selected theme to the widget.
 * @param theme - The theme to apply ('light' or 'dark').
 */
export const applyTheme = (theme?: string): void => {
    const panels = document.getElementsByClassName('now-widget-panel');
    if (panels.length > 0) {
        const panel = panels[0] as HTMLElement;
        if (theme === 'dark') {
            panel.classList.add('now-widget-dark-theme');
        } else {
            panel.classList.remove('now-widget-dark-theme');
        }
    }
};

/**
 * Sets the position of the widget button on the screen.
 * @param position - The position to set ('left').
 */
export const setPosition = (): void => {
    const containers = document.getElementsByClassName('now-widget-container');
    if (containers.length > 0) {
        const container = containers[0] as HTMLElement;
        container.style.left = '0px';
        container.style.right = 'auto';
    }
    // Store the position in a data attribute
    document.body.setAttribute('data-widget-position', 'left');
};

import { ThemeVariables } from '../types/config';

/**
 * Injects dynamic styles into the widget's Shadow DOM.
 * @param theme - The theme to apply ('light' or 'dark').
 * @param position - The position to set ('left' or 'right').
 * @param themeVariables - Theme variables to apply.
 */
export function injectStyles(
    theme: 'light' | 'dark',
    position: 'left' | 'right',
    themeVariables: ThemeVariables = {}
): void {
    // Apply styles to root container
    const rootContainer = document.getElementById('now-widget-root');
    if (rootContainer?.shadowRoot) {
        console.log('[StyleUtils] Applying styles to root container');
        applyContainerStyles(rootContainer, theme, position, themeVariables);
    }

    // Apply styles to button container
    const buttonContainer = document.getElementById('now-widget-button-container');
    if (buttonContainer?.shadowRoot) {
        console.log('[StyleUtils] Applying styles to button container');
        applyContainerStyles(buttonContainer, theme, position, themeVariables);
    }
}

function applyContainerStyles(
    container: HTMLElement,
    theme: 'light' | 'dark',
    position: 'left' | 'right',
    themeVariables: ThemeVariables
): void {
    // Apply theme class
    container.classList.toggle('now-widget-dark-theme', theme === 'dark');
    
    // Apply position styles
    if (position === 'left') {
        container.classList.add('now-widget-left');
        container.classList.remove('now-widget-right');
    } else {
        container.classList.add('now-widget-right');
        container.classList.remove('now-widget-left');
    }
    
    // Apply theme variables
    const style = document.createElement('style');
    const cssVars = Object.entries(themeVariables)
        .filter(([_, value]) => value !== undefined)
        .map(([key, value]) => `${key}: ${value};`)
        .join('\n');
    
    style.textContent = `
        :host {
            ${cssVars}
        }
    `;
    
    // Remove any existing style elements
    const existingStyles = container.shadowRoot?.querySelectorAll('style[data-now-widget-theme]');
    existingStyles?.forEach(el => el.remove());
    
    // Add new style element
    style.setAttribute('data-now-widget-theme', 'true');
    container.shadowRoot?.appendChild(style);
    
    console.log('[StyleUtils] Styles applied to container:', {
        id: container.id,
        theme,
        position,
        variables: themeVariables
    });
}

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/utils/domUtils.ts
File type: .ts
/**
 * Utility functions for safe DOM manipulation
 */

interface SafeAppendOptions {
    parent?: HTMLElement;
    beforeHydration?: () => void;
    afterHydration?: () => void;
}

/**
 * Safely append an element to a container within a Shadow DOM
 */
export function safeAppend(
    element: HTMLElement,
    containerId: string,
    options: SafeAppendOptions = {}
): Promise<void> {
    return new Promise((resolve) => {
        requestAnimationFrame(() => {
            const container = document.querySelector(`#${containerId}`) as HTMLElement;
            if (!container?.shadowRoot) {
                console.warn(`Container #${containerId} or its shadow root not found`);
                resolve();
                return;
            }

            options.beforeHydration?.();
            
            // Use a microtask to ensure DOM is ready
            queueMicrotask(() => {
                try {
                    container.shadowRoot!.appendChild(element);
                    options.afterHydration?.();
                    resolve();
                } catch (error) {
                    console.error('Error appending element:', error);
                    resolve();
                }
            });
        });
    });
}

/**
 * Safely remove an element from the DOM
 */
export function safeRemove(element: HTMLElement | null): Promise<void> {
    return new Promise((resolve) => {
        if (!element) {
            resolve();
            return;
        }

        requestAnimationFrame(() => {
            try {
                element.remove();
            } catch (error) {
                console.error('Error removing element:', error);
            }
            resolve();
        });
    });
}

/**
 * Safely create and append a container to the document body
 */
export function safeCreateContainer(id: string): Promise<HTMLElement> {
    return new Promise((resolve) => {
        requestAnimationFrame(() => {
            let container = document.querySelector(`#${id}`) as HTMLElement;
            
            if (!container) {
                container = document.createElement('div');
                container.id = id;
                
                // Create shadow root if it doesn't exist
                if (!container.shadowRoot) {
                    container.attachShadow({ mode: 'open' });
                }

                // Use a microtask to ensure DOM is ready
                queueMicrotask(() => {
                    document.body.appendChild(container);
                    resolve(container);
                });
            } else {
                resolve(container);
            }
        });
    });
}

/**
 * Safely update element styles
 */
export function safeUpdateStyle(
    element: HTMLElement,
    styleUpdates: Partial<CSSStyleDeclaration>
): void {
    requestAnimationFrame(() => {
        Object.assign(element.style, styleUpdates);
    });
}

/**
 * Safely add event listener with cleanup
 */
export function safeAddEventListener<K extends keyof HTMLElementEventMap>(
    element: HTMLElement,
    event: K,
    handler: (event: HTMLElementEventMap[K]) => void,
    options?: boolean | AddEventListenerOptions
): () => void {
    element.addEventListener(event, handler, options);
    return () => element.removeEventListener(event, handler, options);
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/utils/dateUtils.ts
File type: .ts
export function formatTimeAgo(date: Date): string {
    const now = new Date();
    const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);
    
    const intervals = {
        year: 31536000,
        month: 2592000,
        week: 604800,
        day: 86400,
        hour: 3600,
        minute: 60,
        second: 1
    } as const;
    
    for (const [unit, seconds] of Object.entries(intervals)) {
        const interval = Math.floor(diffInSeconds / seconds);
        
        if (interval >= 1) {
            return interval === 1 ? `1 ${unit} ago` : `${interval} ${unit}s ago`;
        }
    }
    
    return 'just now';
}

export const getTimeAgo = (date: Date): string => {
  const now = new Date();
  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);

  const intervals = {
    year: 31536000,
    month: 2592000,
    week: 604800,
    day: 86400,
    hour: 3600,
    minute: 60,
    second: 1
  };

  for (const [unit, seconds] of Object.entries(intervals)) {
    const interval = Math.floor(diffInSeconds / seconds);
    
    if (interval >= 1) {
      return interval === 1 ? `1 ${unit} ago` : `${interval} ${unit}s ago`;
    }
  }

  return 'just now';
};

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/utils/buttonUtils.ts
File type: .ts
import { ButtonConfig } from '../types/types';

interface ButtonElements {
    container: HTMLElement;
    button: HTMLButtonElement;
    content: HTMLDivElement;
    textContainer: HTMLDivElement;
    arrowIcon: HTMLDivElement;
}

const buttonStyles = `
    :host {
        display: block;
        position: relative;
        z-index: 2147483647;
    }

    .now-widget-button {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: var(--button-size, 120px);
        height: var(--button-size, 120px);
        border-radius: 50%;
        background: var(--button-color, #0066cc);
        border: none;
        cursor: pointer;
        z-index: 2147483647;
        transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        opacity: 1;
        padding: 0;
        margin: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        pointer-events: auto;
    }

    .now-widget-button:hover {
        transform: scale(1.05);
        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
    }

    .now-widget-button-left {
        left: 20px;
        right: auto;
    }

    .button-content {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-family: system-ui, -apple-system, sans-serif;
        font-size: 16px;
        position: relative;
        pointer-events: none;
    }

    .text-container {
        position: absolute;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        animation: rotate 15s linear infinite;
        pointer-events: none;
    }

    .arrow-icon {
        width: 24px;
        height: 24px;
        position: absolute;
        transition: transform 0.3s ease;
        pointer-events: none;
    }

    @keyframes rotate {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }
`;

export function createButtonElements(): ButtonElements {
    console.log('[ButtonUtils] Creating button elements...');
    
    const container = document.createElement('div');
    container.id = 'now-widget-button-container';
    
    const shadowRoot = container.attachShadow({ mode: 'open' });
    
    // Add styles
    const style = document.createElement('style');
    style.textContent = buttonStyles;
    shadowRoot.appendChild(style);
    
    // Create button
    const button = document.createElement('button');
    button.className = 'now-widget-button';
    button.setAttribute('aria-label', 'Show Now Status');
    
    // Create content
    const content = document.createElement('div');
    content.className = 'button-content';
    
    // Create text
    const textContainer = document.createElement('div');
    textContainer.className = 'text-container';
    textContainer.textContent = 'NOW';
    
    // Create arrow
    const arrowIcon = document.createElement('div');
    arrowIcon.className = 'arrow-icon';
    arrowIcon.innerHTML = `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
    `;
    
    // Assemble
    content.appendChild(textContainer);
    content.appendChild(arrowIcon);
    button.appendChild(content);
    shadowRoot.appendChild(button);
    
    console.log('[ButtonUtils] Button elements created:', {
        container,
        button,
        content,
        textContainer,
        arrowIcon
    });
    
    return { container, button, content, textContainer, arrowIcon };
}

export function applyButtonConfig(elements: ButtonElements, config: ButtonConfig): void {
    console.log('[ButtonUtils] Applying button configuration:', config);
    
    const { container, button } = elements;
    
    if (config.size) {
        container.style.setProperty('--button-size', `${config.size}px`);
    }
    
    if (config.color) {
        container.style.setProperty('--button-color', config.color);
    }
    
    if (config.position === 'left') {
        button.classList.add('now-widget-button-left');
    }
    
    console.log('[ButtonUtils] Button configuration applied');
}

export function isButtonInDOM(): boolean {
    const container = document.getElementById('now-widget-button-container');
    const button = container?.shadowRoot?.querySelector('.now-widget-button');
    
    console.log('[ButtonUtils] Button presence check:', {
        container: !!container,
        button: !!button,
        shadowRoot: !!container?.shadowRoot
    });
    
    return !!(container && button);
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/utils/pingServer.ts
File type: .ts
let retryCount = 0;
const MAX_RETRIES = 5;
const BASE_DELAY = 2000;
let isPinging = false;
let timeoutId: number | null = null;
const DEBOUNCE_DELAY = 500;
let debounceTimeout: number | null = null;

export const pingServer = async () => {
    if (debounceTimeout) {
        clearTimeout(debounceTimeout);
    }

    debounceTimeout = window.setTimeout(async () => {
        if (isPinging) return;
        isPinging = true;

        try {
            const response = await fetch('http://localhost:5173/dist/now-widget.js');
            if (response.ok) {
                console.log('Server is reachable');
                retryCount = 0;
            }
        } catch (error) {
            retryCount++;
            if (retryCount <= MAX_RETRIES) {
                const delay = BASE_DELAY * Math.pow(2, retryCount);
                console.warn(`Ping failed. Retrying in ${delay}ms`);
                timeoutId = window.setTimeout(pingServer, delay);
            } else {
                console.error('Max retry attempts reached. Stopping pings.');
            }
        } finally {
            isPinging = false;
        }
    }, DEBOUNCE_DELAY);
};

// Remove the immediate ping to control initiation externally
// pingServer();

export const stopPinging = () => {
    if (timeoutId !== null) {
        clearTimeout(timeoutId);
        timeoutId = null;
    }
    isPinging = false;
};

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/utils/nowAnimation.ts
File type: .ts
// src/utils/nowAnimation.ts

let animationFrameId: number;

/**
 * Animates the widget by performing animation-related updates.
 */
const animate = (): void => {
    // Perform animation-related updates
    // For example, update positions, opacity, or apply CSS classes
    animationFrameId = requestAnimationFrame(animate);
};

/**
 * Starts the animation loop.
 */
export const startAnimation = (): void => {
    animate();
};

/**
 * Stops the animation loop.
 */
export const stopAnimation = (): void => {
    cancelAnimationFrame(animationFrameId);
};

/**
 * Adjusts the spin speed of the text ring based on proximity and hover state.
 * @param isNear - Indicates if the cursor is near the button.
 * @param isHovered - Indicates if the button is currently hovered.
 * @param textRing - The HTMLElement representing the text ring.
 */
export const adjustSpinSpeed = (
    isNear: boolean,
    isHovered: boolean,
    textRing: HTMLElement
): void => {
    if (isHovered) {
        textRing.classList.add('fast-spin');
        textRing.classList.remove('slow-spin');
    } else if (isNear) {
        textRing.classList.add('slow-spin');
        textRing.classList.remove('fast-spin');
    } else {
        textRing.classList.remove('slow-spin', 'fast-spin');
    }
};



--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/utils/domMonitor.ts
File type: .ts
export interface DOMMonitorOptions {
    childList?: boolean;
    attributes?: boolean;
    characterData?: boolean;
    subtree?: boolean;
    attributeFilter?: string[];
    attributeOldValue?: boolean;
    characterDataOldValue?: boolean;
    onDetach?: () => void;
    onReattach?: () => void;
    onAttributeChange?: (mutations: MutationRecord[]) => void;
}

/**
 * Monitors DOM changes and handles widget persistence
 */
export class DOMMonitor {
    private observer: MutationObserver | null;
    private container: HTMLElement;
    private options: DOMMonitorOptions;
    private isObserving = false;
    private detachCallbacks: Map<Node, () => void>;

    constructor(container: HTMLElement, options: DOMMonitorOptions = {}) {
        this.container = container;
        this.options = options;
        this.detachCallbacks = new Map();
        this.observer = null;
        this.setupObserver();
    }

    private setupObserver(): void {
        this.observer = new MutationObserver((mutations) => {
            this.handleMutations(mutations);
            
            // Check for widget removal
            if (!document.contains(this.container)) {
                console.log('Widget container detached from DOM');
                this.options.onDetach?.();
                
                // Attempt to reattach in the next frame
                requestAnimationFrame(() => {
                    if (!document.contains(this.container)) {
                        document.body.appendChild(this.container);
                        console.log('Widget container reattached to DOM');
                        this.options.onReattach?.();
                    }
                });
            }

            // Check for relevant attribute changes
            const attributeMutations = mutations.filter(
                mutation => 
                    mutation.type === 'attributes' && 
                    mutation.target === this.container
            );

            if (attributeMutations.length > 0 && this.options.onAttributeChange) {
                this.options.onAttributeChange(attributeMutations);
            }
        });
    }

    /**
     * Start observing DOM changes
     */
    public startObserving(): void {
        if (this.isObserving || !this.observer) return;

        this.observer.observe(document.body, {
            childList: true,
            subtree: true,
            attributes: true,
            attributeFilter: ['style', 'class', 'id']
        });

        this.isObserving = true;
        console.log('Started observing DOM changes');
    }

    /**
     * Stop observing DOM changes
     */
    public stopObserving(): void {
        if (!this.isObserving || !this.observer) return;

        this.observer.disconnect();
        this.isObserving = false;
        console.log('Stopped observing DOM changes');
    }

    /**
     * Update the container reference
     */
    public updateContainer(newContainer: HTMLElement): void {
        this.container = newContainer;
        
        // Restart observation with new container
        if (this.isObserving) {
            this.stopObserving();
            this.startObserving();
        }
    }

    /**
     * Clean up resources
     */
    public destroy(): void {
        this.stopObserving();
        this.observer = null;
    }

    /**
     * Observe DOM changes on a target node
     */
    public observe(target: Node, options: DOMMonitorOptions): void {
        if (!this.observer) return;
        this.observer.observe(target, options);
    }

    /**
     * Set a callback for when an element is detached from the DOM
     */
    public onDetach(element: Node, callback: () => void): void {
        this.detachCallbacks.set(element, callback);
    }

    /**
     * Disconnect the observer and clear detach callbacks
     */
    public disconnect(): void {
        if (!this.observer) return;
        this.observer.disconnect();
        this.detachCallbacks.clear();
    }

    private handleMutations(mutations: MutationRecord[]): void {
        for (const mutation of mutations) {
            if (mutation.type === 'childList' && mutation.removedNodes.length > 0) {
                for (const node of mutation.removedNodes) {
                    const callback = this.detachCallbacks.get(node);
                    if (callback) {
                        callback();
                        this.detachCallbacks.delete(node);
                    }
                }
            }
        }
    }
}

/**
 * Create a new DOM monitor instance
 */
export function createDOMMonitor(container: HTMLElement, options: DOMMonitorOptions = {}): DOMMonitor {
    return new DOMMonitor(container, options);
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/utils/nowEventsUtils.ts
File type: .ts
import { adjustSpinSpeed } from './nowAnimation';
import { togglePanel } from './nowWidgetUtils';

/**
 * Handles the scroll event to hide or show the NowWidget button.
 */
export const handleScroll = (root: Element): void => {
    const nowButton = root.querySelector('#now-widget-button') as HTMLElement | null;
    const panel = root.querySelector('#now-widget-panel') as HTMLElement | null;

    if (window.scrollY > 300) {
        nowButton?.classList.add('hidden');
    } else {
        nowButton?.classList.remove('hidden');
    }

    // Close the panel on scroll if it's open
    if (panel?.classList.contains('open')) {
        togglePanel(false, root);
    }
};


/**
 * Handles the mouse move event to adjust the spin speed of the text ring.
 * @param e - The MouseEvent object.
 */
export const handleMouseMove = (e: MouseEvent, root: Element): void => {
    const nowButton = root.querySelector('#now-widget-button') as HTMLElement | null;
    if (nowButton) {
        const rect = nowButton.getBoundingClientRect();
        const distance = Math.hypot(
            e.clientX - (rect.left + rect.width / 2),
            e.clientY - (rect.top + rect.height / 2)
        );
        const isNear = distance < 200; // Proximity threshold
        const isHovered = nowButton.matches(':hover');
        const textRing = nowButton.querySelector('.text-ring') as HTMLElement | null;

        if (textRing) {
            adjustSpinSpeed(isNear, isHovered, textRing);
        }
    }
};

/**
 * Adds all necessary event listeners to the widget container.
 */
export const addEventListeners = (container: HTMLElement): void => {
    const button = container.querySelector('#now-widget-button') as HTMLElement | null;
    const panel = container.querySelector('#now-widget-panel') as HTMLElement | null;

    if (button && panel) {
        // Toggle panel on button click
        button.addEventListener('click', () => {
            const isOpen = panel.classList.contains('open');
            togglePanel(!isOpen, container);
        });

        // Close panel on outside click
        document.addEventListener('click', (event) => {
            const target = event.target as HTMLElement;
            if (
                panel.classList.contains('open') &&
                !panel.contains(target) &&
                !button.contains(target)
            ) {
                togglePanel(false, container);
            }
        });

        // Close panel on ESC key press
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && panel.classList.contains('open')) {
                togglePanel(false, container);
            }
        });
    }
};

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/utils/nowWidgetUtils.ts
File type: .ts
import { Post, User } from '../types/types';

/**
 * Retrieves script attributes from the currently executing script tag.
 * @returns An object containing orgId, token, and optional configuration parameters, or null if required attributes are missing.
 */
export const getScriptAttributes = (): {
    orgId: string;
    token: string;
    theme?: string;
    position?: string;
    buttonColor?: string;
} | null => {
    const scripts = document.getElementsByTagName('script');
    let currentScript: HTMLScriptElement | null = null;

    for (let i = 0; i < scripts.length; i++) {
        const script = scripts[i];
        if (script.getAttribute('now-data-org-id') && script.getAttribute('now-data-token')) {
            currentScript = script;
            break;
        }
    }

    if (!currentScript) {
        console.error("NowWidget: Unable to locate the current script.");
        return null;
    }

    const orgId = currentScript.getAttribute('now-data-org-id')
    const token = currentScript.getAttribute('now-data-token');
    const theme = currentScript.getAttribute('now-data-theme');
    const position = currentScript.getAttribute('now-data-position');
    const buttonColor = currentScript.getAttribute('now-data-button-color');

    console.log('Retrieved script attributes:', {
        orgId,
        token,
        theme,
        position,
        buttonColor,
    });

    if (!orgId || !token) {
        console.error("NowWidget: Missing orgId or token in script attributes.");
        return null;
    }

    return {
        orgId,
        token,
        theme: theme ?? undefined,
        position: position ?? undefined,
        buttonColor: buttonColor ?? undefined,
    };
};

/**
 * Creates and appends the widget container to the document body.
 * @returns The widget container HTMLElement.
 */
export function createWidgetContainer(): HTMLElement {
    const container = document.createElement('div');
    container.id = 'now-widget-container';
    
    // Create a shadow root for isolation
    const shadow = container.attachShadow({ mode: 'open' });
    
    // Create an isolated container inside shadow DOM
    const innerContainer = document.createElement('div');
    innerContainer.className = 'now-widget-root';
    
    // Add styles to shadow DOM
    const styleSheet = document.createElement('style');
    styleSheet.textContent = `
        .now-widget-root {
            position: fixed;
            z-index: 999999;
            pointer-events: none;
        }
        .now-widget-root * {
            pointer-events: auto;
        }
        .now-widget-panel {
            position: fixed;
            top: 0;
            height: 100vh;
            width: min(400px, 100%);
            background: var(--now-bg-color);
            box-shadow: 
                0 0 10px rgba(0,0,0,0.1),
                0 0 30px rgba(0,0,0,0.05);
            transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);
            will-change: transform;
            overflow: hidden;
        }
        .now-widget-panel[now-data-position="left"] {
            left: 0;
            border-top-right-radius: 12px;
            border-bottom-right-radius: 12px;
            transform: translateX(-100%);
        }
        .now-widget-panel[now-data-position="right"] {
            right: 0;
            border-top-left-radius: 12px;
            border-bottom-left-radius: 12px;
            transform: translateX(100%);
        }
        .now-widget-panel.open {
            transform: translateX(0);
        }
        .now-widget-backdrop {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            opacity: 0;
            transition: opacity 200ms ease-out;
            pointer-events: none;
        }
        .now-widget-backdrop.visible {
            opacity: 1;
            pointer-events: auto;
        }
        @media (max-width: 768px) {
            .now-widget-panel {
                width: 100%;
            }
        }
    `;
    
    shadow.appendChild(styleSheet);
    shadow.appendChild(innerContainer);
    document.body.appendChild(container);
    
    return innerContainer;
}

/**
 * Toggles the visibility of the NowWidget side panel.
 * @param isOpen - Boolean indicating whether to open or close the panel.
 * @param root - The root Element containing the panel.
 */
export function togglePanel(isOpen: boolean, root: Element): void {
    const panel = root.querySelector('.now-widget-panel');
    const backdrop = root.querySelector('.now-widget-backdrop');
    
    if (!panel || !backdrop) return;
    
    if (isOpen) {
        // Show backdrop first
        backdrop.classList.add('visible');
        // Then animate panel
        requestAnimationFrame(() => {
            panel.classList.add('open');
        });
        
        // Add accessibility attributes
        panel.setAttribute('role', 'dialog');
        panel.setAttribute('aria-modal', 'true');
        panel.setAttribute('aria-labelledby', 'panel-title');
        
        // Handle keyboard navigation
        const handleEscape = (e: KeyboardEvent) => {
            if (e.key === 'Escape') {
                togglePanel(false, root);
            }
        };
        document.addEventListener('keydown', handleEscape);
        
        // Store the event listener for cleanup
        (panel as any)._escapeHandler = handleEscape;
    } else {
        // Remove panel first
        panel.classList.remove('open');
        // Then fade out backdrop
        backdrop.classList.remove('visible');
        
        // Remove event listeners
        if ((panel as any)._escapeHandler) {
            document.removeEventListener('keydown', (panel as any)._escapeHandler);
        }
    }
}

/**
 * Displays user information inside the widget panel.
 * @param user - The User object containing user information.
 * @param panel - The widget panel HTMLElement.
 */
export const renderOrgInfo = (user: User | null, panel: HTMLElement): void => {
    const userInfo = panel.querySelector('.now-widget-org-info');
    if (userInfo && user) {
        const userAvatar = document.createElement('img');
        userAvatar.className = 'now-widget-avatar';
        userAvatar.src = user.avatar || '';
        userAvatar.alt = user.name;

        const userDetails = document.createElement('div');
        userDetails.className = 'now-widget-user-details';
        userDetails.innerHTML = `
            <h2 class="now-widget-user-name">${user.displayName || user.name}</h2>
            <p class="now-widget-user-bio">${user.bio || ''}</p>
        `;

        userInfo.innerHTML = '';
        userInfo.appendChild(userAvatar);
        userInfo.appendChild(userDetails);
    }
};

/**
 * Renders posts inside the widget panel.
 * @param posts - An array of Post objects.
 * @param panel - The widget panel HTMLElement.
 */
export const renderPostsInPanel = (posts: Post[], panel: HTMLElement): void => {
    const content = panel.querySelector('#now-widget-content');
    if (content) {
        content.innerHTML = '<h2>Your Posts</h2>';
        posts.forEach(post => {
            const postEl = document.createElement('div');
            postEl.className = 'now-widget-post';
            postEl.innerHTML = `<p>${post.content}</p>`;
            content.appendChild(postEl);
        });
    }
};

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/state/state.ts
File type: .ts
import { Post, User } from '../types/types';
import { renderPostsInPanel, renderOrgInfo } from '../utils/nowWidgetUtils';

interface WidgetState {
    loading: boolean;
    user: User | null;
    posts: Post[];
    initialized: boolean;
    rootElement: HTMLElement | null;
}

interface WidgetStore {
    getState: () => WidgetState;
    initializeWidgetRoot: (element: HTMLElement) => void;
    resetState: () => void;
    setLoading: (loading: boolean) => void;
    setPosts: (posts: Post[]) => void;
    setUser: (user: User) => void;
    updateUI: () => void;
    handleError: (message: string) => void;
    getError: () => string | null;
    clearError: () => void;
}

class WidgetStoreImpl {
    private state: WidgetState = {
        loading: false,
        user: null,
        posts: [],
        initialized: false,
        rootElement: null
    };

    private error: string | null = null;

    getState = () => ({ ...this.state });

    initializeWidgetRoot = (element: HTMLElement) => {
        if (this.state.rootElement) {
            try {
                if (this.state.rootElement.parentNode) {
                    this.state.rootElement.parentNode.removeChild(this.state.rootElement);
                }
            } catch (error) {
                this.handleError('Error cleaning up existing root: ' + error);
            }
        }
        this.state.rootElement = element;
        this.state.initialized = true;
    };

    resetState = () => {
        this.state = {
            loading: false,
            user: null,
            posts: [],
            initialized: false,
            rootElement: null
        };
    };

    setLoading = (loading: boolean) => {
        if (!this.state.initialized) return;
        this.state.loading = loading;
        this.updateUI();
    };

    setPosts = (posts: Post[]) => {
        if (!this.state.initialized) return;
        this.state.posts = posts;
        this.updateUI();
    };

    setUser = (user: User) => {
        if (!this.state.initialized) return;
        this.state.user = user;
        this.updateUI();
    };

    updateUI = () => {
        if (!this.state.rootElement || !this.state.initialized) return;

        // Update loading state
        const loadingIndicator = this.state.rootElement.querySelector('.loading-indicator');
        if (loadingIndicator) {
            loadingIndicator.classList.toggle('visible', this.state.loading);
        }

        // Update user info
        if (this.state.user) {
            renderOrgInfo(this.state.user, this.state.rootElement);
        }

        // Update posts
        if (this.state.posts.length > 0) {
            renderPostsInPanel(this.state.posts, this.state.rootElement);
        }
    };

    handleError = (message: string) => {
        this.error = message;
        console.error('Widget error:', message);
    };

    getError = () => {
        return this.error;
    };

    clearError = () => {
        this.error = null;
    };
}

const createWidgetStore = (): WidgetStore => {
    const store = new WidgetStoreImpl();
    return {
        getState: store.getState,
        initializeWidgetRoot: store.initializeWidgetRoot,
        resetState: store.resetState,
        setLoading: store.setLoading,
        setPosts: store.setPosts,
        setUser: store.setUser,
        updateUI: store.updateUI,
        handleError: store.handleError,
        getError: store.getError,
        clearError: store.clearError
    };
};

export const widgetStore = createWidgetStore();
export const { 
    getState,
    initializeWidgetRoot, 
    resetState, 
    setLoading, 
    setPosts, 
    setUser, 
    updateUI,
    handleError,
    getError,
    clearError
} = widgetStore;

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/styles/nowWidgetStyles.css
File type: .css
/* Global Styles */
:root {
  --button-size: 120px;
  --panel-width: 380px;
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Flexible Container */
.container {
  position: relative;
  z-index: 2;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  padding: 1rem;
}

/* Host Content Styles */
#now-widget-host-content {
  position: relative;
  transition: transform 0.3s ease;
  min-height: 100vh;
}

#now-widget-host-content.panel-open {
  transform: translateX(var(--panel-width));
}

/* Button Styles */
#now-widget-button {
  position: fixed;
  bottom: clamp(10px, 3vh, 20px);
  left: clamp(10px, 3vw, 20px);
  width: var(--button-size);
  height: var(--button-size);
  border-radius: 50%;
  background: var(--button-color);
  border: none;
  cursor: pointer;
  z-index: 10001;
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  opacity: 1;
  pointer-events: auto;
  opacity: 1;
  visibility: visible;
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, transform 0.3s ease-in-out;
}

#now-widget-button.panel-open {
  transform: translate(calc(var(--panel-width) - 40px));
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
}

#now-widget-button.hidden {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
}

/* Nested Element for Scaling */
#now-widget-button .button-content {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.3s ease;
  cursor: inherit;
}

#now-widget-button.hovered .button-content {
  transform: scale(1.1);
}

.text-ring {
  width: 100%;
  height: 100%;
  position: relative;
  animation: spin 60s linear infinite;
  animation-direction: normal;
  cursor: inherit;
}

.now-text {
  position: absolute;
  transform-origin: center;
  font-weight: bold;
  color: var(--theme-text);
  cursor: inherit;
}

.fast-spin {
  animation: spin 1s linear infinite;
  animation-direction: normal;
}

.slow-spin {
  animation: spin 5s linear infinite;
  animation-direction: normal;
}

/* Panel Styles */
.now-widget-panel {
  position: fixed;
  top: 0;
  bottom: 0;
  width: var(--panel-width);
  background: var(--now-widget-bg-color);
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
  transition: transform 0.3s ease-in-out;
  overflow-y: auto;
  z-index: 999999;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.now-widget-panel.open {
  transform: translateX(0);
}

.now-widget-header {
  padding: 20px;
  border-bottom: 1px solid var(--now-widget-border-color);
  position: sticky;
  top: 0;
  background: var(--now-widget-bg-color);
  z-index: 2;
}

.now-widget-user-container {
  display: flex;
  align-items: center;
  gap: 16px;
}

.now-widget-avatar-container {
  flex-shrink: 0;
}

.now-widget-avatar {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  object-fit: cover;
  border: 2px solid var(--now-widget-border-color);
}

.now-widget-user-details {
  flex-grow: 1;
  min-width: 0;
}

.now-widget-user-name {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0 0 4px 0;
  color: var(--now-widget-text-color);
}

.now-widget-user-role {
  font-size: 0.9rem;
  color: var(--now-widget-secondary-text-color);
  margin: 0 0 8px 0;
  line-height: 1.4;
}

.now-widget-user-stats {
  font-size: 0.875rem;
  color: var(--now-widget-secondary-text-color);
  margin: 0;
}

.now-widget-posts {
  padding: 12px 20px;
  display: flex;
  flex-direction: column;
  gap: 24px;
}

.now-widget-post {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.now-widget-post-time {
  font-size: 0.875rem;
  color: var(--now-widget-secondary-text-color);
  margin: 0;
}

.now-widget-post-content {
  font-size: 0.95rem;
  line-height: 1.5;
  margin: 0;
  color: var(--now-widget-text-color);
}

.now-widget-post-image {
  width: 100%;
  height: 200px;
  border-radius: 12px;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  margin-top: 8px;
}

.now-widget-post-stats {
  display: flex;
  gap: 16px;
  color: var(--now-widget-secondary-text-color);
  font-size: 0.875rem;
}

.now-widget-post-stat {
  display: flex;
  align-items: center;
  gap: 4px;
}

.now-widget-post-stat svg {
  opacity: 0.8;
}

.now-widget-close-button {
  position: absolute;
  top: 20px;
  right: 20px;
  background: transparent;
  border: none;
  color: var(--now-widget-text-color);
  font-size: 24px;
  cursor: pointer;
  padding: 0;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background-color 0.2s;
}

.now-widget-close-button:hover {
  background-color: var(--now-widget-hover-color);
}

/* Scrollbar Styling */
.now-widget-panel::-webkit-scrollbar {
  width: 8px;
}

.now-widget-panel::-webkit-scrollbar-track {
  background: var(--now-widget-bg-color);
}

.now-widget-panel::-webkit-scrollbar-thumb {
  background: var(--now-widget-border-color);
  border-radius: 4px;
}

.now-widget-panel::-webkit-scrollbar-thumb:hover {
  background: var(--now-widget-secondary-text-color);
}

/* Hashtag Styling */
.now-widget-hashtag {
  color: var(--button-color);
  text-decoration: none;
  transition: color 0.2s ease;
}

.now-widget-hashtag:hover {
  color: var(--button-color);
  filter: brightness(120%);
  text-decoration: underline;
}

/* Animations */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Overlay */
.now-widget-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease;
  z-index: 9999;
}

.now-widget-overlay.visible {
  opacity: 1;
  visibility: visible;
}

body.no-scroll {
  overflow: hidden;
}

@keyframes float {
  0%,
  100% {
    transform: translate(0, 0) scale(1);
  }
  25% {
    transform: translate(5vw, -5vh) scale(1.05);
  }
  50% {
    transform: translate(10vw, 0) scale(1);
  }
  75% {
    transform: translate(5vw, 5vh) scale(1.05);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Post Styles */
.now-widget-post {
  padding: 1.25rem;
  margin-bottom: 1.25rem;
  background: var(--theme-post-bg);
  border-radius: 1rem;
  border: 1px solid var(--theme-border);
  transition: transform 0.2s ease;
}

.now-widget-post-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.75rem;
}

.now-widget-post-org-info {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.now-widget-post-avatar {
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  object-fit: cover;
}

.now-widget-post-username {
  font-weight: 500;
  color: var(--theme-text);
  display: block;
}

.now-widget-post-timestamp {
  font-size: 0.875rem;
  color: var(--theme-text-secondary);
  display: block;
}

.now-widget-post-content {
  margin: 0.75rem 0;
  white-space: pre-wrap;
  word-break: break-word;
}

.now-widget-media-container {
  display: grid;
  gap: 0.75rem;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  margin: 0.75rem 0;
}

.now-widget-media {
  max-width: 100%;
  border-radius: 0.5rem;
  max-height: 30rem;
  object-fit: cover;
}

.now-widget-post-divider {
  margin: 0.75rem 0;
  border: 0;
  border-top: 1px solid var(--theme-border);
}

.now-widget-post-metrics {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.now-widget-metrics-left {
  display: flex;
  gap: 1.25rem;
}

.now-widget-metric-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background: none;
  border: none;
  color: var(--theme-text-secondary);
  cursor: pointer;
  padding: 0.25rem;
  transition: color 0.2s ease;
}

.now-widget-metric-button:hover {
  color: var(--theme-text);
}

.now-widget-comments-container {
  margin-top: 1rem;
  padding-top: 1rem;
  border-top: 1px solid var(--theme-border);
}

.now-widget-comment {
  padding: 0.75rem;
  margin-bottom: 0.75rem;
  background: var(--theme-background);
  border-radius: 0.5rem;
}

.now-widget-comment-header {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0.5rem;
}

.now-widget-comment-avatar {
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
  object-fit: cover;
}

.now-widget-comment-username {
  font-weight: 500;
  color: var(--theme-text);
}

.now-widget-comment-time {
  font-size: 0.75rem;
  color: var(--theme-text-secondary);
}

.now-widget-comment-content {
  margin: 0;
  color: var(--theme-text);
  font-size: 0.875rem;
}

.now-widget-comments-toggle {
  cursor: pointer;
  transition: color 0.2s;
}

.now-widget-comments-toggle:hover {
  color: var(--now-widget-text-color);
}

.now-widget-comments-toggle.active {
  color: var(--now-widget-text-color);
}

.now-widget-comments-container {
  margin-top: 12px;
  border-top: 1px solid var(--now-widget-border-color);
  padding-top: 12px;
}

.now-widget-comments {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.now-widget-comment {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.now-widget-comment-header {
  display: flex;
  align-items: center;
  gap: 8px;
}

.now-widget-comment-avatar {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  object-fit: cover;
}

.now-widget-comment-username {
  font-weight: 500;
  color: var(--now-widget-text-color);
  font-size: 0.875rem;
}

.now-widget-comment-time {
  color: var(--now-widget-secondary-text-color);
  font-size: 0.75rem;
  margin-left: auto;
}

.now-widget-comment-content {
  margin: 0;
  font-size: 0.875rem;
  line-height: 1.4;
  color: var(--now-widget-text-color);
  padding-left: 32px;
}

#now-widget-button::after {
  content: "Click to open NowWidget";
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.8);
  color: #fff;
  padding: 5px 10px;
  border-radius: 4px;
  white-space: nowrap;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
  margin-bottom: 8px;
  font-size: 0.8rem;
}

#now-widget-button:hover::after {
  opacity: 1;
}

/* Ensure Nested Elements Don’t Override Cursor */
#now-widget-button .button-content,
#now-widget-button .text-ring,
#now-widget-button .now-text {
  cursor: inherit;
}

/* Error State Styles */
.now-widget-error-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 2rem;
  min-height: 300px;
  color: var(--now-widget-text-color);
}

.now-widget-error-icon {
  margin-bottom: 1.5rem;
  opacity: 0.7;
  animation: fadeIn 0.5s ease-out;
}

.now-widget-error-icon svg {
  width: 64px;
  height: 64px;
  stroke: var(--now-widget-text-color);
  stroke-width: 1.5;
}

.now-widget-error-title {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0 0 1rem 0;
  animation: slideDown 0.5s ease-out;
}

.now-widget-error-message {
  font-size: 1rem;
  line-height: 1.5;
  margin: 0 0 1.5rem 0;
  color: var(--now-widget-secondary-text-color);
  max-width: 280px;
  animation: slideDown 0.6s ease-out;
}

.now-widget-error-help {
  font-size: 0.875rem;
  color: var(--now-widget-secondary-text-color);
  opacity: 0.8;
  margin: 0;
  animation: slideDown 0.7s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 0.7;
  }
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/components/NowButton.ts
File type: .ts
import { ButtonConfig } from '../types/types';
import { createButtonElements, applyButtonConfig, isButtonInDOM } from '../utils/buttonUtils';

interface NowButtonOptions {
  size?: number;
  maxSize?: number;
  minSize?: number;
  color?: string;
  backgroundColor?: string;
  position?: 'left' | 'right';
  onClick?: () => void;
}

const buttonStyles = `
  :host {
    display: block;
  }

  .now-widget-button {
    position: fixed;
    bottom: 20px;
    right: 20px;
    width: var(--button-size, 120px);
    height: var(--button-size, 120px);
    border-radius: 50%;
    background: var(--button-color, #0066cc);
    border: none;
    cursor: pointer;
    z-index: 10001;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 1;
    padding: 0;
    margin: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .now-widget-button:hover {
    transform: scale(1.05);
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
  }

  .now-widget-button-left {
    left: 20px;
    right: auto;
  }

  .button-content {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-family: system-ui, -apple-system, sans-serif;
    font-size: 16px;
    position: relative;
  }

  .text-container {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: rotate 15s linear infinite;
  }

  .arrow-icon {
    width: 24px;
    height: 24px;
    position: absolute;
    transition: transform 0.3s ease;
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
`;

export class NowButton {
  private button: HTMLButtonElement;
  private buttonContent: HTMLDivElement;
  private textContainer: HTMLDivElement;
  private arrowIcon: HTMLDivElement;
  private isHovered: boolean = false;
  private animationDuration: number = 15;
  private maxSize: number = 150;
  private minSize: number = 80;
  private currentSize: number;
  private color: string;
  private text = "NOW . NOW . NOW . ";
  private resizeObserver!: ResizeObserver;
  private updateStylesDebounce: number | null = null;
  private shadowRoot!: ShadowRoot;

  constructor(container: HTMLElement, options: NowButtonOptions = {}) {
    if (options.size) {
      this.maxSize = options.size;
      this.minSize = options.size;
    } else {
      this.maxSize = options.maxSize ?? this.maxSize;
      this.minSize = options.minSize ?? this.minSize;
    }
    this.color = options.color ?? '#ffffff';
    this.currentSize = this.calculateSize();

    const nowButtonContainer = document.createElement('div');
    nowButtonContainer.id = 'now-widget-button-container';
    container.appendChild(nowButtonContainer);

    this.shadowRoot = nowButtonContainer.attachShadow({ mode: 'open' });

    // Add styles to shadow DOM
    const style = document.createElement('style');
    style.textContent = buttonStyles;
    this.shadowRoot.appendChild(style);

    // Create button
    this.button = document.createElement('button');
    this.button.className = 'now-widget-button';
    this.button.setAttribute('aria-label', 'Show Now Status');

    // Create button content
    this.buttonContent = document.createElement('div');
    this.buttonContent.className = 'button-content';

    // Create rotating text
    this.textContainer = document.createElement('div');
    this.textContainer.className = 'text-container';
    this.updateTextElements(this.textContainer);

    // Create arrow icon
    this.arrowIcon = document.createElement('div');
    this.arrowIcon.className = 'arrow-icon';
    this.arrowIcon.innerHTML = `
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    `;

    // Apply configuration
    if (options.size) {
      nowButtonContainer.style.setProperty('--button-size', `${options.size}px`);
    }

    if (options.color) {
      nowButtonContainer.style.setProperty('--button-color', options.color);
    }

    if (options.position === 'left') {
      this.button.classList.add('now-widget-button-left');
    }

    // Assemble button
    this.buttonContent.appendChild(this.textContainer);
    this.buttonContent.appendChild(this.arrowIcon);
    this.button.appendChild(this.buttonContent);
    this.shadowRoot.appendChild(this.button);

    this.setupEventListeners(options.onClick);
    this.setupResizeObserver();
    this.setupVisibilityObserver();
  }

  private calculateSize(): number {
    const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);
    const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);
    const screenSize = Math.min(vw, vh);
    const size = Math.min(Math.max(screenSize * 0.15, this.minSize), this.maxSize);
    return Math.round(size);
  }

  private updateTextElements(container: HTMLDivElement): void {
    container.innerHTML = '';
    const chars = this.text.split('');
    chars.forEach((char, index) => {
      const span = document.createElement('span');
      span.className = 'now-widget-text';
      span.textContent = char;
      span.style.cssText = `
        position: absolute;
        left: 50%;
        top: 50%;
        font-size: clamp(5px, 1.5vw, ${this.currentSize / 8}px);
        font-weight: bold;
        color: ${this.color};
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        transform: translate(-50%, -50%) rotate(${(360 / chars.length) * index}deg) translateY(-${this.currentSize / 2 - this.currentSize / 8}px);
        transform-origin: center;
        transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
        opacity: 1;
      `;
      container.appendChild(span);
    });
  }

  private setupEventListeners(onClick?: () => void) {
    console.log('Setting up button event listeners'); // Debug log

    if (onClick) {
      this.button.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        console.log('Button clicked, executing onClick handler'); // Debug log
        onClick();
      });
    }

    // Touch events for mobile
    this.button.addEventListener('touchstart', () => {
      this.isHovered = true;
      this.updateStyles(true);
    });

    this.button.addEventListener('touchend', () => {
      this.isHovered = false;
      this.updateStyles(false);
    });

    // Mouse events for desktop
    this.button.addEventListener('mouseenter', () => {
      this.isHovered = true;
      this.animationDuration = 30;
      this.updateStyles(true);
    });

    this.button.addEventListener('mouseleave', () => {
      this.isHovered = false;
      this.animationDuration = 15;
      this.updateStyles(false);
    });

    // Mouse proximity effect (desktop only)
    const isTouchDevice = 'ontouchstart' in window;
    if (!isTouchDevice) {
      document.addEventListener('mousemove', (e) => {
        const rect = this.button.getBoundingClientRect();
        const buttonCenterX = rect.left + rect.width / 2;
        const buttonCenterY = rect.top + rect.height / 2;

        const distance = Math.sqrt(
          Math.pow(e.clientX - buttonCenterX, 2) + Math.pow(e.clientY - buttonCenterY, 2)
        );

        const proximityThreshold = this.currentSize * 2;

        if (distance < proximityThreshold && !this.isHovered) {
          const speedFactor = 1 - distance / proximityThreshold;
          const newDuration = 15 - 7.5 * speedFactor;
          if (Math.abs(this.animationDuration - newDuration) > 0.1) {
            this.animationDuration = newDuration;
            this.textContainer.style.animationDuration = `${this.animationDuration}s`;
          }
        } else if (!this.isHovered) {
          if (Math.abs(this.animationDuration - 15) > 0.1) {
            this.animationDuration = 15;
            this.textContainer.style.animationDuration = '15s';
          }
        }
      });
    }
  }

  private setupResizeObserver(): void {
    this.resizeObserver = new ResizeObserver(() => {
      const newSize = this.calculateSize();
      if (newSize !== this.currentSize) {
        this.currentSize = newSize;
        this.updateButtonStyles();
        this.updateTextElements(this.textContainer);
      }
    });

    this.resizeObserver.observe(document.body);
  }

  private setupVisibilityObserver(): void {
    const sentinel = document.createElement('div');
    sentinel.style.position = 'absolute';
    sentinel.style.top = '100vh';
    sentinel.style.width = '1px';
    sentinel.style.height = '1px';
    document.body.appendChild(sentinel);

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            this.button.style.opacity = '1';
          } else {
            this.button.style.opacity = '0';
          }
        });
      },
      { threshold: 0 }
    );

    observer.observe(sentinel);
  }

  private updateButtonStyles(): void {
    const styles = `
      width: ${this.currentSize}px;
      height: ${this.currentSize}px;
    `;
    this.button.style.cssText = styles;
  }

  private updateStyles(isHovered: boolean) {
    if (this.updateStylesDebounce) {
      clearTimeout(this.updateStylesDebounce);
    }

    this.updateStylesDebounce = window.setTimeout(() => {
      this.buttonContent.style.transform = isHovered ? 'scale(1.1)' : 'scale(1)';
      this.arrowIcon.style.opacity = isHovered ? '1' : '0.9';

      Array.from(this.textContainer.children).forEach((child) => {
        (child as HTMLElement).style.opacity = isHovered ? '0.8' : '1';
      });

      this.textContainer.style.animationDuration = `${this.animationDuration}s`;
    }, 100); // Adjust the delay as needed for smoother transitions
  }
}

export function createNowButton(config: ButtonConfig = {}): HTMLButtonElement {
  console.log('[NowButton] Creating button with config:', config);
  
  if (isButtonInDOM()) {
    console.log('[NowButton] Button already exists in DOM');
    const existing = document.getElementById('now-widget-button-container');
    return existing as HTMLButtonElement;
  }
  
  const elements = createButtonElements();
  applyButtonConfig(elements, config);
  
  console.log('[NowButton] Button created and configured');
  return elements.container as HTMLButtonElement;
}

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/components/now-widget.code-workspace
File type: .code-workspace
{
  "folders": [
	{
		"path": "../.."
	}
],
  "settings": {
    "liveServer.settings.port": 5501
  }
}


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/components/NowWidget.ts
File type: .ts
import { widgetStore } from '../state/state';
import { injectStyles } from '../utils/nowStyleUtils';
import { safeCreateContainer, safeUpdateStyle } from '../utils/domUtils';
import { WidgetConfig } from '../types/config';
import { User, OrgInfo, Post, UserPost } from '../types/types';
import { eventManager } from '../utils/eventManager';
import { DOMMonitor, createDOMMonitor } from '../utils/domMonitor';
import { createNowButton } from './NowButton';
import { createNowPanel } from './NowPanelContent';
import { fetchOrgInfo, fetchUserPosts } from '../api/auth';
import { environment } from '../config/environment';

// Widget state encapsulation
interface WidgetState {
    currentPanel: HTMLElement | null;
    domMonitor: DOMMonitor | null;
    isInitializing: boolean;
    cleanupFunctions: Array<() => void>;
}

const widgetState: WidgetState = {
    currentPanel: null,
    domMonitor: null,
    isInitializing: false,
    cleanupFunctions: []
};

const convertOrgInfoToUser = (info: OrgInfo): User => ({
    id: info.id,
    name: info.name,
    email: info.email ?? '',
    emailVerified: info.emailVerified ?? false,
    avatar: info.avatar,
    status: info.status,
    displayName: info.displayName,
    bio: info.bio,
    followers: info.followers ?? 0
});

const convertUserPostToPost = (userPost: UserPost): Post => ({
    id: userPost.id,
    content: userPost.content,
    user: userPost.user ? convertOrgInfoToUser(userPost.user) : {
        id: '',
        name: '',
        email: '',
        emailVerified: false,
        avatar: '',
        status: '',
        followers: 0
    },
    createdAt: userPost.timestamp,
    timestamp: userPost.timestamp,
    attachments: userPost.attachments ?? [],
    comments: userPost.comments ?? [],
    _count: {
        likes: 0,
        comments: userPost.comments?.length ?? 0
    }
});

export async function initializeNowWidget(config: WidgetConfig): Promise<void> {
    if (!environment.IS_BROWSER) {
        console.log('Widget initialization skipped: non-browser environment');
        return;
    }

    if (widgetState.isInitializing) {
        console.log('Widget initialization already in progress');
        return;
    }

    try {
        widgetState.isInitializing = true;
        await cleanupExistingWidget();

        const widgetContainer = await createWidgetContainer(config);
        widgetStore.initializeWidgetRoot(widgetContainer);

        // Create and configure button
        const button = createNowButton({
            size: config.buttonSize,
            color: config.buttonColor,
            position: config.position,
            theme: config.theme
        });

        // Append button to container's shadow root
        console.log('[NowWidget] Appending button to container shadow root');
        if (widgetContainer.shadowRoot) {
            widgetContainer.shadowRoot.appendChild(button);
        } else {
            console.error('[NowWidget] Container shadow root not found');
            widgetContainer.appendChild(button);
        }
        
        setupFadeEffect(button);

        // DOM Monitor setup
        widgetState.domMonitor = createDOMMonitor(widgetContainer, {
            childList: true,
            subtree: true,
            attributes: true,
            attributeFilter: ['class', 'style']
        });

        // Event Listeners
        const handleScroll = (): void => {
            handleUrlChange(button);
        };

        const handleResize = (): void => {
            handleUrlChange(button);
        };

        const handlePopState = (): void => {
            handleUrlChange(button);
        };

        const handleClickOutside = (event: MouseEvent): void => {
            const target = event.target as HTMLElement;
            if (!button.contains(target) && widgetState.currentPanel && !widgetState.currentPanel.contains(target)) {
                removePanel();
            }
        };

        const handleKeyDown = (event: KeyboardEvent): void => {
            if (event.key === 'Escape') {
                removePanel();
            }
        };

        // Add event listeners
        button.addEventListener('click', () => openPanel(config, widgetContainer));
        window.addEventListener('popstate', handlePopState);
        eventManager.addListener(window, 'scroll', handleScroll);
        eventManager.addListener(window, 'resize', handleResize);
        eventManager.addListener(document, 'click', handleClickOutside);
        eventManager.addListener(document, 'keydown', handleKeyDown);

        // Initial setup
        document.body.appendChild(widgetContainer);
        handleScroll();

        // Cleanup on unload
        window.addEventListener('unload', () => {
            eventManager.cleanup();
            if (widgetState.domMonitor) {
                widgetState.domMonitor.disconnect();
            }
            widgetContainer.remove();
        });

        console.log('[NowWidget] Initialization complete, checking DOM:', {
            container: document.getElementById('now-widget-root'),
            containerShadowRoot: document.getElementById('now-widget-root')?.shadowRoot,
            button: document.getElementById('now-widget-button-container')
        });

    } catch (error) {
        console.error('Error initializing widget:', error);
        if (widgetState.domMonitor) {
            widgetState.domMonitor.disconnect();
        }
        widgetStore.handleError(error instanceof Error ? error.message : 'Unknown error');
    } finally {
        widgetState.isInitializing = false;
    }
}

async function openPanel(config: WidgetConfig, widgetContainer: HTMLElement): Promise<void> {
    console.log('[NowWidget] Opening panel...');
    if (widgetState.currentPanel) {
        console.log('[NowWidget] Panel exists, removing...');
        await removePanel();
    } else {
        console.log('[NowWidget] Loading and showing panel...');
        await loadAndShowPanel(config, widgetContainer);
    }
}

async function loadAndShowPanel(config: WidgetConfig, widgetContainer: HTMLElement): Promise<void> {
    try {
        console.log('[NowWidget] Loading panel data...');
        widgetStore.setLoading(true);
        await removePanel();

        const [userInfo, posts] = await Promise.all([
            fetchOrgInfo(config.token),
            fetchUserPosts(config.token)
        ]);

        console.log('[NowWidget] Data loaded:', { userInfo, postsCount: posts.length });

        const user = convertOrgInfoToUser(userInfo);
        widgetStore.setUser(user);
        const convertedPosts = posts.map(convertUserPostToPost);
        widgetStore.setPosts(convertedPosts);

        console.log('[NowWidget] Creating panel...');
        widgetState.currentPanel = createNowPanel({
            user,
            posts: convertedPosts,
            orgId: user.id,
            token: config.token
        });

        if (widgetState.currentPanel && widgetContainer.shadowRoot) {
            console.log('[NowWidget] Appending panel to shadow root...');
            
            // Add panel to shadow root
            widgetContainer.shadowRoot.appendChild(widgetState.currentPanel);
            
            // Add panel styles
            const style = document.createElement('style');
            style.textContent = `
                .now-widget-panel {
                    position: fixed;
                    top: 0;
                    right: 0;
                    width: 400px;
                    height: 100vh;
                    background: var(--now-bg-color, #ffffff);
                    box-shadow: -2px 0 8px rgba(0, 0, 0, 0.1);
                    z-index: var(--z-index-panel, 10000);
                    transform: translateX(100%);
                    transition: transform 0.3s ease-in-out;
                }
                
                .now-widget-panel[now-data-position="left"] {
                    left: 0;
                    right: auto;
                    transform: translateX(-100%);
                }
                
                .now-widget-panel.visible {
                    transform: translateX(0);
                }
                
                .now-widget-backdrop {
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100vw;
                    height: 100vh;
                    background: rgba(0, 0, 0, 0.5);
                    z-index: var(--z-index-overlay, 9999);
                    opacity: 0;
                    transition: opacity 0.3s ease-in-out;
                }
                
                .now-widget-backdrop.visible {
                    opacity: 1;
                }
            `;
            widgetContainer.shadowRoot.appendChild(style);
            
            // Show panel with animation
            requestAnimationFrame(() => {
                if (widgetState.currentPanel) {
                    widgetState.currentPanel.classList.add('visible');
                    const backdrop = widgetState.currentPanel.querySelector('.now-widget-backdrop');
                    if (backdrop) {
                        backdrop.classList.add('visible');
                    }
                }
            });
            
            // Setup close handler
            const closeButton = widgetState.currentPanel.querySelector('.close-button');
            if (closeButton) {
                closeButton.addEventListener('click', () => removePanel());
            }
            
            console.log('[NowWidget] Panel initialized and visible');
        } else {
            console.error('[NowWidget] Cannot append panel: container or shadow root missing');
        }
    } catch (error) {
        console.error('[NowWidget] Error loading panel:', error);
        widgetStore.handleError(error instanceof Error ? error.message : 'Failed to load panel');
    } finally {
        widgetStore.setLoading(false);
    }
}

async function removePanel(): Promise<void> {
    console.log('[NowWidget] Removing panel...');
    if (widgetState.currentPanel) {
        // Animate out
        widgetState.currentPanel.classList.remove('visible');
        const backdrop = widgetState.currentPanel.querySelector('.now-widget-backdrop');
        if (backdrop) {
            backdrop.classList.remove('visible');
        }
        
        // Wait for animation
        await new Promise(resolve => setTimeout(resolve, 300));
        
        // Remove from DOM
        widgetState.currentPanel.remove();
        widgetState.currentPanel = null;
        console.log('[NowWidget] Panel removed');
    }
}

function handleUrlChange(button: HTMLElement): void {
    const shouldShow = shouldShowWidget();
    safeUpdateStyle(button, {
        display: shouldShow ? 'block' : 'none'
    });
}

function shouldShowWidget(): boolean {
    return !isInHeroSection();
}

function isInHeroSection(): boolean {
    return !!document.querySelector('.hero-section');
}

async function cleanupExistingWidget(): Promise<void> {
    const existingContainer = document.getElementById('now-widget-root');
    if (existingContainer) {
        existingContainer.remove();
    }

    if (widgetState.domMonitor) {
        widgetState.domMonitor.disconnect();
    }

    widgetState.cleanupFunctions.forEach(cleanup => cleanup());
    widgetState.cleanupFunctions = [];
}

async function createWidgetContainer(config: WidgetConfig): Promise<HTMLElement> {
    const container = await safeCreateContainer('now-widget-root');
    
    // Add container styles
    if (container.shadowRoot) {
        const style = document.createElement('style');
        style.textContent = `
            :host {
                display: block;
                position: relative;
                z-index: 2147483647;
            }
            
            #now-widget-root {
                position: fixed;
                top: 0;
                left: 0;
                width: 0;
                height: 0;
                pointer-events: none;
                z-index: 2147483647;
            }
        `;
        container.shadowRoot.appendChild(style);
    }
    
    injectStyles(
        config.theme || 'light',
        config.position || 'right',
        {
            '--now-widget-button-bg': config.buttonColor,
            '--now-widget-button-size': config.buttonSize ? `${config.buttonSize}px` : undefined,
            '--z-index-button': '2147483647',
            '--z-index-panel': '2147483646',
            '--z-index-overlay': '2147483645'
        }
    );
    
    return container;
}

function setupFadeEffect(button: HTMLElement): void {
    safeUpdateStyle(button, {
        transition: 'opacity 300ms ease-in-out',
        opacity: shouldShowWidget() && isInHeroSection() ? '1' : '0',
        display: shouldShowWidget() ? 'block' : 'none'
    });

    const updateButtonVisibility = () => {
        if (!shouldShowWidget()) {
            safeUpdateStyle(button, {
                display: 'none',
                opacity: '0',
                pointerEvents: 'none'
            });
            return;
        }

        const isVisible = isInHeroSection();
        safeUpdateStyle(button, {
            display: 'block',
            opacity: isVisible ? '1' : '0',
            pointerEvents: isVisible ? 'auto' : 'none'
        });
    };

    updateButtonVisibility();

    const scrollCleanup = eventManager.addListener(
        window,
        'scroll',
        () => requestAnimationFrame(updateButtonVisibility),
        { passive: true }
    );

    widgetState.cleanupFunctions.push(scrollCleanup);
}

export const teardownNowWidget = () => {
    cleanupExistingWidget();
};


--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/components/NowPanelPost.ts
File type: .ts
import { Post } from '../types/types';
import { formatTimeAgo } from '../utils/dateUtils';

export const createPostElement = (post: Post): HTMLElement => {
    const postEl = document.createElement('article');
    postEl.classList.add('now-widget-post');

    const header = document.createElement('div');
    header.classList.add('now-widget-post-header');

    const userInfo = document.createElement('div');
    userInfo.classList.add('now-widget-post-user');

    const userAvatar = document.createElement('img');
    userAvatar.className = 'now-widget-post-avatar';
    userAvatar.src = post.user.avatar || '';
    userAvatar.alt = post.user.name;

    const userName = document.createElement('span');
    userName.classList.add('now-widget-post-username');
    userName.textContent = post.user.name;

    userInfo.appendChild(userAvatar);
    userInfo.appendChild(userName);

    const timestamp = document.createElement('span');
    timestamp.classList.add('now-widget-post-timestamp');
    timestamp.textContent = formatTimeAgo(new Date(post.createdAt));

    header.appendChild(userInfo);
    header.appendChild(timestamp);
    postEl.appendChild(header);

    const content = document.createElement('div');
    content.classList.add('now-widget-post-content');
    content.innerHTML = highlightHashtags(post.content);
    postEl.appendChild(content);

    if (post.attachments && post.attachments.length > 0) {
        const mediaContainer = createMediaContainer(post.attachments);
        postEl.appendChild(mediaContainer);
    }

    const metrics = createMetricsElement(post);
    postEl.appendChild(metrics);

    // Comments section (always visible)
    const commentsContainer = document.createElement('div');
    commentsContainer.classList.add('now-widget-comments-container');

    if (post.comments && post.comments.length > 0) {
        post.comments.forEach(comment => {
            const commentEl = document.createElement('div');
            commentEl.classList.add('now-widget-comment');

            const commentHeader = document.createElement('div');
            commentHeader.classList.add('now-widget-comment-header');

            const commentAvatar = document.createElement('img');
            commentAvatar.src = comment.user.avatar || '';
            commentAvatar.alt = comment.user.name;
            commentAvatar.classList.add('now-widget-comment-avatar');

            const commentOrgInfo = document.createElement('div');
            commentOrgInfo.classList.add('now-widget-comment-org-info');

            const commentUserName = document.createElement('span');
            commentUserName.classList.add('now-widget-comment-username');
            commentUserName.textContent = comment.user.name;

            const commentTime = document.createElement('span');
            commentTime.classList.add('now-widget-comment-time');
            commentTime.textContent = formatTimeAgo(new Date(comment.createdAt));

            commentOrgInfo.appendChild(commentUserName);
            commentOrgInfo.appendChild(commentTime);

            commentHeader.appendChild(commentAvatar);
            commentHeader.appendChild(commentOrgInfo);

            const commentContent = document.createElement('p');
            commentContent.classList.add('now-widget-comment-content');
            commentContent.textContent = comment.content;

            commentEl.appendChild(commentHeader);
            commentEl.appendChild(commentContent);
            commentsContainer.appendChild(commentEl);
        });
    }

    postEl.appendChild(commentsContainer);

    return postEl;
};

const createMetricsElement = (post: Post): HTMLElement => {
    const metrics = document.createElement('div');
    metrics.classList.add('now-widget-post-metrics');

    const likes = document.createElement('button');
    likes.classList.add('now-widget-metric-button');
    likes.innerHTML = `<svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg> ${post._count.likes}`;

    const comments = document.createElement('button');
    comments.classList.add('now-widget-metric-button');
    comments.innerHTML = `<svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path></svg> ${post._count.comments}`;

    comments.addEventListener('click', () => {
        const commentsContainer = metrics.parentElement?.querySelector('.now-widget-comments-container') as HTMLDivElement;
        if (commentsContainer) {
            const isVisible = commentsContainer.style.display !== 'none';
            commentsContainer.style.display = isVisible ? 'none' : 'block';
        }
    });

    metrics.appendChild(likes);
    metrics.appendChild(comments);

    return metrics;
};

const createMediaContainer = (attachments: any[]): HTMLElement => {
    const container = document.createElement('div');
    container.classList.add('now-widget-media-container');

    attachments.forEach(attachment => {
        if (attachment.type === 'image') {
            const img = document.createElement('img');
            img.src = attachment.url;
            img.alt = 'Post attachment';
            img.classList.add('now-widget-media');
            container.appendChild(img);
        } else if (attachment.type === 'video') {
            const video = document.createElement('video');
            video.src = attachment.url;
            video.controls = true;
            video.classList.add('now-widget-media');
            container.appendChild(video);
        }
    });

    return container;
};

const highlightHashtags = (content: string): string => {
    return content.replace(/#(\w+)/g, '<a href="/hashtag/$1" class="now-widget-hashtag">#$1</a>');
};

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/components/NowPanelContent.ts
File type: .ts
import { Post, User } from '../types/types';
import { formatTimeAgo } from '../utils/dateUtils';
import { fetchUserPosts } from '../api/auth';

interface PanelConfig {
  posts: Post[];
  user: User | null;
  onLoadMore?: () => void;
  orgId: string;
  token: string;
}

function createErrorState(title: string, message: string, type: 'error' | 'empty' = 'error'): HTMLElement {
  const container = document.createElement('div');
  container.className = 'now-widget-error-state';
  
  const icon = document.createElement('div');
  icon.className = 'now-widget-error-icon';
  
  const iconSvg = type === 'error' 
      ? '<svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line></svg>'
      : '<svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor"><circle cx="12" cy="12" r="10"></circle><path d="M8 14s1.5 2 4 2 4-2 4-2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line></svg>';
  
  icon.innerHTML = iconSvg;
  
  const titleEl = document.createElement('h3');
  titleEl.className = 'now-widget-error-title';
  titleEl.textContent = title;
  
  const text = document.createElement('p');
  text.className = 'now-widget-error-message';
  text.textContent = message;
  
  container.appendChild(icon);
  container.appendChild(titleEl);
  container.appendChild(text);
  
  return container;
}

const createCommentsList = (comments: any[]): HTMLElement => {
  const container = document.createElement('div');
  container.classList.add('now-widget-comments');
  
  comments.forEach(comment => {
    const commentEl = document.createElement('div');
    commentEl.classList.add('now-widget-comment');
    
    const commentHeader = document.createElement('div');
    commentHeader.classList.add('now-widget-comment-header');
    
    const avatar = document.createElement('img');
    avatar.src = comment.user.image;
    avatar.alt = comment.user.name;
    avatar.classList.add('now-widget-comment-avatar');
    
    const userName = document.createElement('span');
    userName.classList.add('now-widget-comment-username');
    userName.textContent = comment.user.name;
    
    const timeAgo = document.createElement('span');
    timeAgo.classList.add('now-widget-comment-time');
    timeAgo.textContent = formatTimeAgo(new Date(comment.createdAt));
    
    commentHeader.appendChild(avatar);
    commentHeader.appendChild(userName);
    commentHeader.appendChild(timeAgo);
    
    const content = document.createElement('p');
    content.classList.add('now-widget-comment-content');
    content.textContent = comment.content;
    
    commentEl.appendChild(commentHeader);
    commentEl.appendChild(content);
    container.appendChild(commentEl);
  });
  
  return container;
};

const createPostElement = (post: Post): HTMLElement => {
  const postEl = document.createElement('div');
  postEl.classList.add('now-widget-post');

  const postTime = document.createElement('p');
  postTime.classList.add('now-widget-post-time');
  const timeAgo = formatTimeAgo(new Date(post.createdAt));
  postTime.textContent = timeAgo;

  const postContent = document.createElement('p');
  postContent.classList.add('now-widget-post-content');
  postContent.textContent = post.content;

  const postStats = document.createElement('div');
  postStats.classList.add('now-widget-post-stats');

  const likes = document.createElement('span');
  likes.classList.add('now-widget-post-stat');
  likes.innerHTML = `<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
    <path d="M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"></path>
  </svg> ${post._count?.likes || 0}`;

  const comments = document.createElement('span');
  comments.classList.add('now-widget-post-stat');
  comments.innerHTML = `<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
    <path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path>
  </svg> ${post._count?.comments || 0}`;

  // Add click handler for comments
  if (post.comments?.length) {
    const commentsContainer = document.createElement('div');
    commentsContainer.classList.add('now-widget-comments-container');
    commentsContainer.style.display = 'none';
    
    const commentsList = createCommentsList(post.comments);
    commentsContainer.appendChild(commentsList);
    
    comments.addEventListener('click', () => {
      const isVisible = commentsContainer.style.display === 'block';
      commentsContainer.style.display = isVisible ? 'none' : 'block';
      comments.classList.toggle('active');
    });
    
    postEl.appendChild(commentsContainer);
  }

  postStats.appendChild(likes);
  postStats.appendChild(comments);

  postEl.appendChild(postTime);
  postEl.appendChild(postContent);
  postEl.appendChild(postStats);

  if (post.attachments && post.attachments.length > 0) {
    const firstAttachment = post.attachments[0];
    if (firstAttachment.type === 'image') {
      const postImage = document.createElement('div');
      postImage.classList.add('now-widget-post-image');
      postImage.style.backgroundImage = `url(${firstAttachment.url})`;
      postEl.appendChild(postImage);
    }
  }

  return postEl;
};

export function createNowPanel(config: PanelConfig): HTMLElement {
  const { posts, user } = config;

  const panel = document.createElement('div');
  panel.className = 'now-widget-panel';
  panel.setAttribute('now-data-position', document.body.getAttribute('data-widget-position') || 'right');
  
  // Create backdrop
  const backdrop = document.createElement('div');
  backdrop.className = 'now-widget-backdrop';
  backdrop.addEventListener('click', () => {
    panel.dispatchEvent(new CustomEvent('close'));
  });
  
  // Create header
  const header = document.createElement('div');
  header.className = 'panel-header';
  header.innerHTML = `
    <div class="header-content">
      <h2 id="panel-title">Latest Updates</h2>
      <button class="close-button" aria-label="Close panel">×</button>
    </div>
  `;
  
  // Create content container
  const content = document.createElement('div');
  content.className = 'panel-content';
  
  // Add styles
  const styles = document.createElement('style');
  styles.textContent = `
    .panel-header {
      padding: 1rem;
      border-bottom: 1px solid var(--now-border-color, rgba(255, 255, 255, 0.1));
      background: var(--now-bg-color);
    }
    
    .header-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    #panel-title {
      margin: 0;
      font-size: 1.2rem;
      font-weight: 600;
      color: var(--now-text-color);
    }
    
    .close-button {
      background: none;
      border: none;
      color: var(--now-text-color);
      font-size: 1.5rem;
      cursor: pointer;
      padding: 0.5rem;
      line-height: 1;
      opacity: 0.7;
      transition: opacity 200ms ease;
    }
    
    .close-button:hover {
      opacity: 1;
    }
    
    .panel-content {
      height: calc(100vh - 4rem);
      overflow-y: auto;
      padding: 1rem;
    }
    
    .panel-content::-webkit-scrollbar {
      width: 8px;
    }
    
    .panel-content::-webkit-scrollbar-track {
      background: transparent;
    }
    
    .panel-content::-webkit-scrollbar-thumb {
      background: var(--now-border-color, rgba(255, 255, 255, 0.1));
      border-radius: 4px;
    }
    
    .now-widget-error-state {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      padding: 2rem;
      text-align: center;
      color: var(--now-text-color);
    }
    
    .now-widget-error-icon {
      margin-bottom: 1rem;
      opacity: 0.7;
    }
    
    .now-widget-error-title {
      margin: 0 0 0.5rem;
      font-size: 1.1rem;
    }
    
    .now-widget-error-message {
      margin: 0;
      opacity: 0.7;
      font-size: 0.9rem;
    }
    
    @media (max-width: 768px) {
      .panel-content {
        height: calc(100vh - 3rem);
      }
    }
  `;
  
  panel.appendChild(styles);
  panel.appendChild(backdrop);
  panel.appendChild(header);
  panel.appendChild(content);
  
  // Add close button handler
  const closeButton = header.querySelector('.close-button');
  if (closeButton) {
    closeButton.addEventListener('click', () => {
      panel.dispatchEvent(new CustomEvent('close'));
    });
  }
  
  // If no user found, show error state
  if (!user) {
    const errorContent = createErrorState(
      'User Not Found',
      'We couldn\'t find this user in our system. The user ID might be incorrect or the account might have been removed.',
      'error'
    );
    content.appendChild(errorContent);
    return panel;
  }

  // If user exists but has no posts
  if (posts.length === 0) {
    const emptyContent = createErrorState(
      'No Posts Yet',
      'This user hasn\'t shared any updates yet.',
      'empty'
    );
    content.appendChild(emptyContent);
    return panel;
  }

  // Header with user info (fixed)
  const userInfo = document.createElement('div');
  userInfo.classList.add('now-widget-org-info');

  // Avatar and user details container
  const userContainer = document.createElement('div');
  userContainer.classList.add('now-widget-user-container');

  const userAvatar = document.createElement('img');
  userAvatar.className = 'now-widget-user-avatar';
  userAvatar.src = user.avatar || '';
  userAvatar.alt = user.name;

  const userDetails = document.createElement('div');
  userDetails.classList.add('now-widget-user-details');

  const userName = document.createElement('h2');
  userName.classList.add('now-widget-user-name');
  userName.textContent = user.displayName || user.name || 'User';

  const userRole = document.createElement('p');
  userRole.classList.add('now-widget-user-role');
  userRole.textContent = user.bio || '';

  const userStats = document.createElement('p');
  userStats.classList.add('now-widget-user-stats');
  userStats.textContent = `${user.followers || 0} followers`;

  userDetails.appendChild(userName);
  userDetails.appendChild(userRole);
  userDetails.appendChild(userStats);

  userContainer.appendChild(userAvatar);
  userContainer.appendChild(userDetails);
  userInfo.appendChild(userContainer);
  content.appendChild(userInfo);

  // Posts container
  const postsContainer = document.createElement('div');
  postsContainer.classList.add('now-widget-posts');

  posts.forEach(post => {
    const postEl = createPostElement(post);
    postsContainer.appendChild(postEl);
  });

  content.appendChild(postsContainer);

  // Add infinite scroll
  let isLoading = false;
  let currentPage = 1;
  let hasError = false;

  const loadMoreContent = async (): Promise<void> => {
    isLoading = true;
    hasError = false;
    
    try {
      const response = await fetchUserPosts(config.orgId);
      if (!response || !Array.isArray(response)) {
        throw new Error('Invalid response format');
      }

      const posts = response.map(post => ({
        id: post.id,
        content: post.content,
        timestamp: post.timestamp,
        createdAt: post.timestamp,
        attachments: post.attachments || [],
        comments: post.comments || [],
        user: post.user || {
          id: '',
          name: '',
          email: '',
          emailVerified: false,
          avatar: '',
          status: '',
          followers: 0
        },
        _count: {
          likes: 0,
          comments: (post.comments || []).length
        }
      }));

      posts.forEach(post => {
        const postEl = createPostElement(post);
        postsContainer.appendChild(postEl);
      });
      currentPage++;
    } catch (error) {
      hasError = true;
      const errorEl = createErrorState(
        'Error Loading Posts',
        error instanceof Error ? error.message : 'An unknown error occurred',
        'error'
      );
      content.appendChild(errorEl);
    } finally {
      isLoading = false;
    }
  };

  content.addEventListener('scroll', async () => {
    if (isLoading || hasError) return;
    
    const { scrollTop, scrollHeight, clientHeight } = content;
    if (scrollTop + clientHeight >= scrollHeight - 100) {
      await loadMoreContent();
    }
  });

  return panel;
}

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/api/auth.ts
File type: .ts
import { environment, API_ENDPOINTS } from '../config/environment';
import { User, Post, OrgInfo, UserPost } from '../types/types';
import { getSecurityHeaders, sanitizeInput } from '../config/security';

interface ApiResponse<T> {
    success: boolean;
    data?: T;
    error?: string;
}

interface UserResponse {
    user: User;
}

interface PostsResponse {
    posts: Post[];
}

const MAX_RETRIES = 3;
const RETRY_DELAY = 1000;

async function wait(ms: number): Promise<void> {
    return new Promise(resolve => setTimeout(resolve, ms));
}

async function makeApiRequest<T>(
    endpoint: string,
    options: RequestInit,
    retries: number = MAX_RETRIES
): Promise<ApiResponse<T>> {
    try {
        if (environment.IS_DEVELOPMENT) {
            console.log(`API Request: ${endpoint}`, options);
        }

        const securityHeaders = getSecurityHeaders();
        const response = await fetch(endpoint, {
            ...options,
            headers: {
                ...securityHeaders,
                ...options.headers,
                'Accept': 'application/json',
                'X-Client-Version': '1.0.0',
                'X-Environment': environment.IS_DEVELOPMENT ? 'development' : 'production'
            }
        });

        if (!response.ok) {
            if (response.status === 429 && retries > 0) {
                await wait(RETRY_DELAY);
                return makeApiRequest(endpoint, options, retries - 1);
            }

            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        
        if (environment.IS_DEVELOPMENT) {
            console.log(`API Response: ${endpoint}`, data);
        }

        return {
            success: true,
            data
        };
    } catch (error) {
        if (retries > 0) {
            await wait(RETRY_DELAY);
            return makeApiRequest(endpoint, options, retries - 1);
        }

        console.error('API request failed:', error);
        return {
            success: false,
            error: error instanceof Error ? error.message : 'Unknown error occurred'
        };
    }
}

export async function fetchOrgInfo(token: string): Promise<OrgInfo> {
    if (!environment.IS_BROWSER) {
        throw new Error('API calls are not supported in non-browser environments');
    }

    const response = await makeApiRequest<UserResponse>(
        API_ENDPOINTS.ORG_INFO.replace('{orgId}', 'me'),
        {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`
            }
        }
    );

    if (response.success && response.data) {
        const { user } = response.data;
        return {
            id: user.id,
            name: user.name,
            email: user.email,
            emailVerified: user.emailVerified,
            avatar: user.avatar,
            status: user.status,
            displayName: user.displayName,
            bio: user.bio,
            followers: user.followers
        };
    }

    throw new Error(response.error || 'Failed to fetch user info');
}

export async function fetchUserPosts(token: string): Promise<UserPost[]> {
    if (!environment.IS_BROWSER) {
        throw new Error('API calls are not supported in non-browser environments');
    }

    const response = await makeApiRequest<PostsResponse>(
        API_ENDPOINTS.ORG_POSTS.replace('{orgId}', 'me'),
        {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`
            }
        }
    );

    if (response.success && response.data) {
        return response.data.posts;
    }

    throw new Error(response.error || 'Failed to fetch user posts');
}

export async function updateStatus(token: string, status: string): Promise<void> {
    if (!environment.IS_BROWSER) {
        throw new Error('API calls are not supported in non-browser environments');
    }

    const sanitizedStatus = sanitizeInput(status);
    
    const response = await makeApiRequest<{ status: string }>(API_ENDPOINTS.UPDATE_STATUS, {
        method: 'POST',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ status: sanitizedStatus })
    });

    if (!response.success) {
        throw new Error(response.error || 'Failed to update status');
    }
}

--------------------------------------------------
File End
--------------------------------------------------


../now-widget/src/services/ApiService.ts
File type: .ts
import { Post, User } from '../types/types';

export class ApiService {
  private baseUrl: string;
  private token: string;

  constructor(baseUrl: string, token: string) {
    this.baseUrl = baseUrl;
    this.token = token;
  }

  private async request<T>(endpoint: string, options: RequestInit = {}): Promise<T> {
    const response = await fetch(`${this.baseUrl}${endpoint}`, {
      ...options,
      headers: {
        'Authorization': `Bearer ${this.token}`,
        'Content-Type': 'application/json',
        ...options.headers,
      },
    });

    if (!response.ok) {
      throw new Error(`API request failed: ${response.statusText}`);
    }

    return response.json();
  }

  public async getOrgInfo(orgId: string): Promise<User> {
    return this.request<User>(`/api/widget/org-info?orgId=${orgId}`);
  }

  public async getUserPosts(orgId: string): Promise<Post[]> {
    return this.request<Post[]>(`/api/widget/org-posts?orgId=${orgId}`);
  }
}

--------------------------------------------------
File End
--------------------------------------------------
